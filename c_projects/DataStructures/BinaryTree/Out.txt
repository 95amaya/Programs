Script started on Thu 10 Nov 2016 12:17:37 PM CST
[4mfox04[24m:[1m~/Desktop/BinaryTree[0m> d[Kvalgrind driver
==10804== Memcheck, a memory error detector
==10804== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==10804== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info
==10804== Command: driver
==10804== 
Enter a Command for set arithmetic (type H for help)
> hellp
  Quit -- Quit the program
  Help -- Display this help message
  Insert x <positive number> -- Inserts x into binary tree
  Delete x <positive number> -- Deletes x from binary tree
  Find x <positive number> -- Searches for x in tree and returns node
  Display -- Displays tree with prettyprint
  Inorder -- Displays tree with inorder traversal
  Preorder -- Displays tree with preorder traversal
  Postorder -- Displays tree with postorder traversal
  Levelorder -- Displays tree with levelorder traversal
  Height -- Finds the height of the tree
  Count -- Finds the number of elements in the tree
  Sum -- Finds the sum of the tree
  Min -- Finds the min of the tree
  Max -- Finds the max value of the tree
Enter a Command for set arithmetic (type H for help)
> display       insert 5
Insert: 5
Enter a Command for set arithmetic (type H for help)
> insert 3
Insert: 3
Enter a Command for set arithmetic (type H for help)
> insert 7
Insert: 7
Enter a Command for set arithmetic (type H for help)
> display
Display
        7
    5
        3
Enter a Command for set arithmetic (type H for help)
> insert j 6
Insert: 6
Enter a Command for set arithmetic (type H for help)
> insert 8
Insert: 8
Enter a Command for set arithmetic (type H for help)
> insert 2
Insert: 2
Enter a Command for set arithmetic (type H for help)
> inset rt 4
Insert: 4
Enter a Command for set arithmetic (type H for help)
> display
Display
            8
        7
            6
    5
            4
        3
            2
Enter a Command for set arithmetic (type H for help)
> delete 7
Delete: 7
Enter a Command for set arithmetic (type H for help)
> display
Display
        8
            6
    5
            4
        3
            2
Enter a Command for set arithmetic (type H for help)
> inorder
Inorder: 2 3 4 5 6 8 
Enter a Command for set arithmetic (type H for help)
> preorder
Preorder: 5 3 2 4 8 6 
Enter a Command for set arithmetic (type H for help)
> postorder
Postorder: 2 4 3 6 8 5 
Enter a Command for set arithmetic (type H for help)
> levelorder
Levelorder: 5 3 8 2 4 6 
Enter a Command for set arithmetic (type H for help)
> min   help
  Quit -- Quit the program
  Help -- Display this help message
  Insert x <positive number> -- Inserts x into binary tree
  Delete x <positive number> -- Deletes x from binary tree
  Find x <positive number> -- Searches for x in tree and returns node
  Display -- Displays tree with prettyprint
  Inorder -- Displays tree with inorder traversal
  Preorder -- Displays tree with preorder traversal
  Postorder -- Displays tree with postorder traversal
  Levelorder -- Displays tree with levelorder traversal
  Height -- Finds the height of the tree
  Count -- Finds the number of elements in the tree
  Sum -- Finds the sum of the tree
  Min -- Finds the min of the tree
  Max -- Finds the max value of the tree
Enter a Command for set arithmetic (type H for help)
> heigh     display
Display
        8
            6
    5
            4
        3
            2
Enter a Command for set arithmetic (type H for help)
> height
Height: 
Enter a Command for set arithmetic (type H for help)
> count
Count: 
Enter a Command for set arithmetic (type H for help)
> sume
Sum: 
Enter a Command for set arithmetic (type H for help)
> max
Max: 

Enter a Command for set arithmetic (type H for help)
> min
Min: 

Enter a Command for set arithmetic (type H for help)
> quit
Exiting Program
==10804== 
==10804== HEAP SUMMARY:
==10804==     in use at exit: 0 bytes in 0 blocks
==10804==   total heap usage: 7 allocs, 7 frees, 168 bytes allocated
==10804== 
==10804== All heap blocks were freed -- no leaks are possible
==10804== 
==10804== For counts of detected and suppressed errors, rerun with: -v
==10804== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[4mfox04[24m:[1m~/Desktop/BinaryTree[0m> make
gcc  -c driver.c
gcc  -o driver driver.o tree.o
[4mfox04[24m:[1m~/Desktop/BinaryTree[0m> ;[Kdriver
Enter a Command for set arithmetic (type H for help)
> a insert 1
Insert: 1
Enter a Command for set arithmetic (type H for help)
> insert 3
Insert: 3
Enter a Command for set arithmetic (type H for help)
> insert 2
Insert: 2
Enter a Command for set arithmetic (type H for help)
> insert 4
Insert: 4
Enter a Command for set arithmetic (type H for help)
> display
Display
            4
        3
            2
    1
Enter a Command for set arithmetic (type H for help)
> height
Height: 
Enter a Command for set arithmetic (type H for help)
> sum
Sum: 10
Enter a Command for set arithmetic (type H for help)
> min
Min: 1
Enter a Command for set arithmetic (type H for help)
> max
Max: 4
Enter a Command for set arithmetic (type H for help)
> quit
Exiting Program
[4mfox04[24m:[1m~/Desktop/BinaryTree[0m> make
gcc  -c driver.c
gcc  -o driver driver.o tree.o
[4mfox04[24m:[1m~/Desktop/BinaryTree[0m> driver
Enter a Command for set arithmetic (type H for help)
> insert 1
Insert: 1
Enter a Command for set arithmetic (type H for help)
> insert 3
Insert: 3
Enter a Command for set arithmetic (type H for help)
> insert 2
Insert: 2
Enter a Command for set arithmetic (type H for help)
> insert 4
Insert: 4
Enter a Command for set arithmetic (type H for help)
> d display
Display
            4
        3
            2
    1
Enter a Command for set arithmetic (type H for help)
> de  height
Height: 3
Enter a Command for set arithmetic (type H for help)
> sum
Sum: 10
Enter a Command for set arithmetic (type H for help)
> count
Count: 4
Enter a Command for set arithmetic (type H for help)
> min
Min: 1
Enter a Command for set arithmetic (type H for help)
> max
Max: 4
Enter a Command for set arithmetic (type H for help)
> quit
Exiting Program
[4mfox04[24m:[1m~/Desktop/BinaryTree[0m> script out[K[K[KOut.txt
Script started, file is Out.txt
[4mfox04[24m:[1m~/Desktop/BinaryTree[0m> valgring [Kd driver.c
valgrind: ./driver.c: Permission denied
[4mfox04[24m:[1m~/Desktop/BinaryTree[0m> valgrind driver.c[K[K
==11084== Memcheck, a memory error detector
==11084== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==11084== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info
==11084== Command: driver
==11084== 
Enter a Command for set arithmetic (type H for help)
> help
  Quit -- Quit the program
  Help -- Display this help message
  Insert x <positive number> -- Inserts x into binary tree
  Delete x <positive number> -- Deletes x from binary tree
  Find x <positive number> -- Searches for x in tree and returns node
  Display -- Displays tree with prettyprint
  Inorder -- Displays tree with inorder traversal
  Preorder -- Displays tree with preorder traversal
  Postorder -- Displays tree with postorder traversal
  Levelorder -- Displays tree with levelorder traversal
  Height -- Finds the height of the tree
  Count -- Finds the number of elements in the tree
  Sum -- Finds the sum of the tree
  Min -- Finds the min of the tree
  Max -- Finds the max value of the tree
Enter a Command for set arithmetic (type H for help)
> insert 5
Insert: 5
Enter a Command for set arithmetic (type H for help)
> insert 3
Insert: 3
Enter a Command for set arithmetic (type H for help)
> insert 7
Insert: 7
Enter a Command for set arithmetic (type H for help)
> display
Display
        7
    5
        3
Enter a Command for set arithmetic (type H for help)
> insert 2
Insert: 2
Enter a Command for set arithmetic (type H for help)
> insert 4
Insert: 4
Enter a Command for set arithmetic (type H for help)
> insert 6
Insert: 6
Enter a Command for set arithmetic (type H for help)
> insert 8
Insert: 8
Enter a Command for set arithmetic (type H for help)
> display
Display
            8
        7
            6
    5
            4
        3
            2
Enter a Command for set arithmetic (type H for help)
> inorder  
Inorder: 2 3 4 5 6 7 8 
Enter a Command for set arithmetic (type H for help)
> preorder
Preorder: 5 3 2 4 7 6 8 
Enter a Command for set arithmetic (type H for help)
> postorder
Postorder: 2 4 3 6 8 7 5 
Enter a Command for set arithmetic (type H for help)
> levle  elorder
Levelorder: 5 3 7 2 4 6 8 
Enter a Command for set arithmetic (type H for help)
> delete 7
Delete: 7
Enter a Command for set arithmetic (type H for help)
> display
Display
        8
            6
    5
            4
        3
            2
Enter a Command for set arithmetic (type H for help)
> inorder
Inorder: 2 3 4 5 6 8 
Enter a Command for set arithmetic (type H for help)
> hight    eight
Height: 3
Enter a Command for set arithmetic (type H for help)
> count
Count: 6
Enter a Command for set arithmetic (type H for help)
> sum
Sum: 28
Enter a Command for set arithmetic (type H for help)
> min
Min: 2
Enter a Command for set arithmetic (type H for help)
> max
Max: 8
Enter a Command for set arithmetic (type H for help)
> k quit
Exiting Program
==11084== 
==11084== HEAP SUMMARY:
==11084==     in use at exit: 0 bytes in 0 blocks
==11084==   total heap usage: 7 allocs, 7 frees, 168 bytes allocated
==11084== 
==11084== All heap blocks were freed -- no leaks are possible
==11084== 
==11084== For counts of detected and suppressed errors, rerun with: -v
==11084== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[4mfox04[24m:[1m~/Desktop/BinaryTree[0m> ^Dexit
Script done, file is Out.txt
[4mfox04[24m:[1m~/Desktop/BinaryTree[0m> cat Outtx[K[K,t[K[K.txt
Script started on Thu 10 Nov 2016 12:29:08 PM CST
[4mfox04[24m:[1m~/Desktop/BinaryTree[0m> valgring [Kd driver.c
valgrind: ./driver.c: Permission denied
[4mfox04[24m:[1m~/Desktop/BinaryTree[0m> valgrind driver.c[K[K
==11084== Memcheck, a memory error detector
==11084== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==11084== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info
==11084== Command: driver
==11084== 
Enter a Command for set arithmetic (type H for help)
> help
  Quit -- Quit the program
  Help -- Display this help message
  Insert x <positive number> -- Inserts x into binary tree
  Delete x <positive number> -- Deletes x from binary tree
  Find x <positive number> -- Searches for x in tree and returns node
  Display -- Displays tree with prettyprint
  Inorder -- Displays tree with inorder traversal
  Preorder -- Displays tree with preorder traversal
  Postorder -- Displays tree with postorder traversal
  Levelorder -- Displays tree with levelorder traversal
  Height -- Finds the height of the tree
  Count -- Finds the number of elements in the tree
  Sum -- Finds the sum of the tree
  Min -- Finds the min of the tree
  Max -- Finds the max value of the tree
Enter a Command for set arithmetic (type H for help)
> insert 5
Insert: 5
Enter a Command for set arithmetic (type H for help)
> insert 3
Insert: 3
Enter a Command for set arithmetic (type H for help)
> insert 7
Insert: 7
Enter a Command for set arithmetic (type H for help)
> display
Display
        7
    5
        3
Enter a Command for set arithmetic (type H for help)
> insert 2
Insert: 2
Enter a Command for set arithmetic (type H for help)
> insert 4
Insert: 4
Enter a Command for set arithmetic (type H for help)
> insert 6
Insert: 6
Enter a Command for set arithmetic (type H for help)
> insert 8
Insert: 8
Enter a Command for set arithmetic (type H for help)
> display
Display
            8
        7
            6
    5
            4
        3
            2
Enter a Command for set arithmetic (type H for help)
> inorder  
Inorder: 2 3 4 5 6 7 8 
Enter a Command for set arithmetic (type H for help)
> preorder
Preorder: 5 3 2 4 7 6 8 
Enter a Command for set arithmetic (type H for help)
> postorder
Postorder: 2 4 3 6 8 7 5 
Enter a Command for set arithmetic (type H for help)
> levle  elorder
Levelorder: 5 3 7 2 4 6 8 
Enter a Command for set arithmetic (type H for help)
> delete 7
Delete: 7
Enter a Command for set arithmetic (type H for help)
> display
Display
        8
            6
    5
            4
        3
            2
Enter a Command for set arithmetic (type H for help)
> inorder
Inorder: 2 3 4 5 6 8 
Enter a Command for set arithmetic (type H for help)
> hight    eight
Height: 3
Enter a Command for set arithmetic (type H for help)
> count
Count: 6
Enter a Command for set arithmetic (type H for help)
> sum
Sum: 28
Enter a Command for set arithmetic (type H for help)
> min
Min: 2
Enter a Command for set arithmetic (type H for help)
> max
Max: 8
Enter a Command for set arithmetic (type H for help)
> k quit
Exiting Program
==11084== 
==11084== HEAP SUMMARY:
==11084==     in use at exit: 0 bytes in 0 blocks
==11084==   total heap usage: 7 allocs, 7 frees, 168 bytes allocated
==11084== 
==11084== All heap blocks were freed -- no leaks are possible
==11084== 
==11084== For counts of detected and suppressed errors, rerun with: -v
==11084== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[4mfox04[24m:[1m~/Desktop/BinaryTree[0m> ^Dexit

Script done on Thu 10 Nov 2016 12:31:27 PM CST
[4mfox04[24m:[1m~/Desktop/BinaryTree[0m> make
gcc  -c driver.c
gcc  -o driver driver.o tree.o
[4mfox04[24m:[1m~/Desktop/BinaryTree[0m> dir[K[Kriver
Enter a binary tree command (type H for help)
> help
  Quit -- Quit the program
  Help -- Display this help message
  Insert x <positive number> -- Inserts x into binary tree
  Delete x <positive number> -- Deletes x from binary tree
  Find x <positive number> -- Searches for x in tree and returns node
  Display -- Displays tree with prettyprint
  Inorder -- Displays tree with inorder traversal
  Preorder -- Displays tree with preorder traversal
  Postorder -- Displays tree with postorder traversal
  Levelorder -- Displays tree with levelorder traversal
  Height -- Finds the height of the tree
  Count -- Finds the number of elements in the tree
  Sum -- Finds the sum of the tree
  Min -- Finds the min of the tree
  Max -- Finds the max value of the tree
Enter a binary tree command (type H for help)
> quit
Exiting Program
[4mfox04[24m:[1m~/Desktop/BinaryTree[0m> vi tree.c
[?1000h[?1049h[?1h=[2;1H▽[6n[1;1H  [1;1H[1;45r[?12;25h[?12l[?25h[27m[m[40m[H[2J[?25l[45;1H"tree.c" [dos] 317L, 6947C[>c[1;1H[1m[33m  1 [m[40m[1m[34m#include [m[40m[1m[31m<stdio.h>[m[40m
[1m[33m  2 [m[40m[1m[34m#include [m[40m[1m[31m<stdlib.h>[m[40m
[1m[33m  3 [m[40m[1m[34m#include [m[40m[1m[31m"tree.h"[m[40m
[1m[33m  4 
  5 [m[40m[1m[34m#define max(a,b) (a>b?a:b)[m[40m
[1m[33m  6 [m[40m[1m[34m#define min(a,b) (a>b?b:a)[m[40m
[1m[33m  7 [m[40m[1m[36m// Tree Methods[m[40m
[1m[33m  8 [m[40m[1m[36m// Instantiating tree[m[40m
[1m[33m  9 [m[40m[1m[36m/*typedef struct nodeT {[m[40m
[1m[33m 10 [m[40m[1m[36m    int key;[m[40m
[1m[33m 11 [m[40m[1m[36m    struct nodeT *left, *right;[m[40m
[1m[33m 12 [m[40m[1m[36m} nodeT, *treeT;[m[40m
[1m[33m 13 [m[40m[1m[36m*/[m[40m
[1m[33m 14 [m[40m[1m[36m/*struct treeADT    {[m[40m
[1m[33m 15 [m[40m[1m[36m    nodeT *root;[m[40m
[1m[33m 16 [m[40m[1m[36m    nodeT *left;[m[40m
[1m[33m 17 [m[40m[1m[36m    nodeT *right;[m[40m
[1m[33m 18 [m[40m[1m[36m}*/[m[40m
[1m[33m 19 
 20 [m[40m[1m[36m/*treeADT NewBinaryTree() // Create empty binary tree[m[40m
[1m[33m 21 [m[40m[1m[36m{[m[40m
[1m[33m 22 [m[40m[1m[36m    treeADT tmp;[m[40m
[1m[33m 23 [m[40m[1m[36m    tmp = (treeADT)malloc(sizeof(struct treeADT));[m[40m
[1m[33m 24 [m[40m[1m[36m    if(tmp == NULL) return NULL;[m[40m
[1m[33m 25 [m[40m[1m[36m    tmp->root = tmp->right = tmp->left = NULL;[m[40m
[1m[33m 26 [m[40m[1m[36m    return tmp;[m[40m
[1m[33m 27 [m[40m[1m[36m}*/[m[40m
[1m[33m 28 
 29 [m[40mnodeT *NewBinaryTree() [1m[36m// Create empty binary tree[m[40m
[1m[33m 30 [m[40m{
[1m[33m 31 [m[40m    treeT tmp;
[1m[33m 32 [m[40m    [1m[36m//tmp = (treeT)malloc(sizeof(struct nodeT)); // allocate nodeT structure wh[m[40m[33;1H[1m[33m 33 [m[40m    tmp = (treeT)malloc([1m[33msizeof[m[40m(nodeT *)); [1m[36m// allocate for pointer but not node [m[40m[34;1H[1m[33m 34 [m[40m    [1m[33mif[m[40m(tmp == [1m[31mNULL[m[40m) [1m[33mreturn[m[40m [1m[31mNULL[m[40m;
[1m[33m 35 [m[40m    tmp->right = tmp->left = [1m[31mNULL[m[40m;
[1m[33m 36 [m[40m    tmp->key = [1m[31m0[m[40m;
[1m[33m 37 [m[40m    printf([1m[31m"new tree: [m[40m[1m[35m%p[m[40m[1m[31m key = [m[40m[1m[35m%d\n[m[40m[1m[31m"[m[40m, tmp, tmp->key);
[1m[33m 38 [m[40m    [1m[36m//*tmp = NULL;[m[40m
[1m[33m 39 [m[40m    [1m[33mreturn[m[40m tmp;
[1m[33m 40 [m[40m}
[1m[33m 41 
 42 [m[40m[1m[32mvoid[m[40m FreeTree(nodeT *tree)
[1m[33m 43 [m[40m{
[1m[33m 44 [m[40m    [1m[33mif[m[40m(tree == [1m[31mNULL[m[40m)[45;66H1,1[11CTop]2;tree.c (~/Desktop/BinaryTree) - VIM[1;5H[?12l[?25h[?1000l[?1002h[?25l[45;66H2[2;5H[?12l[?25h[?25l[45;66H3[3;5H[?12l[?25h[?25l[45;66H4,0-1[4;5H[?12l[?25h[?25l[45;66H5,1  [5;5H[?12l[?25h[?25l[45;66H6[6;5H[?12l[?25h[?25l[45;66H7[7;5H[?12l[?25h[?25l[45;66H8[8;5H[?12l[?25h[?25l[45;66H9[9;5H[?12l[?25h[?25l[45;66H10,1-4[10;8H[?12l[?25h[?25l[45;66H9,1   [9;5H[?12l[?25h[?25l[45;66H8[8;5H[?12l[?25h[?25l[45;66H9[9;5H[?12l[?25h[?25l[45;66H8[8;5H[?12l[?25h[?25l[1C[1m[7m[36m/ Instantiating tree[m[40m[7m [m[40m[45;1H[1m-- VISUAL LINE --[m[40m[45;18H[K[45;66H8,1[11CTop[8;5H[?12l[?25h[?25l[1m[7m[36m// Instantiating tree[m[40m[7m [m[40m[9;6H[1m[7m[36m*typedef struct nodeT {[m[40m[7m [m[40m[45;66H9[9;5H[?12l[?25h[?25l[1m[7m[36m/*typedef struct nodeT {[m[40m[7m [m[40m[10;5H[1m[7m[36m [m[40m[7m  [m[40m[1m[36m [m[40m[1m[7m[36mint key;[m[40m[7m [m[40m[45;66H10,1-4[10;8H[?12l[?25h[?25l[7m [m[40m[1m[7m[36mint key;[m[40m[7m [m[40m[11;5H[1m[7m[36m [m[40m[7m  [m[40m[1m[36m [m[40m[1m[7m[36mstruct nodeT *left, *right;[m[40m[7m [m[40m[45;67H1[11;8H[?12l[?25h[?25l[7m [m[40m[1m[7m[36mstruct nodeT *left, *right;[m[40m[7m [m[40m[12;5H[1m[36m[46m}[m[40m[1m[7m[36m nodeT, *treeT;[m[40m[7m [m[40m[45;67H2,1  [12;5H[?12l[?25h[?25l[1m[7m[36m} nodeT, *treeT;[m[40m[7m [m[40m[13;6H[1m[7m[36m/[m[40m[7m [m[40m[45;67H3[13;5H[?12l[?25h[?25l[1m[7m[36m*/[m[40m[7m [m[40m[14;6H[1m[7m[36m*struct treeADT [m[40m[7m   [m[40m[1m[7m[36m{[m[40m[7m [m[40m[45;67H4[14;5H[?12l[?25h[?25l[1m[7m[36m/*struct treeADT [m[40m[7m [m[40m[15;5H[1m[7m[36m [m[40m[7m  [m[40m[1m[36m [m[40m[1m[7m[36mnodeT *root;[m[40m[7m [m[40m[45;67H5,1-4[15;8H[?12l[?25h[?25l[7m [m[40m[1m[7m[36mnodeT *root;[m[40m[7m [m[40m[16;5H[1m[7m[36m [m[40m[7m  [m[40m[1m[36m [m[40m[1m[7m[36mnodeT *left;[m[40m[7m [m[40m[45;67H6[16;8H[?12l[?25h[?25l[7m [m[40m[1m[7m[36mnodeT *left;[m[40m[7m [m[40m[17;5H[1m[7m[36m [m[40m[7m  [m[40m[1m[36m [m[40m[1m[7m[36mnodeT *right;[m[40m[7m [m[40m[45;67H7[17;8H[?12l[?25h[?25l[7m [m[40m[1m[7m[36mnodeT *right;[m[40m[7m [m[40m[18;5H[1m[36m[46m}[m[40m[1m[7m[36m*/[m[40m[7m [m[40m[45;67H8,1  [18;5H[?12l[?25h[?25l[1m[7m[36m}*/[m[40m[7m [m[40m[45;67H9,0-1[19;5H[?12l[?25h[?25l[45;1H12 fewer lines[1m [m[40m[45;15H[K[8;5H[1m[36m/*treeADT NewBinaryTree() // Create empty binary tree[9;5H{[m[40m[9;6H[K[10;5H[1m[36m    treeADT tmp;[11;5H    tmp = (treeADT)malloc(sizeof(struct treeADT));[12;5H    if(tmp == NULL) return NULL;[13;5H    tmp->root = tmp->right = tmp->left = NULL;[14;5H    return tmp;[m[40m[14;20H[K[15;5H[1m[36m}*/[m[40m[15;8H[K[16;5H[K[17;5HnodeT *NewBinaryTree() [1m[36m// Create empty binary tree[m[40m[18;5H{[18;6H[K[19;9HtreeT tmp;[20;5H    [1m[36m//tmp = (treeT)malloc(sizeof(struct nodeT)); // allocate nodeT structure wh[m[40m[21;5H    tmp = (treeT)malloc([1m[33msizeof[m[40m(nodeT *)); [1m[36m// allocate for pointer but not node [m[40m[22;5H    [1m[33mif[m[40m(tmp == [1m[31mNULL[m[40m) [1m[33mreturn[m[40m [1m[31mNULL[m[40m;[23;5H    tmp->right = tmp->left = [1m[31mNULL[m[40m;[23;39H[K[24;5H    tmp->key = [1m[31m0[m[40m;[24;22H[K[25;5H    printf([1m[31m"new tree: [m[40m[1m[35m%p[m[40m[1m[31m key = [m[40m[1m[35m%d\n[m[40m[1m[31m"[m[40m, tmp, tmp->key);[26;5H    [1m[36m//*tmp = NULL;[m[40m[27;5H    [1m[33mreturn[m[40m tmp;[28;5H}[29;5H    [29;9H[K[30;5H[1m[32mvoid[m[40m FreeTree(nodeT *tree)[31;5H{[31;9H[K[32;9H[1m[33mif[m[40m(tree == [1m[31mNULL[m[40m)[32;25H[K[33;9H    [1m[33mreturn[m[40m;[33;20H[K[34;9HFreeTree(tree->left);[34;30H[K[35;9HFreeTree(tree->right);[35;32H[K[36;9Hfree(tree);[36;20H[K[37;5H}[37;9H[K[38;9H[K[39;5HnodeT *FindNode(nodeT *t, [1m[32mint[m[40m key)[40;5H{[41;8H[1m[33mif[m[40m (t == [1m[31mNULL[m[40m) [1m[33mreturn[m[40m [1m[31mNULL[m[40m;[42;5H   [1m[33mif[m[40m (key == t->key) [1m[33mreturn[m[40m t;[43;5H   [1m[33mif[m[40m (key < t->key) {[44;9H [1m[33mreturn[m[40m FindNode(t->left, key);[45;66H8,1[11CTop]2;tree.c + (~/Desktop/BinaryTree) - VIM[45;66H[K[45;66H8,1[11CTop[8;5H[?12l[?25h[?25l[9;5H[1m[36m[46m{[15;5H}[m[40m[1m[36m*/[m[40m[45;66H9[9;5H[?12l[?25h[?25l[1m[36m{[15;5H}*/[m[40m[45;66H10,1-4[10;8H[?12l[?25h[?25l[45;67H1[11;8H[?12l[?25h[?25l[45;67H2[12;8H[?12l[?25h[?25l[45;67H3[13;8H[?12l[?25h[?25l[45;67H4[14;8H[?12l[?25h[?25l[9;5H[1m[36m[46m{[15;5H}[m[40m[1m[36m*/[m[40m[45;67H5,1  [15;5H[?12l[?25h[?25l[9;5H[1m[36m{[15;5H}*/[m[40m[45;67H6,0-1[16;5H[?12l[?25h[?25l[45;67H7,1  [17;5H[?12l[?25h[?25l[45;1H[1m-- INSERT --[m[40m[45;13H[K[45;66H17,1[10CTop[17;5H[?12l[?25h[?25l/nodeT *NewBinaryTree() [1m[36m// Create empty binary tree[m[40m[45;69H2[17;6H[?12l[?25h[?25l[1m[36m/*nodeT *NewBinaryTree() // Create empty binary tree[18;5H{[19;5H    treeT tmp;[20;5H    [21;5H    tmp = (treeT)malloc(sizeof(nodeT *)); [22;5H    if(tmp == NULL) return NULL;[23;5H    tmp->right = tmp->left = NULL;[24;5H    tmp->key = 0;[25;5H    printf("new tree: %p key = %d\n", tmp, tmp->key);[26;5H    [m[40m[1C[1m[37m[41m/[m[40m[1m[36m*tmp = NULL;[27;5H    return tmp;[28;5H}[29;5H    [30;5Hvoid FreeTree(nodeT *tree)[31;5H{[32;5H    if(tree == NULL)[33;5H        return;[34;5H    FreeTree(tree->left);[35;5H    FreeTree(tree->right);[36;5H    free(tree);[37;5H}[39;5HnodeT *FindNode(nodeT *t, int key) [40;5H{[41;5H   if (t == NULL) return NULL;[42;5H   if (key == t->key) return t;[43;5H   if (key < t->key) {[44;5H     return FindNode(t->left, key);[m[40m[45;69H3[17;7H[?12l[?25h[?25l[18;5H[1m[36m[46m{[28;5H}[m[40m[45;66H[K[45;66H18,2[10CTop[18;6H[?12l[?25h[?25l[1m[36m{[28;5H}[m[40m[45;67H9,1[19;5H[?12l[?25h[?25l[45;66H20[20;5H[?12l[?25h[?25l[45;67H1[21;5H[?12l[?25h[?25l[45;67H2[22;5H[?12l[?25h[?25l[45;67H3[23;5H[?12l[?25h[?25l[45;67H4[24;5H[?12l[?25h[?25l[45;67H5[25;5H[?12l[?25h[?25l[45;69H2-5[25;9H[?12l[?25h[?25l[45;67H6[26;9H[?12l[?25h[?25l[45;69H3-6[26;10H[?12l[?25h[?25l[45;69H4-7[26;11H[?12l[?25h[?25l[45;69H5-8[26;12H[?12l[?25h[?25l[1m[36m/tmp = NULL;[m[40m[26;22H[K[45;69H4-7[26;11H[?12l[?25h[?25l[45;67H7[27;11H[?12l[?25h[?25l[18;5H[1m[36m[46m{[28;5H}[m[40m[45;66H[K[45;66H28,2[10CTop[28;6H[?12l[?25h[?25l[1m[36m*[18;5H{[28;5H}*[m[40m[45;69H3[28;7H[?12l[?25h[?25l[1m[36m/[m[40m[29;5H    [30;5H[1m[32mvoid[m[40m FreeTree(nodeT *tree)[31;5H{[32;5H    [1m[33mif[m[40m(tree == [1m[31mNULL[m[40m)[33;5H        [1m[33mreturn[m[40m;[34;5H    FreeTree(tree->left);[35;5H    FreeTree(tree->right);[36;5H    free(tree);[37;5H}[39;5HnodeT *FindNode(nodeT *t, [1m[32mint[m[40m key) [40;5H{[41;5H   [1m[33mif[m[40m (t == [1m[31mNULL[m[40m) [1m[33mreturn[m[40m [1m[31mNULL[m[40m;[42;5H   [1m[33mif[m[40m (key == t->key) [1m[33mreturn[m[40m t;[43;5H   [1m[33mif[m[40m (key < t->key) {[44;5H     [1m[33mreturn[m[40m FindNode(t->left, key);[45;69H4[28;8H[?12l[?25h[?25l[45;67H9,1[29;5H[?12l[?25h[?25l[45;66H30,4[30;8H[?12l[?25h[?25l[31;5H[46m{[37;5H}[m[40m[45;66H[K[45;66H31,2[10CTop[31;6H[?12l[?25h[?25l{[37;5H}[45;67H2,1[32;5H[?12l[?25h[?25l[45;67H3[33;5H[?12l[?25h[?25l[45;67H4[34;5H[?12l[?25h[?25l[45;67H5[35;5H[?12l[?25h[?25l[45;67H6[36;5H[?12l[?25h[?25l[31;5H[46m{[37;5H}[m[40m[45;66H[K[45;66H37,2[10CTop[37;6H[?12l[?25h[?25l[31;5H{[37;5H}[45;67H8,1[38;5H[?12l[?25h[?25l[45;67H9,4[39;8H[?12l[?25h[?25l[45;66H[K[45;66H40,2[10CTop[40;6H[?12l[?25h[?25l[45;67H1,4[41;8H[?12l[?25h[?25l[45;67H2[42;8H[?12l[?25h[?25l[45;67H3[43;8H[?12l[?25h[?25l[45;67H4[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m 45 [m[40m   } [1m[33melse[m[40m {[45;66H[K[45;66H45,4[11C0%[42;26H[46m{[44;8H}[?12l[?25h[?25l[1;44r[m[40m[44;1H
[1;45r[44;1H[1m[33m 46 [m[40m     [1m[33mreturn[m[40m FindNode(t->right, key);[45;66H[K[45;66H46,4[11C0%[41;26H{[43;8H}[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m 47 [m[40m  }[45;66H[K[45;66H47,4[11C1%[42;15H[46m{[44;7H}[m[40m[45;66H[K[45;66H47,4[11C1%[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m 48 [m[40m}[45;66H[K[45;66H48,2[11C1%[36;5H[46m{[m[40m[41;15H{[43;7H}[44;5H[46m}[m[40m[45;66H[K[45;66H48,2[11C1%[44;6H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m 49 [m[40m[45;66H[K[45;66H49,1[11C1%[35;5H{[43;5H}[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m 50 [m[40m[1m[36m// Manipulating tree[m[40m[45;66H[K[45;66H50,4[11C2%[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m 51 [m[40m[1m[32mvoid[m[40m InsertNode(nodeT  **tptr, [1m[32mint[m[40m key)[45;66H[K[45;66H51,4[11C2%[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m 52 [m[40m{[45;66H[K[45;66H52,2[11C3%[45;66H[K[45;66H52,2[11C3%[44;6H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m 53 [m[40m     nodeT  *t, *tmp;[45;66H[K[45;66H53,4[11C3%[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m 54 [m[40m     t=*tptr;[45;66H[K[45;66H54,4[11C3%[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m 55 [m[40m    [1m[36m// printf("---Insert Node---\n");[m[40m[45;66H[K[45;66H55,4[11C4%[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m 56 [m[40m    [1m[36m// printf("**tptr = %p, *tptr = %d, tptr = %p", **tptr, *tptr->key, &tptr);[m[40m[45;66H[K[45;66H56,4[11C4%[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m 57 [m[40m    [1m[33mif[m[40m (t == [1m[31mNULL[m[40m) {[45;66H[K[45;66H57,1[11C4%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m 58 [m[40m[9Ctmp=(nodeT *)malloc([1m[33msizeof[m[40m([1m[32mstruct[m[40m nodeT));[45;66H[K[45;66H58,4[11C5%[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m 59 [m[40m[9Ctmp->key = key;[45;66H[K[45;66H59,4[11C5%[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m 60 [m[40m[9Ctmp->left=tmp->right=[1m[31mNULL[m[40m;[45;66H[K[45;66H60,4[11C6%[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m 61 [m[40m[9C*tptr=tmp;[45;66H[K[45;66H61,4[11C6%[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m 62 [9Creturn[m[40m;[45;66H[K[45;66H62,4[11C6%[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m 63 [m[40m     }[45;66H[K[45;66H63,4[11C7%[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m 64 [m[40m    [1m[33mif[m[40m (key < t->key) {[45;66H[K[45;66H64,1[11C7%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m 65 [m[40m[8CInsertNode(&t->left, key);[45;66H[K[45;66H65,1[11C8%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m 66 [m[40m    } [1m[33melse[m[40m {[45;66H[K[45;66H66,1[11C8%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m 67 [m[40m[8CInsertNode(&t->right, key);[45;66H[K[45;66H67,1[11C8%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m 68 [m[40m    }[45;66H[K[45;66H68,1[11C9%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m 69 [m[40m}[45;66H[K[45;66H69,2[11C9%[27;5H[46m{[44;5H}[m[40m[45;66H[K[45;66H69,2[11C9%[44;6H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m 70 [m[40m[45;66H[K[45;66H70,1[11C9%[26;5H{[43;5H}[44;5H[?12l[?25h[?25l[1;44r[1;1H[11M[1;45r[34;1H[1m[33m 71 [m[40m[1m[32mvoid[m[40m DeleteNode(nodeT  **p)
[1m[33m 72 [m[40m{
[1m[33m 73 [m[40m   nodeT *target, *lmd_r, *plmd_r;
[1m[33m 74 [m[40m   target=*p;
[1m[33m 75 
 76 [m[40m   [1m[33mif[m[40m (target->left==[1m[31mNULL[m[40m && target->right==[1m[31mNULL[m[40m) {
[1m[33m 77 [m[40m[8C*p=[1m[31mNULL[m[40m;
[1m[33m 78 [m[40m   } [1m[33melse[m[40m [1m[33mif[m[40m (target->left == [1m[31mNULL[m[40m) {
[1m[33m 79 [m[40m[9C*p=target->right;
[1m[33m 80 [m[40m   } [1m[33melse[m[40m [1m[33mif[m[40m (target->right == [1m[31mNULL[m[40m) {
[1m[33m 81 [m[40m[9C*p=target->left;[45;66H[K[45;66H81,4[10C14%[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m 82 [m[40m   } [1m[33melse[m[40m {[45;66H[K[45;66H82,4[10C14%[42;42H[46m{[44;8H}[?12l[?25h[?25l[1;44r[m[40m[44;1H
[1;45r[44;1H[1m[33m 83 [m[40m      plmd_r = target;[45;66H[K[45;66H83,4[10C14%[41;42H{[43;8H}[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m 84 [m[40m      lmd_r = target->right;[45;66H[K[45;66H84,4[10C15%[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m 85 [m[40m      [1m[33mwhile[m[40m( lmd_r->left != [1m[31mNULL[m[40m){[45;66H[K[45;66H85,4[10C15%[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m 86 [m[40m[10Cplmd_r = lmd_r;[45;66H[K[45;66H86,4[10C16%[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m 87 [m[40m[10Clmd_r = lmd_r->left;[45;66H[K[45;66H87,4[10C16%[44;8H[?12l[?25h[?25l[45;67H6[43;8H[?12l[?25h[?25l[45;67H5[42;8H[?12l[?25h[?25l[45;67H4[41;8H[?12l[?25h[?25l[45;67H3[40;8H[?12l[?25h[?25l[37;42H[46m{[39;8H}[m[40m[45;67H2[39;8H[?12l[?25h[?25l[37;42H{[39;8H}[45;67H1[38;8H[?12l[?25h[?25l[35;41H[46m{[37;8H}[m[40m[45;67H0[37;8H[?12l[?25h[?25l[35;41H{[37;8H}[45;66H79[36;8H[?12l[?25h[?25l[33;55H[46m{[35;8H}[m[40m[45;67H8[35;8H[?12l[?25h[?25l[33;55H{[35;8H}[45;67H7[34;8H[?12l[?25h[?25l[45;67H6[33;8H[?12l[?25h[?25l[45;67H5,1[32;5H[?12l[?25h[?25l[45;67H4,4[31;8H[?12l[?25h[?25l[45;67H3[30;8H[?12l[?25h[?25l[45;66H[K[45;66H72,2[10C16%[29;6H[?12l[?25h[?25l[45;67H1,4[28;8H[?12l[?25h[45;1H[K[28;7H[?25l[45;66H71,3[10C16%[28;7H[?12l[?25h[?25l[1m[7m[32mvo[m[40m[1m[32mi[m[40m[1m[7m[32md[m[40m[7m DeleteNode(nodeT  **p)  [m[40m[45;1H[1m-- VISUAL LINE --[m[40m[45;66H[K[45;66H71,3[10C16%[28;7H[?12l[?25h[?25l[1m[7m[32mid[m[40m[7m [29;5H{[m[40m[45;67H2,2[29;6H[?12l[?25h[?25l[7m [30;5H  [m[40m [7mnodeT *target, *lmd_r, *plmd_r; [m[40m[45;67H3,3[30;7H[?12l[?25h[?25l[7m [31;5H  [m[40m [7mtarget=*p; [m[40m[45;67H4[31;7H[?12l[?25h[?25l[7m [m[40m[45;67H5,0-1[32;5H[?12l[?25h[?25l[7m [33;5H  [m[40m [1m[7m[33mif[m[40m[7m (target->left==[m[40m[1m[7m[31mNULL[m[40m[7m && target->right==[m[40m[1m[7m[31mNULL[m[40m[7m) { [m[40m[45;67H6,3  [33;7H[?12l[?25h[?25l[7m [34;5H  [m[40m [7m     *p=[m[40m[1m[7m[31mNULL[m[40m[7m; [m[40m[45;67H7[34;7H[?12l[?25h[?25l[7m [35;5H  [m[40m [7m} [m[40m[1m[7m[33melse[m[40m[7m [m[40m[1m[7m[33mif[m[40m[7m (target->left == [m[40m[1m[7m[31mNULL[m[40m[7m) { [m[40m[45;67H8[35;7H[?12l[?25h[?25l[7m [36;5H  [m[40m [7m      *p=target->right; [m[40m[45;67H9[36;7H[?12l[?25h[?25l[7m [37;5H  [m[40m [7m} [m[40m[1m[7m[33melse[m[40m[7m [m[40m[1m[7m[33mif[m[40m[7m (target->right == [m[40m[1m[7m[31mNULL[m[40m[7m) { [m[40m[45;66H80[37;7H[?12l[?25h[?25l[7m [38;5H  [m[40m [7m      *p=target->left; [m[40m[45;67H1[38;7H[?12l[?25h[?25l[7m [39;5H  [m[40m [7m} [m[40m[1m[7m[33melse[m[40m[7m {   [m[40m[45;67H2[39;7H[?12l[?25h[?25l[7m [40;5H  [m[40m [7m   plmd_r = target; [m[40m[45;67H3[40;7H[?12l[?25h[?25l[7m [41;5H  [m[40m [7m   lmd_r = target->right; [m[40m[45;67H4[41;7H[?12l[?25h[?25l[7m [42;5H  [m[40m [7m   [m[40m[1m[7m[33mwhile[m[40m[7m( lmd_r->left != [m[40m[1m[7m[31mNULL[m[40m[7m){ [m[40m[45;67H5[42;7H[?12l[?25h[?25l[7m [43;5H  [m[40m [7m       plmd_r = lmd_r; [m[40m[45;67H6[43;7H[?12l[?25h[?25l[7m [44;5H  [m[40m [7m       lmd_r = lmd_r->left; [m[40m[45;67H7[44;7H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[43;7H[7m [m[40m
[1m[33m 88 [m[40m[7m  [m[40m [7m   } [m[40m[45;66H[K[45;66H88,3[10C16%[44;7H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[43;7H[7m [m[40m
[1m[33m 89 [m[40m[7m  [m[40m [7m [m[40m[1m[7m[33mif[m[40m[7m(plmd_r == target) [m[40m[45;66H[K[45;66H89,3[10C17%[44;7H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[43;7H[7m [m[40m
[1m[33m 90 [m[40m[7m  [m[40m [7m      plmd_r->right = lmd_r->right; [m[40m[45;66H[K[45;66H90,3[10C17%[44;7H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[43;7H[7m [m[40m
[1m[33m 91 [m[40m[7m  [m[40m [7m [m[40m[1m[7m[33melse[m[40m[7m [m[40m[45;66H[K[45;66H91,3[10C18%[44;7H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[43;7H[7m [m[40m
[1m[33m 92 [m[40m[7m  [m[40m [7m      plmd_r->left = lmd_r->right; [m[40m[45;66H[K[45;66H92,3[10C18%[44;7H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[43;7H[7m [m[40m
[1m[33m 93 [m[40m[7m  [m[40m [7m lmd_r->left = target->left; [m[40m[45;66H[K[45;66H93,3[10C18%[44;7H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[43;7H[7m [m[40m
[1m[33m 94 [m[40m[7m  [m[40m [7m lmd_r->right = target->right; [m[40m[45;66H[K[45;66H94,3[10C19%[44;7H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[43;7H[7m [m[40m
[1m[33m 95 [m[40m[7m  [m[40m [7m *p = lmd_r; [m[40m[45;66H[K[45;66H95,3[10C19%[44;7H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[43;7H[7m [m[40m
[1m[33m 96 [m[40m[7m  [m[40m [7m} [m[40m[45;66H[K[45;66H96,3[10C19%[44;7H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[43;7H[7m [m[40m
[1m[33m 97 [m[40m[7m  [m[40m [7mfree(target); [m[40m[45;66H[K[45;66H97,3[10C20%[44;7H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[43;7H[7m [m[40m
[1m[33m 98 [m[40m[7m}[m[40m[45;66H[K[45;66H98,2[10C20%[44;6H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[43;6H[7m [m[40m
[1m[33m 99 [m[40m[45;66H[K[45;66H99,0-1[8C21%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[43;5H[7m [m[40m
[1m[33m100 [m[40m[1m[7m[32mvo[m[40m[1m[32mi[m[40m[1m[7m[32md[m[40m[7m DeleteNode_v2(nodeT  **p, [m[40m[1m[7m[32mint[m[40m[7m key)  [m[40m[45;66H[K[45;66H100,3[9C21%[44;7H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[43;7H[1m[7m[32mid[m[40m[7m [m[40m
[1m[33m101 [m[40m[7m{[m[40m[45;66H[K[45;66H101,2[9C21%[44;6H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[43;6H[7m [m[40m
[1m[33m102 [m[40m[7m  [m[40m [7mnodeT *target, *lmd_r, *plmd_r; [m[40m[45;66H[K[45;66H102,3[9C22%[44;7H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[43;7H[7m [m[40m
[1m[33m103 [m[40m[7m  [m[40m [1m[7m[36m//target=*p;[m[40m[7m [m[40m[45;66H[K[45;66H103,3[9C22%[44;7H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[43;7H[7m [m[40m
[1m[33m104 [m[40m[7m  [m[40m [7mtarget = FindNode(*p, key); [m[40m[45;66H[K[45;66H104,3[9C22%[44;7H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[43;7H[7m [m[40m
[1m[33m105 [m[40m[7m  [m[40m [1m[7m[33mif[m[40m[7m(target == [m[40m[1m[7m[31mNULL[m[40m[7m) [m[40m[1m[7m[33mreturn[m[40m[7m; [m[40m[45;66H[K[45;66H105,3[9C23%[44;7H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[43;7H[7m [m[40m
[1m[33m106 [m[40m[45;66H[K[45;66H106,0-1[7C23%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[43;5H[7m [m[40m
[1m[33m107 [m[40m[7m  [m[40m [1m[7m[33mif[m[40m[7m (target->left==[m[40m[1m[7m[31mNULL[m[40m[7m && target->right==[m[40m[1m[7m[31mNULL[m[40m[7m) { [m[40m[45;66H[K[45;66H107,3[9C24%[44;7H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[43;7H[7m [m[40m
[1m[33m108 [m[40m[7m  [m[40m [7m     *p=[m[40m[1m[7m[31mNULL[m[40m[7m; [m[40m[45;66H[K[45;66H108,3[9C24%[44;7H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[43;7H[7m [m[40m
[1m[33m109 [m[40m[7m  [m[40m [7m} [m[40m[1m[7m[33melse[m[40m[7m [m[40m[1m[7m[33mif[m[40m[7m (target->left == [m[40m[1m[7m[31mNULL[m[40m[7m) { [m[40m[45;66H[K[45;66H109,3[9C24%[44;7H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[43;7H[7m [m[40m
[1m[33m110 [m[40m[7m  [m[40m [7m      *p=target->right; [m[40m[45;66H[K[45;66H110,3[9C25%[44;7H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[43;7H[7m [m[40m
[1m[33m111 [m[40m[7m  [m[40m [7m} [m[40m[1m[7m[33melse[m[40m[7m [m[40m[1m[7m[33mif[m[40m[7m (target->right == [m[40m[1m[7m[31mNULL[m[40m[7m) { [m[40m[45;66H[K[45;66H111,3[9C25%[44;7H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[43;7H[7m [m[40m
[1m[33m112 [m[40m[7m  [m[40m [7m      *p=target->left; [m[40m[45;66H[K[45;66H112,3[9C26%[44;7H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[43;7H[7m [m[40m
[1m[33m113 [m[40m[7m  [m[40m [7m} [m[40m[1m[7m[33melse[m[40m[7m {   [m[40m[45;66H[K[45;66H113,3[9C26%[44;7H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[43;7H[7m [m[40m
[1m[33m114 [m[40m[7m  [m[40m [7m   plmd_r = target; [m[40m[45;66H[K[45;66H114,3[9C26%[44;7H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[43;7H[7m [m[40m
[1m[33m115 [m[40m[7m  [m[40m [7m   lmd_r = target->right; [m[40m[45;66H[K[45;66H115,3[9C27%[44;7H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[43;7H[7m [m[40m
[1m[33m116 [m[40m[7m  [m[40m [7m   [m[40m[1m[7m[33mwhile[m[40m[7m( lmd_r->left != [m[40m[1m[7m[31mNULL[m[40m[7m){ [m[40m[45;66H[K[45;66H116,3[9C27%[44;7H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[43;7H[7m [m[40m
[1m[33m117 [m[40m[7m  [m[40m [7m       plmd_r = lmd_r; [m[40m[45;66H[K[45;66H117,3[9C27%[44;7H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[43;7H[7m [m[40m
[1m[33m118 [m[40m[7m  [m[40m [7m       lmd_r = lmd_r->left; [m[40m[45;66H[K[45;66H118,3[9C28%[44;7H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[43;7H[7m [m[40m
[1m[33m119 [m[40m[7m  [m[40m [7m   } [m[40m[45;66H[K[45;66H119,3[9C28%[44;7H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[43;7H[7m [m[40m
[1m[33m120 [m[40m[7m  [m[40m [7m [m[40m[1m[7m[33mif[m[40m[7m(plmd_r == target) [m[40m[45;66H[K[45;66H120,3[9C29%[44;7H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[43;7H[7m [m[40m
[1m[33m121 [m[40m[7m  [m[40m [7m      plmd_r->right = lmd_r->right; [m[40m[45;66H[K[45;66H121,3[9C29%[44;7H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[43;7H[7m [m[40m
[1m[33m122 [m[40m[7m  [m[40m [7m [m[40m[1m[7m[33melse[m[40m[7m [m[40m[45;66H[K[45;66H122,3[9C29%[44;7H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[43;7H[7m [m[40m
[1m[33m123 [m[40m[7m  [m[40m [7m      plmd_r->left = lmd_r->right; [m[40m[45;66H[K[45;66H123,3[9C30%[44;7H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[43;7H[7m [m[40m
[1m[33m124 [m[40m[7m  [m[40m [7m lmd_r->left = target->left; [m[40m[45;66H[K[45;66H124,3[9C30%[44;7H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[43;7H[7m [m[40m
[1m[33m125 [m[40m[7m  [m[40m [7m lmd_r->right = target->right; [m[40m[45;66H[K[45;66H125,3[9C31%[44;7H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[43;7H[7m [m[40m
[1m[33m126 [m[40m[7m  [m[40m [7m *p = lmd_r; [m[40m[45;66H[K[45;66H126,3[9C31%[44;7H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[43;7H[7m [m[40m
[1m[33m127 [m[40m[7m  [m[40m [7m} [m[40m[45;66H[K[45;66H127,3[9C31%[44;7H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[43;7H[7m [m[40m
[1m[33m128 [m[40m[7m  [m[40m [7mfree(target); [m[40m[45;66H[K[45;66H128,3[9C32%[44;7H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[43;7H[7m [m[40m
[1m[33m129 [m[40m[7m}[m[40m[45;66H[K[45;66H129,2[9C32%[44;6H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[43;6H[7m [m[40m
[1m[33m130 [m[40m[45;66H[K[45;66H130,0-1[7C32%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[43;5H[7m [m[40m
[1m[33m131 [m[40m[1m[7m[36m//[m[40m[1m[36m [m[40m[1m[7m[36mOperating on tree[m[40m[7m [m[40m[45;66H[K[45;66H131,3[9C33%[44;7H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[43;7H[1m[7m[36m Operating on tree[m[40m[7m [m[40m
[1m[33m132 [m[40m[1m[7m[32min[m[40m[1m[32mt[m[40m[7m height(nodeT *t)  [m[40m[45;66H[K[45;66H132,3[9C33%[44;7H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[43;7H[1m[7m[32mt[m[40m[7m [m[40m
[1m[33m133 [m[40m[7m{[m[40m[45;66H[K[45;66H133,2[9C34%[44;6H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[43;6H[7m [m[40m
[1m[33m134 [m[40m[7m  [m[40m[1m[33mi[m[40m[1m[7m[33mf[m[40m[7m (t == [m[40m[1m[7m[31mNULL[m[40m[7m) [m[40m[45;66H[K[45;66H134,3[9C34%[44;7H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[43;7H[1m[7m[33mif[m[40m[7m [m[40m
[1m[33m135 [m[40m[7m  [m[40m [7m   [m[40m[1m[7m[33mreturn[m[40m[7m [m[40m[1m[7m[31m0[m[40m[7m; [m[40m[45;66H[K[45;66H135,3[9C34%[44;7H[?12l[?25h[?25l[43;7H[1m[33mi[m[40m[1m[7m[33mf[m[40m[7m [m[40m[44;5H      [1m[33mreturn[m[40m [1m[31m0[m[40m;[44;20H[K[45;68H4[43;7H[?12l[?25h[?25l[42;6H[K[43;5H  [1C[1m[33mf[m[40m (t == [1m[31mNULL[m[40m)[43;21H[K[45;68H3,2[42;6H[?12l[?25h[?25l[41;7H[1m[32mt[m[40m[7m [m[40m[42;5H{[45;68H2,3[41;7H[?12l[?25h[?25l[40;7H[1m[36m [m[40m[1m[7m[36mOperating on tree[m[40m[7m [m[40m[41;5H[1m[32mint[m[40m height(nodeT *t) [41;26H[K[45;68H1[40;7H[?12l[?25h[?25l[39;5H[K[40;5H[1m[36m// Operating on tree[m[40m[40;25H[K[45;68H0,0-1[39;5H[?12l[?25h[?25l[38;6H[K[45;67H29,2  [38;6H[?12l[?25h[?25l[45;1H59 fewer lines[1m [m[40m[45;15H[K[27m[m[40m[H[2J[1;1H[1m[33m 50 [m[40m[1m[36m// Manipulating tree[m[40m
[1m[33m 51 [m[40m[1m[32mvoid[m[40m InsertNode(nodeT  **tptr, [1m[32mint[m[40m key)
[1m[33m 52 [m[40m{
[1m[33m 53 [m[40m     nodeT  *t, *tmp;
[1m[33m 54 [m[40m     t=*tptr;
[1m[33m 55 [m[40m    [1m[36m// printf("---Insert Node---\n");[m[40m
[1m[33m 56 [m[40m    [1m[36m// printf("**tptr = %p, *tptr = %d, tptr = %p", **tptr, *tptr->key, &tptr);[m[40m[8;1H[1m[33m 57 [m[40m    [1m[33mif[m[40m (t == [1m[31mNULL[m[40m) {
[1m[33m 58 [m[40m[9Ctmp=(nodeT *)malloc([1m[33msizeof[m[40m([1m[32mstruct[m[40m nodeT));
[1m[33m 59 [m[40m[9Ctmp->key = key;
[1m[33m 60 [m[40m[9Ctmp->left=tmp->right=[1m[31mNULL[m[40m;
[1m[33m 61 [m[40m[9C*tptr=tmp;
[1m[33m 62 [9Creturn[m[40m;
[1m[33m 63 [m[40m     }
[1m[33m 64 [m[40m    [1m[33mif[m[40m (key < t->key) {
[1m[33m 65 [m[40m[8CInsertNode(&t->left, key);
[1m[33m 66 [m[40m    } [1m[33melse[m[40m {
[1m[33m 67 [m[40m[8CInsertNode(&t->right, key);
[1m[33m 68 [m[40m    }
[1m[33m 69 [m[40m}
[1m[33m 70 
 71 
 72 [m[40m[1m[36m// Operating on tree[m[40m
[1m[33m 73 [m[40m[1m[32mint[m[40m height(nodeT *t)
[1m[33m 74 [m[40m{
[1m[33m 75 [m[40m  [1m[33mif[m[40m (t == [1m[31mNULL[m[40m)
[1m[33m 76 [m[40m      [1m[33mreturn[m[40m [1m[31m0[m[40m;
[1m[33m 77 [m[40m  [1m[33melse
 78 [m[40m     [1m[33mreturn[m[40m ([1m[31m1[m[40m + max(
[1m[33m 79 [m[40m[19Cheight(t->left),
[1m[33m 80 [m[40m[19Cheight(t->right)) );
[1m[33m 81 [m[40m}
[1m[33m 82 
 83 [m[40m[1m[32mint[m[40m sum(nodeT *p)
[1m[33m 84 [m[40m{
[1m[33m 85 [m[40m  [1m[33mif[m[40m (p == [1m[31mNULL[m[40m)
[1m[33m 86 [m[40m      [1m[33mreturn[m[40m [1m[31m0[m[40m;
[1m[33m 87 [m[40m  [1m[33melse
 88 [m[40m     [1m[33mreturn[m[40m (p->key +
[1m[33m 89 [m[40m[16Csum(p->left) +
[1m[33m 90 [m[40m[16Csum(p->right) );
[1m[33m 91 [m[40m}
[1m[33m 92 
 93 [m[40m[1m[32mint[m[40m count(nodeT *p)[45;66H71,0-1[8C24%59 fewer lines[45;66H[K[45;66H71,0-1[8C24%[22;5H[?12l[?25h[?25l[45;67H2,1  [23;5H[?12l[?25h[?25l[45;67H3[24;5H[?12l[?25h[?25l[25;5H[46m{[32;5H}[m[40m[45;67H4[25;5H[?12l[?25h[?25l{[32;5H}[45;67H5[26;5H[?12l[?25h[?25l[45;67H6[27;5H[?12l[?25h[?25l[45;67H7[28;5H[?12l[?25h[?25l[45;67H8[29;5H[?12l[?25h[?25l[45;67H9[30;5H[?12l[?25h[?25l[45;66H80[31;5H[?12l[?25h[?25l[25;5H[46m{[32;5H}[m[40m[45;67H1[32;5H[?12l[?25h[?25l[25;5H{[32;5H}[45;67H2,0-1[33;5H[?12l[?25h[?25l[45;67H3,1  [34;5H[?12l[?25h[?25l[35;5H[46m{[42;5H}[m[40m[45;67H4[35;5H[?12l[?25h[?25l{[42;5H}[45;67H5[36;5H[?12l[?25h[?25l[45;67H6[37;5H[?12l[?25h[?25l[45;67H7[38;5H[?12l[?25h[?25l[45;67H8[39;5H[?12l[?25h[?25l[45;67H9[40;5H[?12l[?25h[?25l[45;66H90[41;5H[?12l[?25h[?25l[35;5H[46m{[42;5H}[m[40m[45;67H1[42;5H[?12l[?25h[?25l[35;5H{[42;5H}[45;67H2,0-1[43;5H[?12l[?25h[?25l[45;67H3,1  [44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m 94 [m[40m{[45;1H[K[45;66H94,1[10C24%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m 95 [m[40m  [1m[33mif[m[40m (p == [1m[31mNULL[m[40m)[45;66H[K[45;66H95,1[10C25%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m 96 [m[40m      [1m[33mreturn[m[40m [1m[31m0[m[40m;[45;66H[K[45;66H96,1[10C25%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m 97 [m[40m  [1m[33melse[m[40m[45;66H[K[45;66H97,1[10C26%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m 98 [m[40m     [1m[33mreturn[m[40m ([1m[31m1[m[40m + count(p->left) + count(p->right) );[45;66H[K[45;66H98,1[10C26%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[39;5H[46m{[m[40m[44;1H[1m[33m 99 [m[40m[46m}[m[40m[45;66H[K[45;66H99,1[10C27%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[38;5H{[43;5H}
[1m[33m100 [m[40m[45;66H[K[45;66H100,0-1[7C27%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m101 [m[40m[1m[32mint[m[40m imax(nodeT *p)[45;66H[K[45;66H101,1[9C28%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m102 [m[40m{[45;66H[K[45;66H102,1[9C28%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m103 [m[40m  [1m[32mint[m[40m tmp;[45;66H[K[45;66H103,1[9C29%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m104 [m[40m  [1m[33mif[m[40m (p == [1m[31mNULL[m[40m)[45;66H[K[45;66H104,1[9C29%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m105 [m[40m      [1m[33mreturn[m[40m [1m[31m0[m[40m;[45;66H[K[45;66H105,1[9C30%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m106 [m[40m  [1m[33melse[m[40m[45;66H[K[45;66H106,1[9C30%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m107 [m[40m    [1m[33mreturn[m[40m max(max(p->key, imax(p->left)), max(p->key, imax(p->right)));[45;66H[K[45;66H107,1[9C31%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[38;5H[46m{[m[40m[44;1H[1m[33m108 [m[40m[46m}[m[40m[45;66H[K[45;66H108,1[9C31%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[37;5H{[43;5H}
[1m[33m109 [m[40m[45;66H[K[45;66H109,0-1[7C32%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m110 [m[40m[1m[32mint[m[40m imin(nodeT *p)[45;66H[K[45;66H110,1[9C32%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m111 [m[40m{[45;66H[K[45;66H111,1[9C33%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m112 [m[40m  [1m[33mif[m[40m (p == [1m[31mNULL[m[40m)[45;66H[K[45;66H112,1[9C33%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m113 [m[40m      [1m[33mreturn[m[40m [1m[31m1000[m[40m;[45;66H[K[45;66H113,1[9C34%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m114 [m[40m  [1m[33melse[m[40m[45;66H[K[45;66H114,1[9C34%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m115 [m[40m     [1m[33mreturn[m[40m min(min(p->key, imin(p->left)), min(p->key, imin(p->right)));[45;66H[K[45;66H115,1[9C35%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[39;5H[46m{[m[40m[44;1H[1m[33m116 [m[40m[46m}[m[40m[45;66H[K[45;66H116,1[9C35%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[38;5H{[43;5H}
[1m[33m117 [m[40m[45;66H[K[45;66H117,0-1[7C36%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m118 [m[40m[1m[36m// Printing tree in order[m[40m[45;66H[K[45;66H118,1[9C36%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m119 [m[40m[1m[32mvoid[m[40m DisplayTree(nodeT *t)[45;66H[K[45;66H119,1[9C37%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m120 [m[40m{[45;66H[K[45;66H120,1[9C37%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m121 [m[40m  [1m[33mif[m[40m (t != [1m[31mNULL[m[40m) {[45;66H[K[45;66H121,1[9C38%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m122 [m[40m    DisplayTree(t->left);[45;66H[K[45;66H122,1[9C38%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m123 [m[40m    printf([1m[31m"[m[40m[1m[35m%d[m[40m[1m[31m "[m[40m, t->key);[45;66H[K[45;66H123,1[9C39%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m124 [m[40m    DisplayTree(t->right);[45;66H[K[45;66H124,1[9C39%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m125 [m[40m  }[45;66H[K[45;66H125,1[9C40%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m126 [m[40m[1m[36m//  printf("\n");[m[40m[45;66H[K[45;66H126,1[9C40%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[37;5H[46m{[m[40m[44;1H[1m[33m127 [m[40m[46m}[m[40m[45;66H[K[45;66H127,1[9C41%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[36;5H{[43;5H}
[1m[33m128 [m[40m[45;66H[K[45;66H128,0-1[7C41%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m129 [m[40m[1m[32mvoid[m[40m PreOrder(nodeT *t)[45;66H[K[45;66H129,1[9C42%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m130 [m[40m{[45;66H[K[45;66H130,1[9C42%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m131 [m[40m  [1m[33mif[m[40m (t != [1m[31mNULL[m[40m) {[45;66H[K[45;66H131,1[9C43%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m132 [m[40m    printf([1m[31m"[m[40m[1m[35m%d[m[40m[1m[31m "[m[40m, t->key);[45;66H[K[45;66H132,1[9C43%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m133 [m[40m    PreOrder(t->left);[45;66H[K[45;66H133,1[9C44%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m134 [m[40m    PreOrder(t->right);[45;66H[K[45;66H134,1[9C44%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m135 [m[40m  }[45;66H[K[45;66H135,1[9C45%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[38;5H[46m{[m[40m[44;1H[1m[33m136 [m[40m[46m}[m[40m[45;66H[K[45;66H136,1[9C45%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[37;5H{[43;5H}
[1m[33m137 [m[40m[45;66H[K[45;66H137,0-1[7C46%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m138 [m[40m[1m[32mvoid[m[40m PostOrder(nodeT *t)[45;66H[K[45;66H138,1[9C46%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m139 [m[40m{[45;66H[K[45;66H139,1[9C47%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m140 [m[40m  [1m[33mif[m[40m (t != [1m[31mNULL[m[40m) {[45;66H[K[45;66H140,1[9C47%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m141 [m[40m    PostOrder(t->left);[45;66H[K[45;66H141,1[9C48%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m142 [m[40m    PostOrder(t->right);[45;66H[K[45;66H142,1[9C48%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m143 [m[40m    printf([1m[31m"[m[40m[1m[35m%d[m[40m[1m[31m "[m[40m, t->key);[45;66H[K[45;66H143,1[9C49%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m144 [m[40m  }[45;66H[K[45;66H144,1[9C49%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[38;5H[46m{[m[40m[44;1H[1m[33m145 [m[40m[46m}[m[40m[45;66H[K[45;66H145,1[9C50%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[37;5H{[43;5H}
[1m[33m146 [m[40m[45;66H[K[45;66H146,0-1[7C50%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m147 [m[40m[1m[32mvoid[m[40m LevelOrder(nodeT *t)[45;66H[K[45;66H147,1[9C50%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m148 [m[40m{[45;66H[K[45;66H148,1[9C51%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m149 [m[40m    [1m[32mint[m[40m h = height(t);[45;66H[K[45;66H149,1-4[7C51%[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m150 [m[40m    [1m[32mint[m[40m i;[45;66H[K[45;66H150,1-4[7C52%[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m151 [m[40m    [1m[33mfor[m[40m(i = [1m[31m1[m[40m; i <= h; i++)[45;66H[K[45;66H151,1-4[7C52%[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m152 [m[40m[8CprintLevel(t, i);[45;66H[K[45;66H152,1-4[7C53%[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[39;5H[46m{[m[40m[44;1H[1m[33m153 [m[40m[46m}[m[40m[45;66H[K[45;66H153,1[9C53%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[38;5H{[43;5H}
[1m[33m154 [m[40m[45;66H[K[45;66H154,0-1[7C54%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m155 [m[40m[1m[36m// Private function used to print each level[m[40m[45;66H[K[45;66H155,1[9C54%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m156 [m[40m[1m[32mvoid[m[40m printLevel(nodeT *t, [1m[32mint[m[40m level)[45;66H[K[45;66H156,1[9C55%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m157 [m[40m{[45;66H[K[45;66H157,1[9C55%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m158 [m[40m    [1m[33mif[m[40m(t == [1m[31mNULL[m[40m)[45;66H[K[45;66H158,1-4[7C56%[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m159 [8Creturn[m[40m;[45;66H[K[45;66H159,1-4[7C56%[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m160 [m[40m    [1m[33melse[m[40m [1m[33mif[m[40m(level == [1m[31m1[m[40m)[45;66H[K[45;66H160,1-4[7C57%[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m161 [m[40m[8Cprintf([1m[31m"[m[40m[1m[35m%d[m[40m[1m[31m "[m[40m, t->key);[45;66H[K[45;66H161,1-4[7C57%[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m162 [m[40m    [1m[33melse[m[40m[45;66H[K[45;66H162,1-4[7C58%[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m163 [m[40m    {[45;66H[K[45;66H163,1-4[7C58%[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m164 [m[40m[8CprintLevel(t->left, level - [1m[31m1[m[40m);[45;66H[K[45;66H164,1-4[7C59%[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m165 [m[40m[8CprintLevel(t->right, level - [1m[31m1[m[40m);[45;66H[K[45;66H165,1-4[7C59%[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m166 [m[40m    }[45;66H[K[45;66H166,1-4[7C60%[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[34;5H[46m{[m[40m[44;1H[1m[33m167 [m[40m[46m}[m[40m[45;66H[K[45;66H167,1[9C60%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[33;5H{[43;5H}
[1m[33m168 [m[40m[45;66H[K[45;66H168,0-1[7C61%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m169 [m[40m[1m[32mvoid[m[40m prettyPrintT(nodeT *p, [1m[32mint[m[40m iIndent)[45;66H[K[45;66H169,1[9C61%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m170 [m[40m{[45;66H[K[45;66H170,1[9C62%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m171 [m[40m    [1m[32mint[m[40m i;[45;66H[K[45;66H171,1-4[7C62%[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m172 [m[40m    [1m[33mif[m[40m(p == [1m[31mNULL[m[40m) [1m[33mreturn[m[40m;[45;66H[K[45;66H172,1-4[7C63%[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m173 [m[40m[45;66H[K[45;66H173,0-1[7C63%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m174 [m[40m    prettyPrintT(p->right, iIndent+[1m[31m1[m[40m);[45;66H[K[45;66H174,1-4[7C64%[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m175 [m[40m[45;66H[K[45;66H175,0-1[7C64%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m176 [m[40m    [1m[33mfor[m[40m(i = [1m[31m0[m[40m; i < iIndent; i++)[45;66H[K[45;66H176,1-4[7C65%[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m177 [m[40m    {[45;66H[K[45;66H177,1-4[7C65%[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m178 [m[40m[8Cprintf([1m[31m"    "[m[40m);[45;66H[K[45;66H178,1-4[7C66%[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m179 [m[40m    }[45;66H[K[45;66H179,1-4[7C66%[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m180 [m[40m[45;66H[K[45;66H180,0-1[7C67%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m181 [m[40m    printf([1m[31m"[m[40m[1m[35m%d\n[m[40m[1m[31m"[m[40m, p->key);[45;66H[K[45;66H181,1-4[7C67%[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m182 [m[40m[45;66H[K[45;66H182,0-1[7C68%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m183 [m[40m    prettyPrintT(p->left, iIndent+[1m[31m1[m[40m);[45;66H[K[45;66H183,1-4[7C68%[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[30;5H[46m{[m[40m[44;1H[1m[33m184 [m[40m[46m}[m[40m[45;66H[K[45;66H184,1[9C69%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[29;5H{[43;5H}
[1m[33m185 [m[40m[45;66H[K[45;66H185,0-1[7C69%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m186 [m[40m[1m[36m/* Given a non-empty binary search tree, return the node with minimum[m[40m[45;66H[K[45;66H186,1[9C70%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m187 [m[40m[1m[36m   key value found in that tree. Note that the entire tree does not[m[40m[45;66H[K[45;66H187,1[9C70%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m188 [m[40m[1m[36m   need to be searched. */[m[40m[45;66H[K[45;66H188,1[9C71%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m189 [m[40mnodeT *minValueNode(nodeT *node)[45;66H[K[45;66H189,1[9C71%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m190 [m[40m{[45;66H[K[45;66H190,1[9C72%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m191 [m[40m    nodeT *current = node;[45;66H[K[45;66H191,1[9C72%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m192 [m[40m[45;66H[K[45;66H192,1[9C73%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m193 [m[40m    [1m[36m/* loop down to find the leftmost leaf */[m[40m[45;66H[K[45;66H193,1[9C73%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m194 [m[40m    [1m[33mwhile[m[40m (current->left != [1m[31mNULL[m[40m)[45;66H[K[45;66H194,1[9C74%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m195 [m[40m[8Ccurrent = current->left;[45;66H[K[45;66H195,1[9C74%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m196 [m[40m[45;66H[K[45;66H196,1[9C75%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m197 [m[40m    [1m[33mreturn[m[40m current;[45;66H[K[45;66H197,1[9C75%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[36;5H[46m{[m[40m[44;1H[1m[33m198 [m[40m[46m}[m[40m[45;66H[K[45;66H198,1[9C76%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[35;5H{[43;5H}
[1m[33m199 [m[40m[45;66H[K[45;66H199,0-1[7C76%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m200 [m[40m[1m[36m/* Given a binary search tree and a key, this function deletes the key[m[40m[45;66H[K[45;66H200,1[9C77%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m201 [m[40m[1m[36m   and returns the new root */[m[40m[45;66H[K[45;66H201,1[9C77%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m202 [m[40mnodeT *deleteNode(nodeT *root, [1m[32mint[m[40m key)[45;66H[K[45;66H202,1[9C78%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m203 [m[40m{[45;66H[K[45;66H203,1[9C78%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m204 [m[40m    [1m[36m// base case[m[40m[45;66H[K[45;66H204,1[9C79%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m205 [m[40m    [1m[33mif[m[40m (root == [1m[31mNULL[m[40m) [1m[33mreturn[m[40m root;[45;66H[K[45;66H205,1[9C79%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m206 [m[40m[45;66H[K[45;66H206,1[9C80%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m207 [m[40m    [1m[36m// If the key to be deleted is smaller than the root's key,[m[40m[45;66H[K[45;66H207,1[9C80%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m208 [m[40m    [1m[36m// then it lies in left subtree[m[40m[45;66H[K[45;66H208,1[9C81%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m209 [m[40m    [1m[33mif[m[40m (key < root->key)[45;66H[K[45;66H209,1[9C81%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m210 [m[40m[8Croot->left = deleteNode(root->left, key);[45;66H[K[45;66H210,1[9C82%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m211 [m[40m[45;66H[K[45;66H211,1[9C82%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m212 [m[40m    [1m[36m// If the key to be deleted is greater than the root's key,[m[40m[45;66H[K[45;66H212,1[9C83%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m213 [m[40m    [1m[36m// then it lies in right subtree[m[40m[45;66H[K[45;66H213,1[9C83%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m214 [m[40m    [1m[33melse[m[40m [1m[33mif[m[40m (key > root->key)[45;66H[K[45;66H214,1[9C84%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m215 [m[40m[8Croot->right = deleteNode(root->right, key);[45;66H[K[45;66H215,1[9C84%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m216 [m[40m[45;66H[K[45;66H216,1[9C85%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m217 [m[40m    [1m[36m// if key is same as root's key, then This is the node[m[40m[45;66H[K[45;66H217,1[9C85%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m218 [m[40m    [1m[36m// to be deleted[m[40m[45;66H[K[45;66H218,1[9C86%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m219 [m[40m    [1m[33melse[m[40m[45;66H[K[45;66H219,1[9C86%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m220 [m[40m    {[45;66H[K[45;66H220,1[9C87%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m221 [m[40m[8C[1m[36m// node with only one child or no child[m[40m[45;66H[K[45;66H221,1[9C87%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m222 [8Cif[m[40m (root->left == [1m[31mNULL[m[40m)[45;66H[K[45;66H222,1[9C88%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m223 [m[40m[8C{[45;66H[K[45;66H223,1[9C88%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m224 [m[40m[12CnodeT *temp = root->right;[45;66H[K[45;66H224,1[9C89%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m225 [m[40m[12Cfree(root);[45;66H[K[45;66H225,1[9C89%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m226 [12Creturn[m[40m temp;[45;66H[K[45;66H226,1[9C90%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m227 [m[40m[8C}[45;66H[K[45;66H227,1[9C90%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m228 [8Celse[m[40m [1m[33mif[m[40m (root->right == [1m[31mNULL[m[40m)[45;66H[K[45;66H228,1[9C91%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m229 [m[40m[8C{[45;66H[K[45;66H229,1[9C91%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m230 [m[40m[12CnodeT *temp = root->left;[45;66H[K[45;66H230,1[9C92%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m231 [m[40m[12Cfree(root);[45;66H[K[45;66H231,1[9C92%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m232 [12Creturn[m[40m temp;[45;66H[K[45;66H232,1[9C93%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m233 [m[40m[8C}[45;66H[K[45;66H233,1[9C93%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m234 [m[40m[45;66H[K[45;66H234,1[9C94%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m235 [m[40m[8C[1m[36m// node with two children: Get the inorder successor (smallest[m[40m[45;66H[K[45;66H235,1[9C94%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m236 [m[40m[8C[1m[36m// in the right subtree)[m[40m[45;66H[K[45;66H236,1[9C95%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m237 [m[40m[8CnodeT *temp = minValueNode(root->right);[45;66H[K[45;66H237,1[9C95%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m238 [m[40m[45;66H[K[45;66H238,1[9C96%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m239 [m[40m[8C[1m[36m// Copy the inorder successor's content to this node[m[40m[45;66H[K[45;66H239,1[9C96%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m240 [m[40m[8Croot->key = temp->key;[45;66H[K[45;66H240,1[9C97%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m241 [m[40m[45;66H[K[45;66H241,1[9C97%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m242 [m[40m[8C[1m[36m// Delete the inorder successor[m[40m[45;66H[K[45;66H242,1[9C98%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m243 [m[40m[8Croot->right = deleteNode(root->right, temp->key);[45;66H[K[45;66H243,1[9C98%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m244 [m[40m    }[45;66H[K[45;66H244,1[9C99%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m245 [m[40m    [1m[33mreturn[m[40m root;[45;66H[K[45;66H245,1[9C99%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[1;5H[46m{[m[40m[44;1H[1m[33m246 [m[40m[46m}[m[40m[45;66H[K[45;66H246,1[9CBot[44;5H[?12l[?25h[?25l[1C[7m [m[40m
[1m-- VISUAL LINE --[m[40m[45;66H[K[45;66H246,1[9CBot[44;5H[?12l[?25h[?25l[1;5H{[43;6H[7m   [m[40m[1m[7m[33mreturn[m[40m[7m root; [44;5H}[m[40m[45;68H5[43;5H[?12l[?25h[?25l[42;6H[7m   } [43;5H [m[40m[45;68H4[42;5H[?12l[?25h[?25l[41;6H[7m       root->right = deleteNode(root->right, temp->key); [42;5H [m[40m[45;68H3[41;5H[?12l[?25h[?25l[40;6H[7m       [m[40m[1m[7m[36m// Delete the inorder successor[m[40m[7m [41;5H [m[40m[45;68H2[40;5H[?12l[?25h[?25l[39;6H[7m [40;5H [m[40m[45;68H1[39;5H[?12l[?25h[?25l[38;6H[7m       root->key = temp->key; [39;5H [m[40m[45;68H0[38;5H[?12l[?25h[?25l[37;6H[7m       [m[40m[1m[7m[36m// Copy the inorder successor's content to this node[m[40m[7m [38;5H [m[40m[45;67H39[37;5H[?12l[?25h[?25l[36;6H[7m [37;5H [m[40m[45;68H8[36;5H[?12l[?25h[?25l[35;6H[7m       nodeT *temp = minValueNode(root->right); [36;5H [m[40m[45;68H7[35;5H[?12l[?25h[?25l[34;6H[7m       [m[40m[1m[7m[36m// in the right subtree)[m[40m[7m [35;5H [m[40m[45;68H6[34;5H[?12l[?25h[?25l[33;6H[7m       [m[40m[1m[7m[36m// node with two children: Get the inorder successor (smallest[m[40m[7m [34;5H [m[40m[45;68H5[33;5H[?12l[?25h[?25l[32;6H[7m [33;5H [m[40m[45;68H4[32;5H[?12l[?25h[?25l[31;6H[7m       } [32;5H [m[40m[45;68H3[31;5H[?12l[?25h[?25l[30;6H[7m           [m[40m[1m[7m[33mreturn[m[40m[7m temp; [31;5H [m[40m[45;68H2[30;5H[?12l[?25h[?25l[29;6H[7m           free(root); [30;5H [m[40m[45;68H1[29;5H[?12l[?25h[?25l[28;6H[7m           nodeT *temp = root->left; [29;5H [m[40m[45;68H0[28;5H[?12l[?25h[?25l[27;6H[7m       { [28;5H [m[40m[45;67H29[27;5H[?12l[?25h[?25l[26;6H[7m       [m[40m[1m[7m[33melse[m[40m[7m [m[40m[1m[7m[33mif[m[40m[7m (root->right == [m[40m[1m[7m[31mNULL[m[40m[7m) [27;5H [m[40m[45;68H8[26;5H[?12l[?25h[?25l[25;6H[7m       } [26;5H [m[40m[45;68H7[25;5H[?12l[?25h[?25l[24;6H[7m           [m[40m[1m[7m[33mreturn[m[40m[7m temp; [25;5H [m[40m[45;68H6[24;5H[?12l[?25h[?25l[23;6H[7m           free(root); [24;5H [m[40m[45;68H5[23;5H[?12l[?25h[?25l[22;6H[7m           nodeT *temp = root->right; [23;5H [m[40m[45;68H4[22;5H[?12l[?25h[?25l[21;6H[7m       { [22;5H [m[40m[45;68H3[21;5H[?12l[?25h[?25l[20;6H[7m       [m[40m[1m[7m[33mif[m[40m[7m (root->left == [m[40m[1m[7m[31mNULL[m[40m[7m) [21;5H [m[40m[45;68H2[20;5H[?12l[?25h[?25l[19;6H[7m       [m[40m[1m[7m[36m// node with only one child or no child[m[40m[7m [20;5H [m[40m[45;68H1[19;5H[?12l[?25h[?25l[18;6H[7m   { [19;5H [m[40m[45;68H0[18;5H[?12l[?25h[?25l[17;6H[7m   [m[40m[1m[7m[33melse[m[40m[7m [18;5H [m[40m[45;67H19[17;5H[?12l[?25h[?25l[16;6H[7m   [m[40m[1m[7m[36m// to be deleted[m[40m[7m [17;5H [m[40m[45;68H8[16;5H[?12l[?25h[?25l[15;6H[7m   [m[40m[1m[7m[36m// if key is same as root's key, then This is the node[m[40m[7m [16;5H [m[40m[45;68H7[15;5H[?12l[?25h[?25l[14;6H[7m [15;5H [m[40m[45;68H6[14;5H[?12l[?25h[?25l[13;6H[7m       root->right = deleteNode(root->right, key); [14;5H [m[40m[45;68H5[13;5H[?12l[?25h[?25l[12;6H[7m   [m[40m[1m[7m[33melse[m[40m[7m [m[40m[1m[7m[33mif[m[40m[7m (key > root->key) [13;5H [m[40m[45;68H4[12;5H[?12l[?25h[?25l[11;6H[7m   [m[40m[1m[7m[36m// then it lies in right subtree[m[40m[7m [12;5H [m[40m[45;68H3[11;5H[?12l[?25h[?25l[10;6H[7m   [m[40m[1m[7m[36m// If the key to be deleted is greater than the root's key,[m[40m[7m [11;5H [m[40m[45;68H2[10;5H[?12l[?25h[?25l[9;6H[7m [10;5H [m[40m[45;68H1[9;5H[?12l[?25h[?25l[8;6H[7m       root->left = deleteNode(root->left, key); [9;5H [m[40m[45;68H0[8;5H[?12l[?25h[?25l[7;6H[7m   [m[40m[1m[7m[33mif[m[40m[7m (key < root->key) [8;5H [m[40m[45;67H09[7;5H[?12l[?25h[?25l[6;6H[7m   [m[40m[1m[7m[36m// then it lies in left subtree[m[40m[7m [7;5H [m[40m[45;68H8[6;5H[?12l[?25h[?25l[5;6H[7m   [m[40m[1m[7m[36m// If the key to be deleted is smaller than the root's key,[m[40m[7m [6;5H [m[40m[45;68H7[5;5H[?12l[?25h[?25l[4;6H[7m [5;5H [m[40m[45;68H6[4;5H[?12l[?25h[?25l[3;6H[7m   [m[40m[1m[7m[33mif[m[40m[7m (root == [m[40m[1m[7m[31mNULL[m[40m[7m) [m[40m[1m[7m[33mreturn[m[40m[7m root; [4;5H [m[40m[45;68H5[3;5H[?12l[?25h[?25l[2;6H[7m   [m[40m[1m[7m[36m// base case[m[40m[7m [3;5H [m[40m[45;68H4[2;5H[?12l[?25h[?25l[1;5H[46m{[m[40m[7m [2;5H [m[40m[45;68H3[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m202 [m[40mn[7modeT *deleteNode(nodeT *root, [m[40m[1m[7m[32mint[m[40m[7m key) [2;5H{[m[40m[45;68H2[11C99%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m201 [m[40m[1m[36m [m[40m[1m[7m[36m  and returns the new root */[m[40m[7m [2;5Hn[m[40m[45;68H1[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m200 [m[40m[1m[36m/[m[40m[1m[7m[36m* Given a binary search tree and a key, this function deletes the key[m[40m[7m [m[40m[2;5H[1m[7m[36m   and returns the new root */[m[40m[7m [m[40m[45;68H0[12C8[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m199 [m[40m[2;5H[1m[7m[36m/* Given a binary search tree and a key, this function deletes the key[m[40m[7m [m[40m[45;66H[K[45;66H199,0-1[7C98%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m198 [m[40m}[7m [2;5H [m[40m[45;66H[K[45;66H198,1[9C97%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m197 [m[40m [7m   [m[40m[1m[7m[33mreturn[m[40m[7m current; [2;5H}[m[40m[45;66H[K[45;66H197,1[9C97%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m196 [m[40m [7m [2;5H [m[40m[45;68H6[12C6[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m195 [m[40m [7m       current = current->left; [2;5H [m[40m[45;68H5[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m194 [m[40m [7m   [m[40m[1m[7m[33mwhile[m[40m[7m (current->left != [m[40m[1m[7m[31mNULL[m[40m[7m) [2;5H [m[40m[45;66H[K[45;66H194,1[9C95%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m193 [m[40m [7m   [m[40m[1m[7m[36m/* loop down to find the leftmost leaf */[m[40m[7m [2;5H [m[40m[45;68H3[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m192 [m[40m [7m [2;5H [m[40m[45;68H2[12C4[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m191 [m[40m [7m   nodeT *current = node; [2;5H [m[40m[45;66H[K[45;66H191,1[9C94%[1;5H[?12l[?25h[?25l    nodeT *current = node;[1;31H[K[2;5H [45;68H2[2;5H[?12l[?25h[?25l[2;6H[K[3;5H [45;68H3[3;5H[?12l[?25h[?25l[2;6H[7m [3;5H [m[40m[45;68H2[2;5H[?12l[?25h[?25l[1;6H[7m   nodeT *current = node; [2;5H [m[40m[45;68H1[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m190 [m[40m[46m{[m[40m[7m [2;5H [m[40m[45;66H[K[45;66H190,1[9C93%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m189 [m[40mn[7modeT *minValueNode(nodeT *node) [2;5H{[m[40m[45;66H[K[45;66H189,1[9C93%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m188 [m[40m[1m[36m [m[40m[1m[7m[36m  need to be searched. */[m[40m[7m [2;5Hn[m[40m[45;66H[K[45;66H188,1[9C92%[1;5H[?12l[?25h[?25l[1C[1m[36m  need to be searched. */[m[40m[1;31H[K[2;5Hn[45;68H9[2;5H[?12l[?25h[?25l[1;6H[1m[7m[36m  need to be searched. */[m[40m[7m [2;5Hn[m[40m[45;68H8[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m187 [m[40m[1m[36m [m[40m[1m[7m[36m  key value found in that tree. Note that the entire tree does not[m[40m[7m [m[40m[2;5H[1m[7m[36m   need to be searched. */[m[40m[7m [m[40m[45;66H[K[45;66H187,1[9C92%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m186 [m[40m[1m[36m/[m[40m[1m[7m[36m* Given a non-empty binary search tree, return the node with minimum[m[40m[7m [m[40m[2;5H[1m[7m[36m   key value found in that tree. Note that the entire tree does not[m[40m[7m [m[40m[45;66H[K[45;66H186,1[9C91%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m185 [m[40m[2;5H[1m[7m[36m/* Given a non-empty binary search tree, return the node with minimum[m[40m[7m [m[40m[45;66H[K[45;66H185,0-1[7C91%[1;5H[?12l[?25h[?25l[2;5H[1m[36m/[m[40m[1m[7m[36m* Given a non-empty binary search tree, return the node with minimum[m[40m[7m [m[40m[45;68H6,1  [2;5H[?12l[?25h[?25l[45;1H61 fewer lines[1m [m[40m[45;15H[K[2;1H[1m[34m~                                                                                  [3;1H~                                                                                  [4;1H~                                                                                  [5;1H~                                                                                  [6;1H~                                                                                  [7;1H~                                                                                  [8;1H~                                                                                  [9;1H~                                                                                  [10;1H~                                                                                  [11;1H~                                                                                  [12;1H~                                                                                  [13;1H~                                                                                  [14;1H~                                                                                  [15;1H~                                                                                  [16;1H~                                                                                  [17;1H~                                                                                  [18;1H~                                                                                  [19;1H~                                                                                  [20;1H~                                                                                  [21;1H~                                                                                  [22;1H~                                                                                  [23;1H~                                                                                  [24;1H~                                                                                  [25;1H~                                                                                  [26;1H~                                                                                  [27;1H~                                                                                  [28;1H~                                                                                  [29;1H~                                                                                  [30;1H~                                                                                  [31;1H~                                                                                  [32;1H~                                                                                  [33;1H~                                                                                  [34;1H~                                                                                  [35;1H~                                                                                  [36;1H~                                                                                  [37;1H~                                                                                  [38;1H~                                                                                  [39;1H~                                                                                  [40;1H~                                                                                  [41;1H~                                                                                  [42;1H~                                                                                  [43;1H~                                                                                  [44;1H~                                                                                  [m[40m[45;66H185,0-1[7CBot[45;66H[K[45;66H185,0-1[7CBot[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m184 [m[40m}[45;1H[K[45;66H184,1[9CBot[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m183 [m[40m    prettyPrintT(p->left, iIndent+[1m[31m1[m[40m);[45;66H[K[45;66H183,1-4[7CBot[1;8H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m182 [m[40m[45;66H[K[45;66H182,0-1[7CBot[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m181 [m[40m    printf([1m[31m"[m[40m[1m[35m%d\n[m[40m[1m[31m"[m[40m, p->key);[45;66H[K[45;66H181,1-4[7CBot[1;8H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m180 [m[40m[45;66H[K[45;66H180,0-1[7CBot[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m179 [m[40m    }[45;66H[K[45;66H179,1-4[7CBot[1;8H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m178 [m[40m[8Cprintf([1m[31m"    "[m[40m);[45;66H[K[45;66H178,1-4[7CBot[1;8H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m177 [m[40m    {[45;66H[K[45;66H177,1-4[7CBot[1;8H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m176 [m[40m    [1m[33mfor[m[40m(i = [1m[31m0[m[40m; i < iIndent; i++)[45;66H[K[45;66H176,1-4[7CBot[1;8H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m175 [m[40m[45;66H[K[45;66H175,0-1[7CBot[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m174 [m[40m    prettyPrintT(p->right, iIndent+[1m[31m1[m[40m);[45;66H[K[45;66H174,1-4[7CBot[1;8H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m173 [m[40m[45;66H[K[45;66H173,0-1[7CBot[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m172 [m[40m    [1m[33mif[m[40m(p == [1m[31mNULL[m[40m) [1m[33mreturn[m[40m;[45;66H[K[45;66H172,1-4[7CBot[1;8H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m171 [m[40m    [1m[32mint[m[40m i;[45;66H[K[45;66H171,1-4[7CBot[1;8H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m170 [m[40m[46m{[15;5H}[m[40m[45;66H[K[45;66H170,1[9CBot[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m169 [m[40m[1m[32mvoid[m[40m prettyPrintT(nodeT *p, [1m[32mint[m[40m iIndent)[2;5H{[16;5H}[45;66H[K[45;66H169,1[9CBot[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m168 [m[40m[45;66H[K[45;66H168,0-1[7CBot[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m167 [m[40m}[45;66H[K[45;66H167,1[9CBot[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m166 [m[40m    }[45;66H[K[45;66H166,1-4[7CBot[1;8H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m165 [m[40m[8CprintLevel(t->right, level - [1m[31m1[m[40m);[45;66H[K[45;66H165,1-4[7CBot[1;8H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m164 [m[40m[8CprintLevel(t->left, level - [1m[31m1[m[40m);[45;66H[K[45;66H164,1-4[7CBot[1;8H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m163 [m[40m    {[45;66H[K[45;66H163,1-4[7CBot[1;8H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m162 [m[40m    [1m[33melse[m[40m[45;66H[K[45;66H162,1-4[7CBot[1;8H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m161 [m[40m[8Cprintf([1m[31m"[m[40m[1m[35m%d[m[40m[1m[31m "[m[40m, t->key);[45;66H[K[45;66H161,1-4[7CBot[1;8H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m160 [m[40m    [1m[33melse[m[40m [1m[33mif[m[40m(level == [1m[31m1[m[40m)[45;66H[K[45;66H160,1-4[7CBot[1;8H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m159 [8Creturn[m[40m;[45;66H[K[45;66H159,1-4[7CBot[1;8H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m158 [m[40m    [1m[33mif[m[40m(t == [1m[31mNULL[m[40m)[45;66H[K[45;66H158,1-4[7CBot[1;8H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m157 [m[40m[46m{[11;5H}[m[40m[45;66H[K[45;66H157,1[9CBot[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m156 [m[40m[1m[32mvoid[m[40m printLevel(nodeT *t, [1m[32mint[m[40m level)[2;5H{[12;5H}[45;66H[K[45;66H156,1[9CBot[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m155 [m[40m[1m[36m// Private function used to print each level[m[40m[45;66H[K[45;66H155,1[9CBot[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m154 [m[40m[45;66H[K[45;66H154,0-1[7CBot[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m153 [m[40m}[45;66H[K[45;66H153,1[9CBot[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m152 [m[40m[8CprintLevel(t, i);[45;66H[K[45;66H152,1-4[7CBot[1;8H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m151 [m[40m    [1m[33mfor[m[40m(i = [1m[31m1[m[40m; i <= h; i++)[45;66H[K[45;66H151,1-4[7CBot[1;8H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m150 [m[40m    [1m[32mint[m[40m i;[45;66H[K[45;66H150,1-4[7CBot[1;8H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m149 [m[40m    [1m[32mint[m[40m h = height(t);[45;66H[K[45;66H149,1-4[7CBot[1;8H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m148 [m[40m[46m{[6;5H}[m[40m[45;66H[K[45;66H148,1[9CBot[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m147 [m[40m[1m[32mvoid[m[40m LevelOrder(nodeT *t)[2;5H{[7;5H}[45;66H[K[45;66H147,1[9CBot[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m146 [m[40m[45;66H[K[45;66H146,0-1[7CBot[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m145 [m[40m}[45;66H[K[45;66H145,1[9CBot[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m144 [m[40m  }[45;66H[K[45;66H144,1[9CBot[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m143 [m[40m    printf([1m[31m"[m[40m[1m[35m%d[m[40m[1m[31m "[m[40m, t->key);[45;66H[K[45;66H143,1[9CBot[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m142 [m[40m    PostOrder(t->right);[45;66H[K[45;66H142,1[9CBot[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m141 [m[40m    PostOrder(t->left);[45;66H[K[45;66H141,1[9C99%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m140 [m[40m  [1m[33mif[m[40m (t != [1m[31mNULL[m[40m) {[45;66H[K[45;66H140,1[9C98%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m139 [m[40m[46m{[7;5H}[m[40m[45;66H[K[45;66H139,1[9C97%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m138 [m[40m[1m[32mvoid[m[40m PostOrder(nodeT *t)[2;5H{[8;5H}[45;66H[K[45;66H138,1[9C97%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m137 [m[40m[45;66H[K[45;66H137,0-1[7C96%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m136 [m[40m}[45;66H[K[45;66H136,1[9C95%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m135 [m[40m  }[45;66H[K[45;66H135,1[9C95%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m134 [m[40m    PreOrder(t->right);[45;66H[K[45;66H134,1[9C94%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m133 [m[40m    PreOrder(t->left);[45;66H[K[45;66H133,1[9C93%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m132 [m[40m    printf([1m[31m"[m[40m[1m[35m%d[m[40m[1m[31m "[m[40m, t->key);[45;66H[K[45;66H132,1[9C92%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m131 [m[40m  [1m[33mif[m[40m (t != [1m[31mNULL[m[40m) {[45;66H[K[45;66H131,1[9C92%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m130 [m[40m[46m{[7;5H}[m[40m[45;66H[K[45;66H130,1[9C91%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m129 [m[40m[1m[32mvoid[m[40m PreOrder(nodeT *t)[2;5H{[8;5H}[45;66H[K[45;66H129,1[9C90%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m128 [m[40m[45;66H[K[45;66H128,0-1[7C90%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m127 [m[40m}[45;66H[K[45;66H127,1[9C89%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m126 [m[40m[1m[36m//  printf("\n");[m[40m[45;66H[K[45;66H126,1[9C88%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m125 [m[40m  }[45;66H[K[45;66H125,1[9C87%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m124 [m[40m    DisplayTree(t->right);[45;66H[K[45;66H124,1[9C87%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m123 [m[40m    printf([1m[31m"[m[40m[1m[35m%d[m[40m[1m[31m "[m[40m, t->key);[45;66H[K[45;66H123,1[9C86%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m122 [m[40m    DisplayTree(t->left);[45;66H[K[45;66H122,1[9C85%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m121 [m[40m  [1m[33mif[m[40m (t != [1m[31mNULL[m[40m) {[45;66H[K[45;66H121,1[9C85%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m120 [m[40m[46m{[8;5H}[m[40m[45;66H[K[45;66H120,1[9C84%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m119 [m[40m[1m[32mvoid[m[40m DisplayTree(nodeT *t)[2;5H{[9;5H}[45;66H[K[45;66H119,1[9C83%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m118 [m[40m[1m[36m// Printing tree in order[m[40m[45;66H[K[45;66H118,1[9C82%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m117 [m[40m[45;66H[K[45;66H117,0-1[7C82%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m116 [m[40m}[45;66H[K[45;66H116,1[9C81%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m115 [m[40m     [1m[33mreturn[m[40m min(min(p->key, imin(p->left)), min(p->key, imin(p->right)));[45;66H[K[45;66H115,1[9C80%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m114 [m[40m  [1m[33melse[m[40m[45;66H[K[45;66H114,1[9C80%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m113 [m[40m      [1m[33mreturn[m[40m [1m[31m1000[m[40m;[45;66H[K[45;66H113,1[9C79%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m112 [m[40m  [1m[33mif[m[40m (p == [1m[31mNULL[m[40m)[45;66H[K[45;66H112,1[9C78%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m111 [m[40m[46m{[6;5H}[m[40m[45;66H[K[45;66H111,1[9C78%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m110 [m[40m[1m[32mint[m[40m imin(nodeT *p)[2;5H{[7;5H}[45;66H[K[45;66H110,1[9C77%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m109 [m[40m[45;66H[K[45;66H109,0-1[7C76%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m108 [m[40m}[45;66H[K[45;66H108,1[9C75%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m107 [m[40m    [1m[33mreturn[m[40m max(max(p->key, imax(p->left)), max(p->key, imax(p->right)));[45;66H[K[45;66H107,1[9C75%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m106 [m[40m  [1m[33melse[m[40m[45;66H[K[45;66H106,1[9C74%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m105 [m[40m      [1m[33mreturn[m[40m [1m[31m0[m[40m;[45;66H[K[45;66H105,1[9C73%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m104 [m[40m  [1m[33mif[m[40m (p == [1m[31mNULL[m[40m)[45;66H[K[45;66H104,1[9C73%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m103 [m[40m  [1m[32mint[m[40m tmp;[45;66H[K[45;66H103,1[9C72%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m102 [m[40m[46m{[7;5H}[m[40m[45;66H[K[45;66H102,1[9C71%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m101 [m[40m[1m[32mint[m[40m imax(nodeT *p)[2;5H{[8;5H}[45;66H[K[45;66H101,1[9C70%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m100 [m[40m[45;66H[K[45;66H100,0-1[7C70%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 99 [m[40m}[45;66H[K[45;66H99,1[10C69%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 98 [m[40m     [1m[33mreturn[m[40m ([1m[31m1[m[40m + count(p->left) + count(p->right) );[45;66H[K[45;66H98,1[10C68%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 97 [m[40m  [1m[33melse[m[40m[45;66H[K[45;66H97,1[10C68%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 96 [m[40m      [1m[33mreturn[m[40m [1m[31m0[m[40m;[45;66H[K[45;66H96,1[10C67%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 95 [m[40m  [1m[33mif[m[40m (p == [1m[31mNULL[m[40m)[45;66H[K[45;66H95,1[10C66%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 94 [m[40m[46m{[6;5H}[m[40m[45;66H[K[45;66H94,1[10C65%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 93 [m[40m[1m[32mint[m[40m count(nodeT *p)[2;5H{[7;5H}[45;66H[K[45;66H93,1[10C65%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 92 [m[40m[45;66H[K[45;66H92,0-1[8C64%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 91 [m[40m}[45;66H[K[45;66H91,1[10C63%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 90 [m[40m[16Csum(p->right) );[45;66H[K[45;66H90,1[10C63%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 89 [m[40m[16Csum(p->left) +[45;66H[K[45;66H89,1[10C62%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 88 [m[40m     [1m[33mreturn[m[40m (p->key +[45;66H[K[45;66H88,1[10C61%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 87 [m[40m  [1m[33melse[m[40m[45;66H[K[45;66H87,1[10C60%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 86 [m[40m      [1m[33mreturn[m[40m [1m[31m0[m[40m;[45;66H[K[45;66H86,1[10C60%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 85 [m[40m  [1m[33mif[m[40m (p == [1m[31mNULL[m[40m)[45;66H[K[45;66H85,1[10C59%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 84 [m[40m[46m{[8;5H}[m[40m[45;66H[K[45;66H84,1[10C58%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 83 [m[40m[1m[32mint[m[40m sum(nodeT *p)[2;5H{[9;5H}[45;66H[K[45;66H83,1[10C58%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 82 [m[40m[45;66H[K[45;66H82,0-1[8C57%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 81 [m[40m}[45;66H[K[45;66H81,1[10C56%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 80 [m[40m[19Cheight(t->right)) );[45;66H[K[45;66H80,1[10C56%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 79 [m[40m[19Cheight(t->left),[45;66H[K[45;66H79,1[10C55%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 78 [m[40m     [1m[33mreturn[m[40m ([1m[31m1[m[40m + max([45;66H[K[45;66H78,1[10C54%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 77 [m[40m  [1m[33melse[m[40m[45;66H[K[45;66H77,1[10C53%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 76 [m[40m      [1m[33mreturn[m[40m [1m[31m0[m[40m;[45;66H[K[45;66H76,1[10C53%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 75 [m[40m  [1m[33mif[m[40m (t == [1m[31mNULL[m[40m)[45;66H[K[45;66H75,1[10C52%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 74 [m[40m[46m{[8;5H}[m[40m[45;66H[K[45;66H74,1[10C51%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 73 [m[40m[1m[32mint[m[40m height(nodeT *t)[2;5H{[9;5H}[45;66H[K[45;66H73,1[10C51%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 72 [m[40m[1m[36m// Operating on tree[m[40m[45;66H[K[45;66H72,1[10C50%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 71 [m[40m[45;66H[K[45;66H71,0-1[8C49%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 70 [m[40m[45;66H[K[45;66H70,0-1[8C48%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 69 [m[40m}[45;66H[K[45;66H69,1[10C48%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 68 [m[40m    }[45;66H[K[45;66H68,1-4[8C47%[1;8H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 67 [m[40m[8CInsertNode(&t->right, key);[45;66H[K[45;66H67,1-4[8C46%[1;8H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 66 [m[40m    } [1m[33melse[m[40m {[45;66H[K[45;66H66,1-4[8C46%[1;8H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 65 [m[40m[8CInsertNode(&t->left, key);[45;66H[K[45;66H65,1-4[8C45%[1;8H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 64 [m[40m    [1m[33mif[m[40m (key < t->key) {[45;66H[K[45;66H64,1-4[8C44%[1;8H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 63 [m[40m     }[45;66H[K[45;66H63,1[10C43%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 62 [9Creturn[m[40m;[45;66H[K[45;66H62,1[10C43%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 61 [m[40m[9C*tptr=tmp;[45;66H[K[45;66H61,1[10C42%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 60 [m[40m[9Ctmp->left=tmp->right=[1m[31mNULL[m[40m;[45;66H[K[45;66H60,1[10C41%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 59 [m[40m[9Ctmp->key = key;[45;66H[K[45;66H59,1[10C41%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 58 [m[40m[9Ctmp=(nodeT *)malloc([1m[33msizeof[m[40m([1m[32mstruct[m[40m nodeT));[45;66H[K[45;66H58,1[10C40%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 57 [m[40m    [1m[33mif[m[40m (t == [1m[31mNULL[m[40m) {[45;66H[K[45;66H57,1-4[8C39%[1;8H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 56 [m[40m    [1m[36m// printf("**tptr = %p, *tptr = %d, tptr = %p", **tptr, *tptr->key, &tptr);[m[40m[45;66H[K[45;66H56,1[10C39%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 55 [m[40m    [1m[36m// printf("---Insert Node---\n");[m[40m[45;66H[K[45;66H55,1[10C38%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 54 [m[40m     t=*tptr;[45;66H[K[45;66H54,1[10C37%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 53 [m[40m     nodeT  *t, *tmp;[45;66H[K[45;66H53,1[10C36%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 52 [m[40m[46m{[18;5H}[m[40m[45;66H[K[45;66H52,1[10C36%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 51 [m[40m[1m[32mvoid[m[40m InsertNode(nodeT  **tptr, [1m[32mint[m[40m key)[2;5H{[19;5H}[45;66H[K[45;66H51,1[10C35%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 50 [m[40m[1m[36m// Manipulating tree[m[40m[45;66H[K[45;66H50,1[10C34%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 49 [m[40m[45;66H[K[45;66H49,0-1[8C34%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 48 [m[40m}[45;66H[K[45;66H48,1[10C33%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 47 [m[40m  }[45;66H[K[45;66H47,1[10C32%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 46 [m[40m     [1m[33mreturn[m[40m FindNode(t->right, key);[45;66H[K[45;66H46,1[10C31%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 45 [m[40m   } [1m[33melse[m[40m {[45;66H[K[45;66H45,1[10C31%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 44 [m[40m     [1m[33mreturn[m[40m FindNode(t->left, key);[45;66H[K[45;66H44,1[10C30%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 43 [m[40m   [1m[33mif[m[40m (key < t->key) {[45;66H[K[45;66H43,1[10C29%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 42 [m[40m   [1m[33mif[m[40m (key == t->key) [1m[33mreturn[m[40m t;[45;66H[K[45;66H42,1[10C29%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 41 [m[40m   [1m[33mif[m[40m (t == [1m[31mNULL[m[40m) [1m[33mreturn[m[40m [1m[31mNULL[m[40m;[45;66H[K[45;66H41,1[10C28%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 40 [m[40m[46m{[9;5H}[m[40m[45;66H[K[45;66H40,1[10C27%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 39 [m[40mnodeT *FindNode(nodeT *t, [1m[32mint[m[40m key)[2;5H{[10;5H}[45;66H[K[45;66H39,1[10C26%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 38 [m[40m[45;66H[K[45;66H38,0-1[8C26%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 37 [m[40m}[45;66H[K[45;66H37,1[10C25%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 36 [m[40m    free(tree);[45;66H[K[45;66H36,1-4[8C24%[1;8H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 35 [m[40m    FreeTree(tree->right);[45;66H[K[45;66H35,1-4[8C24%[1;8H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 34 [m[40m    FreeTree(tree->left);[45;66H[K[45;66H34,1-4[8C23%[1;8H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 33 [8Creturn[m[40m;[45;66H[K[45;66H33,1-4[8C22%[1;8H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 32 [m[40m    [1m[33mif[m[40m(tree == [1m[31mNULL[m[40m)[45;66H[K[45;66H32,1-4[8C21%[1;8H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 31 [m[40m[46m{[7;5H}[m[40m[45;66H[K[45;66H31,1[10C21%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 30 [m[40m[1m[32mvoid[m[40m FreeTree(nodeT *tree)[2;5H{[8;5H}[45;66H[K[45;66H30,1[10C20%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 29 [m[40m[45;66H[K[45;66H29,1-4[8C19%[1;8H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 28 [m[40m[1m[36m}*/[m[40m[45;66H[K[45;66H28,1[10C19%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 27 [m[40m[1m[36m    return tmp;[m[40m[45;66H[K[45;66H27,1-4[8C18%[1;8H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 26 [m[40m[1m[36m    //tmp = NULL;[m[40m[45;66H[K[45;66H26,1-4[8C17%[1;8H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 25 [m[40m[1m[36m    printf("new tree: %p key = %d\n", tmp, tmp->key);[m[40m[45;66H[K[45;66H25,1-4[8C17%[1;8H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 24 [m[40m[1m[36m    tmp->key = 0;[m[40m[45;66H[K[45;66H24,1-4[8C16%[1;8H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 23 [m[40m[1m[36m    tmp->right = tmp->left = NULL;[m[40m[45;66H[K[45;66H23,1-4[8C15%[1;8H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 22 [m[40m[1m[36m    if(tmp == NULL) return NULL;[m[40m[45;66H[K[45;66H22,1-4[8C14%[1;8H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 21 [m[40m[1m[36m    tmp = (treeT)malloc(sizeof(nodeT *)); // allocate for pointer but not node [m[40m[45;66H[K[45;66H21,1-4[8C14%[1;8H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 20 [m[40m[1m[36m    //tmp = (treeT)malloc(sizeof(struct nodeT)); // allocate nodeT structure wh[m[40m[45;66H[K[45;66H20,1-4[8C13%[1;8H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 19 [m[40m[1m[36m    treeT tmp;[m[40m[45;66H[K[45;66H19,1-4[8C12%[1;8H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 18 [m[40m[1m[36m[46m{[11;5H}[m[40m[1m[36m*/[m[40m[45;66H[K[45;66H18,1[10C12%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 17 [m[40m[1m[36m/*nodeT *NewBinaryTree() // Create empty binary tree[2;5H{[12;5H}*/[m[40m[45;66H[K[45;66H17,1[10C11%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 16 [m[40m[45;66H[K[45;66H16,0-1[8C10%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 15 [m[40m[1m[36m}*/[m[40m[45;66H[K[45;66H15,1[11C9%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 14 [m[40m[1m[36m    return tmp;[m[40m[45;66H[K[45;66H14,1-4[9C9%[1;8H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 13 [m[40m[1m[36m    tmp->root = tmp->right = tmp->left = NULL;[m[40m[45;66H[K[45;66H13,1-4[9C8%[1;8H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 12 [m[40m[1m[36m    if(tmp == NULL) return NULL;[m[40m[45;66H[K[45;66H12,1-4[9C7%[1;8H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 11 [m[40m[1m[36m    tmp = (treeADT)malloc(sizeof(struct treeADT));[m[40m[45;66H[K[45;66H11,1-4[9C7%[1;8H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 10 [m[40m[1m[36m    treeADT tmp;[m[40m[45;66H[K[45;66H10,1-4[9C6%[1;8H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m  9 [m[40m[1m[36m[46m{[7;5H}[m[40m[1m[36m*/[m[40m[45;66H[K[45;66H9,1[12C5%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m  8 [m[40m[1m[36m/*treeADT NewBinaryTree() // Create empty binary tree[2;5H{[8;5H}*/[m[40m[45;66H[K[45;66H8,1[12C4%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m  7 [m[40m[1m[36m// Tree Methods[m[40m[45;66H[K[45;66H7,1[12C4%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m  6 [m[40m[1m[34m#define min(a,b) (a>b?b:a)[m[40m[45;66H[K[45;66H6,1[12C3%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m  5 [m[40m[1m[34m#define max(a,b) (a>b?a:b)[m[40m[45;66H[K[45;66H5,1[12C2%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m  4 [m[40m[45;66H[K[45;66H4,0-1[10C2%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m  3 [m[40m[1m[34m#include [m[40m[1m[31m"tree.h"[m[40m[45;66H[K[45;66H3,1[12C1%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m  2 [m[40m[1m[34m#include [m[40m[1m[31m<stdlib.h>[m[40m[45;66H[K[45;66H2,1[12C0%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m  1 [m[40m[1m[34m#include [m[40m[1m[31m<stdio.h>[m[40m[45;66H[K[45;66H1,1[11CTop[1;5H[?12l[?25h[?25l[45;66H2[2;5H[?12l[?25h[?25l[45;66H3[3;5H[?12l[?25h[?25l[45;66H4,0-1[4;5H[?12l[?25h[?25l[45;66H5,1  [5;5H[?12l[?25h[?25l[45;66H6[6;5H[?12l[?25h[?25l[45;66H7[7;5H[?12l[?25h[?25l[45;66H8[8;5H[?12l[?25h[?25l[9;5H[1m[36m[46m{[15;5H}[m[40m[1m[36m*/[m[40m[45;66H9[9;5H[?12l[?25h[?25l[1m[36m{[15;5H}*/[m[40m[45;66H10,1-4[10;8H[?12l[?25h[?25l[45;67H1[11;8H[?12l[?25h[?25l[45;67H2[12;8H[?12l[?25h[?25l[45;67H3[13;8H[?12l[?25h[?25l[45;67H4[14;8H[?12l[?25h[?25l[9;5H[1m[36m[46m{[15;5H}[m[40m[1m[36m*/[m[40m[45;67H5,1  [15;5H[?12l[?25h[?25l[9;5H[1m[36m{[15;5H}*/[m[40m[45;67H6,0-1[16;5H[?12l[?25h[?25l[45;67H7,1  [17;5H[?12l[?25h[?25l[18;5H[1m[36m[46m{[28;5H}[m[40m[1m[36m*/[m[40m[45;67H8[18;5H[?12l[?25h[?25l[1m[36m{[28;5H}*/[m[40m[45;67H9,1-4[19;8H[?12l[?25h[?25l[45;66H20[20;8H[?12l[?25h[?25l[45;67H1[21;8H[?12l[?25h[?25l[45;67H2[22;8H[?12l[?25h[?25l[45;67H3[23;8H[?12l[?25h[?25l[45;67H4[24;8H[?12l[?25h[?25l[45;67H5[25;8H[?12l[?25h[?25l[45;67H6[26;8H[?12l[?25h[?25l[45;67H7[27;8H[?12l[?25h[?25l[18;5H[1m[36m[46m{[28;5H}[m[40m[1m[36m*/[m[40m[45;67H8,1  [28;5H[?12l[?25h[?25l[18;5H[1m[36m{[28;5H}*/[m[40m[45;67H9,1-4[29;8H[?12l[?25h[?25l[45;66H30,1  [30;5H[?12l[?25h[?25l[31;5H[46m{[37;5H}[m[40m[45;67H1[31;5H[?12l[?25h[?25l{[37;5H}[45;67H2,1-4[32;8H[?12l[?25h[?25l[45;67H3[33;8H[?12l[?25h[?25l[45;67H4[34;8H[?12l[?25h[?25l[45;67H5[35;8H[?12l[?25h[?25l[45;67H6[36;8H[?12l[?25h[?25l[31;5H[46m{[37;5H}[m[40m[45;67H7,1  [37;5H[?12l[?25h[?25l[31;5H{[37;5H}[45;67H8,0-1[38;5H[?12l[?25h[?25l[45;67H9,1  [39;5H[?12l[?25h[?25l[45;66H40[40;5H[?12l[?25h[?25l[45;67H1[41;5H[?12l[?25h[?25l[45;67H2[42;5H[?12l[?25h[?25l[45;67H3[43;5H[?12l[?25h[?25l[45;67H4[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m 45 [m[40m   } [1m[33melse[m[40m {[45;66H[K[45;66H45,1[11C0%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m 46 [m[40m     [1m[33mreturn[m[40m FindNode(t->right, key);[45;66H[K[45;66H46,1[11C1%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m 47 [m[40m  }[45;66H[K[45;66H47,1[11C2%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[36;5H[46m{[m[40m[44;1H[1m[33m 48 [m[40m[46m}[m[40m[45;66H[K[45;66H48,1[11C2%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[35;5H{[43;5H}
[1m[33m 49 [m[40m[45;66H[K[45;66H49,0-1[9C3%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m 50 [m[40m[1m[36m// Manipulating tree[m[40m[45;66H[K[45;66H50,1[11C4%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m 51 [m[40m[1m[32mvoid[m[40m InsertNode(nodeT  **tptr, [1m[32mint[m[40m key)[45;66H[K[45;66H51,1[11C4%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m 52 [m[40m{[45;66H[K[45;66H52,1[11C5%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m 53 [m[40m     nodeT  *t, *tmp;[45;66H[K[45;66H53,1[11C6%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m 54 [m[40m     t=*tptr;[45;66H[K[45;66H54,1[11C7%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m 55 [m[40m    [1m[36m// printf("---Insert Node---\n");[m[40m[45;66H[K[45;66H55,1[11C7%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m 56 [m[40m    [1m[36m// printf("**tptr = %p, *tptr = %d, tptr = %p", **tptr, *tptr->key, &tptr);[m[40m[45;66H[K[45;66H56,1[11C8%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m 57 [m[40m    [1m[33mif[m[40m (t == [1m[31mNULL[m[40m) {[45;66H[K[45;66H57,1-4[9C9%[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m 58 [m[40m[9Ctmp=(nodeT *)malloc([1m[33msizeof[m[40m([1m[32mstruct[m[40m nodeT));[45;66H[K[45;66H58,1[11C9%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m 59 [m[40m[9Ctmp->key = key;[45;66H[K[45;66H59,1[10C10%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m 60 [m[40m[9Ctmp->left=tmp->right=[1m[31mNULL[m[40m;[45;66H[K[45;66H60,1[10C11%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m 61 [m[40m[9C*tptr=tmp;[45;66H[K[45;66H61,1[10C12%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m 62 [9Creturn[m[40m;[45;66H[K[45;66H62,1[10C12%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m 63 [m[40m     }[45;66H[K[45;66H63,1[10C13%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m 64 [m[40m    [1m[33mif[m[40m (key < t->key) {[45;66H[K[45;66H64,1-4[8C14%[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m 65 [m[40m[8CInsertNode(&t->left, key);[45;66H[K[45;66H65,1-4[8C14%[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m 66 [m[40m    } [1m[33melse[m[40m {[45;66H[K[45;66H66,1-4[8C15%[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m 67 [m[40m[8CInsertNode(&t->right, key);[45;66H[K[45;66H67,1-4[8C16%[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m 68 [m[40m    }[45;66H[K[45;66H68,1-4[8C17%[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[27;5H[46m{[m[40m[44;1H[1m[33m 69 [m[40m[46m}[m[40m[45;66H[K[45;66H69,1[10C17%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[26;5H{[43;5H}
[1m[33m 70 [m[40m[45;66H[K[45;66H70,0-1[8C18%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m 71 [m[40m[45;66H[K[45;66H71,0-1[8C19%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m 72 [m[40m[1m[36m// Operating on tree[m[40m[45;66H[K[45;66H72,1[10C19%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m 73 [m[40m[1m[32mint[m[40m height(nodeT *t)[45;66H[K[45;66H73,1[10C20%[44;5H[?12l[?25h[?25l[45;67H2[43;5H[?12l[?25h[?25l[45;67H1,0-1[42;5H[?12l[?25h[?25l[45;67H0[41;5H[?12l[?25h[?25l[45;1H61 more lines[45;66H[K[42;5H[1m[36m/* Given a non-empty binary search tree, return the node with minimum[43;5H   key value found in that tree. Note that the entire tree does not[44;5H   need to be searched. */[m[40m[45;66H71,1[10C14%[45;66H[K[45;66H71,1[10C14%[42;5H[?12l[?25h[?25l[45;67H2[43;5H[?12l[?25h[?25l[45;67H3[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m 74 [m[40mnodeT *minValueNode(nodeT *node)[45;1H[K[45;66H74,1[10C14%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m 75 [m[40m{[45;66H[K[45;66H75,1[10C15%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m 76 [m[40m    nodeT *current = node;[45;66H[K[45;66H76,1[10C15%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m 77 [m[40m[45;66H[K[45;66H77,1[10C16%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m 78 [m[40m    [1m[36m/* loop down to find the leftmost leaf */[m[40m[45;66H[K[45;66H78,1[10C16%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m 79 [m[40m    [1m[33mwhile[m[40m (current->left != [1m[31mNULL[m[40m)[45;66H[K[45;66H79,1[10C17%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m 80 [m[40m[8Ccurrent = current->left;[45;66H[K[45;66H80,1[10C17%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m 81 [m[40m[45;66H[K[45;66H81,1[10C18%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m 82 [m[40m    [1m[33mreturn[m[40m current;[45;66H[K[45;66H82,1[10C18%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[36;5H[46m{[m[40m[44;1H[1m[33m 83 [m[40m[46m}[m[40m[45;66H[K[45;66H83,1[10C19%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[35;5H{[43;5H}
[1m[33m 84 [m[40m[45;66H[K[45;66H84,0-1[8C19%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m 85 [m[40m[1m[36m/* Given a binary search tree and a key, this function deletes the key[m[40m[45;66H[K[45;66H85,1[10C20%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m 86 [m[40m[1m[36m   and returns the new root */[m[40m[45;66H[K[45;66H86,1[10C20%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m 87 [m[40mnodeT *deleteNode(nodeT *root, [1m[32mint[m[40m key)[45;66H[K[45;66H87,1[10C21%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m 88 [m[40m{[45;66H[K[45;66H88,1[10C21%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m 89 [m[40m    [1m[36m// base case[m[40m[45;66H[K[45;66H89,1[10C22%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m 90 [m[40m    [1m[33mif[m[40m (root == [1m[31mNULL[m[40m) [1m[33mreturn[m[40m root;[45;66H[K[45;66H90,1[10C22%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m 91 [m[40m[45;66H[K[45;66H91,1[10C23%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m 92 [m[40m    [1m[36m// If the key to be deleted is smaller than the root's key,[m[40m[45;66H[K[45;66H92,1[10C23%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m 93 [m[40m    [1m[36m// then it lies in left subtree[m[40m[45;66H[K[45;66H93,1[10C24%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m 94 [m[40m    [1m[33mif[m[40m (key < root->key)[45;66H[K[45;66H94,1[10C24%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m 95 [m[40m[8Croot->left = deleteNode(root->left, key);[45;66H[K[45;66H95,1[10C25%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m 96 [m[40m[45;66H[K[45;66H96,1[10C25%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m 97 [m[40m    [1m[36m// If the key to be deleted is greater than the root's key,[m[40m[45;66H[K[45;66H97,1[10C26%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m 98 [m[40m    [1m[36m// then it lies in right subtree[m[40m[45;66H[K[45;66H98,1[10C26%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m 99 [m[40m    [1m[33melse[m[40m [1m[33mif[m[40m (key > root->key)[45;66H[K[45;66H99,1[10C27%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m100 [m[40m[8Croot->right = deleteNode(root->right, key);[45;66H[K[45;66H100,1[9C27%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m101 [m[40m[45;66H[K[45;66H101,1[9C28%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m102 [m[40m    [1m[36m// if key is same as root's key, then This is the node[m[40m[45;66H[K[45;66H102,1[9C28%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m103 [m[40m    [1m[36m// to be deleted[m[40m[45;66H[K[45;66H103,1[9C29%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m104 [m[40m    [1m[33melse[m[40m[45;66H[K[45;66H104,1[9C29%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m105 [m[40m    {[45;66H[K[45;66H105,1[9C30%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m106 [m[40m[8C[1m[36m// node with only one child or no child[m[40m[45;66H[K[45;66H106,1[9C30%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m107 [8Cif[m[40m (root->left == [1m[31mNULL[m[40m)[45;66H[K[45;66H107,1[9C31%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m108 [m[40m[8C{[45;66H[K[45;66H108,1[9C31%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m109 [m[40m[12CnodeT *temp = root->right;[45;66H[K[45;66H109,1[9C32%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m110 [m[40m[12Cfree(root);[45;66H[K[45;66H110,1[9C32%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m111 [12Creturn[m[40m temp;[45;66H[K[45;66H111,1[9C33%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m112 [m[40m[8C}[45;66H[K[45;66H112,1[9C33%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m113 [8Celse[m[40m [1m[33mif[m[40m (root->right == [1m[31mNULL[m[40m)[45;66H[K[45;66H113,1[9C34%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m114 [m[40m[8C{[45;66H[K[45;66H114,1[9C34%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m115 [m[40m[12CnodeT *temp = root->left;[45;66H[K[45;66H115,1[9C35%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m116 [m[40m[12Cfree(root);[45;66H[K[45;66H116,1[9C35%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m117 [12Creturn[m[40m temp;[45;66H[K[45;66H117,1[9C36%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m118 [m[40m[8C}[45;66H[K[45;66H118,1[9C36%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m119 [m[40m[45;66H[K[45;66H119,1[9C37%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m120 [m[40m[8C[1m[36m// node with two children: Get the inorder successor (smallest[m[40m[45;66H[K[45;66H120,1[9C37%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m121 [m[40m[8C[1m[36m// in the right subtree)[m[40m[45;66H[K[45;66H121,1[9C38%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m122 [m[40m[8CnodeT *temp = minValueNode(root->right);[45;66H[K[45;66H122,1[9C38%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m123 [m[40m[45;66H[K[45;66H123,1[9C39%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m124 [m[40m[8C[1m[36m// Copy the inorder successor's content to this node[m[40m[45;66H[K[45;66H124,1[9C39%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m125 [m[40m[8Croot->key = temp->key;[45;66H[K[45;66H125,1[9C40%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m126 [m[40m[45;66H[K[45;66H126,1[9C40%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m127 [m[40m[8C[1m[36m// Delete the inorder successor[m[40m[45;66H[K[45;66H127,1[9C41%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m128 [m[40m[8Croot->right = deleteNode(root->right, temp->key);[45;66H[K[45;66H128,1[9C41%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m129 [m[40m    }[45;66H[K[45;66H129,1[9C42%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m130 [m[40m    [1m[33mreturn[m[40m root;[45;66H[K[45;66H130,1[9C42%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[1;5H[46m{[m[40m[44;1H[1m[33m131 [m[40m[46m}[m[40m[45;66H[K[45;66H131,1[9C43%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[43;5H}
[1m[33m132 [m[40m[45;66H[K[45;66H132,0-1[7C43%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m133 [m[40m[1m[36m// Operating on tree[m[40m[45;66H[K[45;66H133,1[9C44%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m134 [m[40m[1m[32mint[m[40m height(nodeT *t)[45;66H[K[45;66H134,1[9C44%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m135 [m[40m{[45;66H[K[45;66H135,1[9C45%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m136 [m[40m  [1m[33mif[m[40m (t == [1m[31mNULL[m[40m)[45;66H[K[45;66H136,1[9C45%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m137 [m[40m      [1m[33mreturn[m[40m [1m[31m0[m[40m;[45;66H[K[45;66H137,1[9C46%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m138 [m[40m  [1m[33melse[m[40m[45;66H[K[45;66H138,1[9C46%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m139 [m[40m     [1m[33mreturn[m[40m ([1m[31m1[m[40m + max([45;66H[K[45;66H139,1[9C47%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m140 [m[40m[19Cheight(t->left),[45;66H[K[45;66H140,1[9C47%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m141 [m[40m[19Cheight(t->right)) );[45;66H[K[45;66H141,1[9C48%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[37;5H[46m{[m[40m[44;1H[1m[33m142 [m[40m[46m}[m[40m[45;66H[K[45;66H142,1[9C48%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[36;5H{[43;5H}
[1m[33m143 [m[40m[45;66H[K[45;66H143,0-1[7C49%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m144 [m[40m[1m[32mint[m[40m sum(nodeT *p)[45;66H[K[45;66H144,1[9C49%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m145 [m[40m{[45;66H[K[45;66H145,1[9C50%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m146 [m[40m  [1m[33mif[m[40m (p == [1m[31mNULL[m[40m)[45;66H[K[45;66H146,1[9C50%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m147 [m[40m      [1m[33mreturn[m[40m [1m[31m0[m[40m;[45;66H[K[45;66H147,1[9C50%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m148 [m[40m  [1m[33melse[m[40m[45;66H[K[45;66H148,1[9C51%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m149 [m[40m     [1m[33mreturn[m[40m (p->key +[45;66H[K[45;66H149,1[9C51%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m150 [m[40m[16Csum(p->left) +[45;66H[K[45;66H150,1[9C52%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m151 [m[40m[16Csum(p->right) );[45;66H[K[45;66H151,1[9C52%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[37;5H[46m{[m[40m[44;1H[1m[33m152 [m[40m[46m}[m[40m[45;66H[K[45;66H152,1[9C53%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[36;5H{[43;5H}
[1m[33m153 [m[40m[45;66H[K[45;66H153,0-1[7C53%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m154 [m[40m[1m[32mint[m[40m count(nodeT *p)[45;66H[K[45;66H154,1[9C54%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m155 [m[40m{[45;66H[K[45;66H155,1[9C54%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m156 [m[40m  [1m[33mif[m[40m (p == [1m[31mNULL[m[40m)[45;66H[K[45;66H156,1[9C55%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m157 [m[40m      [1m[33mreturn[m[40m [1m[31m0[m[40m;[45;66H[K[45;66H157,1[9C55%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m158 [m[40m  [1m[33melse[m[40m[45;66H[K[45;66H158,1[9C56%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m159 [m[40m     [1m[33mreturn[m[40m ([1m[31m1[m[40m + count(p->left) + count(p->right) );[45;66H[K[45;66H159,1[9C56%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[39;5H[46m{[m[40m[44;1H[1m[33m160 [m[40m[46m}[m[40m[45;66H[K[45;66H160,1[9C57%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[38;5H{[43;5H}
[1m[33m161 [m[40m[45;66H[K[45;66H161,0-1[7C57%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m162 [m[40m[1m[32mint[m[40m imax(nodeT *p)[45;66H[K[45;66H162,1[9C58%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m163 [m[40m{[45;66H[K[45;66H163,1[9C58%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m164 [m[40m  [1m[32mint[m[40m tmp;[45;66H[K[45;66H164,1[9C59%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m165 [m[40m  [1m[33mif[m[40m (p == [1m[31mNULL[m[40m)[45;66H[K[45;66H165,1[9C59%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m166 [m[40m      [1m[33mreturn[m[40m [1m[31m0[m[40m;[45;66H[K[45;66H166,1[9C60%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m167 [m[40m  [1m[33melse[m[40m[45;66H[K[45;66H167,1[9C60%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m168 [m[40m    [1m[33mreturn[m[40m max(max(p->key, imax(p->left)), max(p->key, imax(p->right)));[45;66H[K[45;66H168,1[9C61%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[38;5H[46m{[m[40m[44;1H[1m[33m169 [m[40m[46m}[m[40m[45;66H[K[45;66H169,1[9C61%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[37;5H{[43;5H}
[1m[33m170 [m[40m[45;66H[K[45;66H170,0-1[7C62%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m171 [m[40m[1m[32mint[m[40m imin(nodeT *p)[45;66H[K[45;66H171,1[9C62%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m172 [m[40m{[45;66H[K[45;66H172,1[9C63%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m173 [m[40m  [1m[33mif[m[40m (p == [1m[31mNULL[m[40m)[45;66H[K[45;66H173,1[9C63%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m174 [m[40m      [1m[33mreturn[m[40m [1m[31m1000[m[40m;[45;66H[K[45;66H174,1[9C64%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m175 [m[40m  [1m[33melse[m[40m[45;66H[K[45;66H175,1[9C64%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m176 [m[40m     [1m[33mreturn[m[40m min(min(p->key, imin(p->left)), min(p->key, imin(p->right)));[45;66H[K[45;66H176,1[9C65%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[39;5H[46m{[m[40m[44;1H[1m[33m177 [m[40m[46m}[m[40m[45;66H[K[45;66H177,1[9C65%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[38;5H{[43;5H}
[1m[33m178 [m[40m[45;66H[K[45;66H178,0-1[7C66%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m179 [m[40m[1m[36m// Printing tree in order[m[40m[45;66H[K[45;66H179,1[9C66%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m180 [m[40m[1m[32mvoid[m[40m DisplayTree(nodeT *t)[45;66H[K[45;66H180,1[9C67%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m181 [m[40m{[45;66H[K[45;66H181,1[9C67%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m182 [m[40m  [1m[33mif[m[40m (t != [1m[31mNULL[m[40m) {[45;66H[K[45;66H182,1[9C68%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m183 [m[40m    DisplayTree(t->left);[45;66H[K[45;66H183,1[9C68%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m184 [m[40m    printf([1m[31m"[m[40m[1m[35m%d[m[40m[1m[31m "[m[40m, t->key);[45;66H[K[45;66H184,1[9C69%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m185 [m[40m    DisplayTree(t->right);[45;66H[K[45;66H185,1[9C69%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m186 [m[40m  }[45;66H[K[45;66H186,1[9C70%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m187 [m[40m[1m[36m//  printf("\n");[m[40m[45;66H[K[45;66H187,1[9C70%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[37;5H[46m{[m[40m[44;1H[1m[33m188 [m[40m[46m}[m[40m[45;66H[K[45;66H188,1[9C71%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[36;5H{[43;5H}
[1m[33m189 [m[40m[45;66H[K[45;66H189,0-1[7C71%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m190 [m[40m[1m[32mvoid[m[40m PreOrder(nodeT *t)[45;66H[K[45;66H190,1[9C72%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m191 [m[40m{[45;66H[K[45;66H191,1[9C72%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m192 [m[40m  [1m[33mif[m[40m (t != [1m[31mNULL[m[40m) {[45;66H[K[45;66H192,1[9C73%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m193 [m[40m    printf([1m[31m"[m[40m[1m[35m%d[m[40m[1m[31m "[m[40m, t->key);[45;66H[K[45;66H193,1[9C73%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m194 [m[40m    PreOrder(t->left);[45;66H[K[45;66H194,1[9C74%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m195 [m[40m    PreOrder(t->right);[45;66H[K[45;66H195,1[9C74%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m196 [m[40m  }[45;66H[K[45;66H196,1[9C75%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[38;5H[46m{[m[40m[44;1H[1m[33m197 [m[40m[46m}[m[40m[45;66H[K[45;66H197,1[9C75%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[37;5H{[43;5H}
[1m[33m198 [m[40m[45;66H[K[45;66H198,0-1[7C76%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m199 [m[40m[1m[32mvoid[m[40m PostOrder(nodeT *t)[45;66H[K[45;66H199,1[9C76%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m200 [m[40m{[45;66H[K[45;66H200,1[9C77%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m201 [m[40m  [1m[33mif[m[40m (t != [1m[31mNULL[m[40m) {[45;66H[K[45;66H201,1[9C77%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m202 [m[40m    PostOrder(t->left);[45;66H[K[45;66H202,1[9C78%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m203 [m[40m    PostOrder(t->right);[45;66H[K[45;66H203,1[9C78%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m204 [m[40m    printf([1m[31m"[m[40m[1m[35m%d[m[40m[1m[31m "[m[40m, t->key);[45;66H[K[45;66H204,1[9C79%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m205 [m[40m  }[45;66H[K[45;66H205,1[9C79%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[38;5H[46m{[m[40m[44;1H[1m[33m206 [m[40m[46m}[m[40m[45;66H[K[45;66H206,1[9C80%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[37;5H{[43;5H}
[1m[33m207 [m[40m[45;66H[K[45;66H207,0-1[7C80%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m208 [m[40m[1m[32mvoid[m[40m LevelOrder(nodeT *t)[45;66H[K[45;66H208,1[9C81%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m209 [m[40m{[45;66H[K[45;66H209,1[9C81%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m210 [m[40m    [1m[32mint[m[40m h = height(t);[45;66H[K[45;66H210,1-4[7C82%[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m211 [m[40m    [1m[32mint[m[40m i;[45;66H[K[45;66H211,1-4[7C82%[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m212 [m[40m    [1m[33mfor[m[40m(i = [1m[31m1[m[40m; i <= h; i++)[45;66H[K[45;66H212,1-4[7C83%[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m213 [m[40m[8CprintLevel(t, i);[45;66H[K[45;66H213,1-4[7C83%[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[39;5H[46m{[m[40m[44;1H[1m[33m214 [m[40m[46m}[m[40m[45;66H[K[45;66H214,1[9C84%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[38;5H{[43;5H}
[1m[33m215 [m[40m[45;66H[K[45;66H215,0-1[7C84%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m216 [m[40m[1m[36m// Private function used to print each level[m[40m[45;66H[K[45;66H216,1[9C85%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m217 [m[40m[1m[32mvoid[m[40m printLevel(nodeT *t, [1m[32mint[m[40m level)[45;66H[K[45;66H217,1[9C85%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m218 [m[40m{[45;66H[K[45;66H218,1[9C86%[44;5H[?12l[?25h[?25l[45;68H7[43;5H[?12l[?25h[?25l[45;68H6[42;5H[?12l[?25h[?25l[45;68H5,0-1[41;5H[?12l[?25h[?25l[35;5H[46m{[40;5H}[m[40m[45;68H4,1  [40;5H[?12l[?25h[?25l[35;5H{[40;5H}[45;68H3,1-4[39;8H[?12l[?25h[?25l[45;68H2[38;8H[?12l[?25h[?25l[45;68H1[37;8H[?12l[?25h[?25l[45;68H0[36;8H[?12l[?25h[?25l[35;5H[46m{[40;5H}[m[40m[45;67H09,1  [35;5H[?12l[?25h[?25l{[40;5H}[45;68H8[34;5H[?12l[?25h[?25l[45;68H7,0-1[33;5H[?12l[?25h[?25l[26;5H[46m{[32;5H}[m[40m[45;68H6,1  [32;5H[?12l[?25h[?25l[26;5H{[32;5H}[45;68H5[31;5H[?12l[?25h[?25l[45;68H4[30;5H[?12l[?25h[?25l[45;68H3[29;5H[?12l[?25h[?25l[45;68H2[28;5H[?12l[?25h[?25l[45;68H1[27;5H[?12l[?25h[?25l[26;5H[46m{[32;5H}[m[40m[45;68H0[26;5H[?12l[?25h[?25l{[32;5H}[45;66H199[25;5H[?12l[?25h[?25l[45;68H8,0-1[24;5H[?12l[?25h[?25l[17;5H[46m{[23;5H}[m[40m[45;68H7,1  [23;5H[?12l[?25h[?25l[17;5H{[23;5H}[45;68H6[22;5H[?12l[?25h[?25l[45;68H5[21;5H[?12l[?25h[?25l[45;68H4[20;5H[?12l[?25h[?25l[45;68H3[19;5H[?12l[?25h[?25l[45;68H2[18;5H[?12l[?25h[?25l[17;5H[46m{[23;5H}[m[40m[45;68H1[17;5H[?12l[?25h[?25l{[23;5H}[45;68H0[16;5H[?12l[?25h[?25l[45;67H89,0-1[15;5H[?12l[?25h[?25l[7;5H[46m{[14;5H}[m[40m[45;68H8,1  [14;5H[?12l[?25h[?25l[7;5H{[14;5H}[45;68H7[13;5H[?12l[?25h[?25l[1C[1m[7m[36m/  printf("\n");[m[40m[7m [m[40m[45;1H[1m-- VISUAL LINE --[m[40m[45;66H[K[45;66H187,1[9C86%[13;5H[?12l[?25h[?25l[7;5H[46m{[13;5H}[m[40m[13;6H[K[14;5H[K[15;5H[1m[32mvoid[m[40m PreOrder(nodeT *t)[16;5H{[16;6H[K[17;5H  [1m[33mif[m[40m (t != [1m[31mNULL[m[40m) {[18;7H  printf([1m[31m"[m[40m[1m[35m%d[m[40m[1m[31m "[m[40m, t->key);[19;9HPreOrder(t->left);[19;27H[K[20;21Hright);[21;7H}[21;9H[K[22;5H}[22;7H[K[23;5H[K[24;5H[1m[32mvoid[m[40m PostOrder(nodeT *t)[25;5H{[25;6H[K[26;5H  [1m[33mif[m[40m (t != [1m[31mNULL[m[40m) {[27;7H  PostOrder(t->left);[28;22Hright);[29;9Hprintf([1m[31m"[m[40m[1m[35m%d[m[40m[1m[31m "[m[40m, t->key);[30;7H}[30;9H[K[31;5H}[31;7H[K[32;5H[K[33;5H[1m[32mvoid[m[40m LevelOrder(nodeT *t)[34;5H{[34;6H[K[35;5H    [1m[32mint[m[40m h = height(t);[36;13Hi;[36;15H[K[37;9H[1m[33mfor[m[40m(i = [1m[31m1[m[40m; i <= h; i++)[38;9H    printLevel(t, i);[38;30H[K[39;5H}[39;13H[K[40;5H[K[41;5H[1m[36m// Private function used to print each level[m[40m[42;5H[1m[32mvoid[m[40m printLevel(nodeT *t, [1m[32mint[m[40m level)[42;41H[K[43;5H{[43;6H[K[44;5H    [1m[33mif[m[40m(t == [1m[31mNULL[m[40m)[45;1H[K[45;66H187,1[9C86%[13;5H[?12l[?25h[?25l[7;5H{[13;5H}[45;68H8,0-1[14;5H[?12l[?25h[?25l[45;68H9,1  [15;5H[?12l[?25h[?25l[16;5H[46m{[22;5H}[m[40m[45;67H90[16;5H[?12l[?25h[?25l{[22;5H}[45;68H1[17;5H[?12l[?25h[?25l[45;68H2[18;5H[?12l[?25h[?25l[45;68H3[19;5H[?12l[?25h[?25l[45;68H4[20;5H[?12l[?25h[?25l[45;68H5[21;5H[?12l[?25h[?25l[16;5H[46m{[22;5H}[m[40m[45;68H6[22;5H[?12l[?25h[?25l[16;5H{[22;5H}[45;68H7,0-1[23;5H[?12l[?25h[?25l[45;68H8,1  [24;5H[?12l[?25h[?25l[25;5H[46m{[31;5H}[m[40m[45;68H9[25;5H[?12l[?25h[?25l{[31;5H}[45;66H200[26;5H[?12l[?25h[?25l[45;68H1[27;5H[?12l[?25h[?25l[45;68H2[28;5H[?12l[?25h[?25l[45;68H3[29;5H[?12l[?25h[?25l[45;68H4[30;5H[?12l[?25h[?25l[25;5H[46m{[31;5H}[m[40m[45;68H5[31;5H[?12l[?25h[?25l[25;5H{[31;5H}[45;68H6,0-1[32;5H[?12l[?25h[?25l[45;68H7,1  [33;5H[?12l[?25h[?25l[34;5H[46m{[39;5H}[m[40m[45;68H8[34;5H[?12l[?25h[?25l{[39;5H}[45;68H9,1-4[35;8H[?12l[?25h[?25l[45;67H10[36;8H[?12l[?25h[?25l[45;68H1[37;8H[?12l[?25h[?25l[45;68H2[38;8H[?12l[?25h[?25l[34;5H[46m{[39;5H}[m[40m[45;68H3,1  [39;5H[?12l[?25h[?25l[34;5H{[39;5H}[45;68H4,0-1[40;5H[?12l[?25h[?25l[45;68H5,1  [41;5H[?12l[?25h[?25l[45;68H6[42;5H[?12l[?25h[?25l[45;68H7[43;5H[?12l[?25h[?25l[45;68H8,1-4[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m219 [8Creturn[m[40m;[45;66H[K[45;66H219,1-4[7C87%[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m220 [m[40m    [1m[33melse[m[40m [1m[33mif[m[40m(level == [1m[31m1[m[40m)[45;66H[K[45;66H220,1-4[7C87%[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m221 [m[40m[8Cprintf([1m[31m"[m[40m[1m[35m%d[m[40m[1m[31m "[m[40m, t->key);[45;66H[K[45;66H221,1-4[7C88%[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m222 [m[40m    [1m[33melse[m[40m[45;66H[K[45;66H222,1-4[7C88%[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m223 [m[40m    {[45;66H[K[45;66H223,1-4[7C89%[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m224 [m[40m[8CprintLevel(t->left, level - [1m[31m1[m[40m);[45;66H[K[45;66H224,1-4[7C89%[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m225 [m[40m[8CprintLevel(t->right, level - [1m[31m1[m[40m);[45;66H[K[45;66H225,1-4[7C90%[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m226 [m[40m    }[45;66H[K[45;66H226,1-4[7C90%[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[34;5H[46m{[m[40m[44;1H[1m[33m227 [m[40m[46m}[m[40m[45;66H[K[45;66H227,1[9C91%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[33;5H{[43;5H}
[1m[33m228 [m[40m[45;66H[K[45;66H228,0-1[7C91%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m229 [m[40m[1m[32mvoid[m[40m prettyPrintT(nodeT *p, [1m[32mint[m[40m iIndent)[45;66H[K[45;66H229,1[9C92%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m230 [m[40m{[45;66H[K[45;66H230,1[9C92%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m231 [m[40m    [1m[32mint[m[40m i;[45;66H[K[45;66H231,1-4[7C93%[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m232 [m[40m    [1m[33mif[m[40m(p == [1m[31mNULL[m[40m) [1m[33mreturn[m[40m;[45;66H[K[45;66H232,1-4[7C93%[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m233 [m[40m[45;66H[K[45;66H233,0-1[7C94%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m234 [m[40m    prettyPrintT(p->right, iIndent+[1m[31m1[m[40m);[45;66H[K[45;66H234,1-4[7C94%[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m235 [m[40m[45;66H[K[45;66H235,0-1[7C95%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m236 [m[40m    [1m[33mfor[m[40m(i = [1m[31m0[m[40m; i < iIndent; i++)[45;66H[K[45;66H236,1-4[7C95%[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m237 [m[40m    {[45;66H[K[45;66H237,1-4[7C96%[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m238 [m[40m[8Cprintf([1m[31m"    "[m[40m);[45;66H[K[45;66H238,1-4[7C96%[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m239 [m[40m    }[45;66H[K[45;66H239,1-4[7C97%[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m240 [m[40m[45;66H[K[45;66H240,0-1[7C97%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m241 [m[40m    printf([1m[31m"[m[40m[1m[35m%d\n[m[40m[1m[31m"[m[40m, p->key);[45;66H[K[45;66H241,1-4[7C98%[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m242 [m[40m[45;66H[K[45;66H242,0-1[7C98%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m243 [m[40m    prettyPrintT(p->left, iIndent+[1m[31m1[m[40m);[45;66H[K[45;66H243,1-4[7C99%[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[30;5H[46m{[m[40m[44;1H[1m[33m244 [m[40m[46m}[m[40m[45;66H[K[45;66H244,1[9C99%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[29;5H{[43;5H}
[1m[33m245 [m[40m[45;66H[K[45;66H245,0-1[7CBot[44;5H[?12l[?25h[?25l[29;5H[46m{[43;5H}[m[40m[45;68H4,1  [43;5H[?12l[?25h[?25l[29;5H{[43;5H}[45;68H3,1-4[42;8H[?12l[?25h[?25l[45;68H2,0-1[41;5H[?12l[?25h[?25l[45;68H1,1-4[40;8H[?12l[?25h[?25l[45;68H0,0-1[39;5H[?12l[?25h[?25l[45;67H39,1-4[38;8H[?12l[?25h[?25l[45;68H8[37;8H[?12l[?25h[?25l[45;68H7[36;8H[?12l[?25h[?25l[45;68H6[35;8H[?12l[?25h[?25l[45;68H5,0-1[34;5H[?12l[?25h[?25l[45;68H4,1-4[33;8H[?12l[?25h[?25l[45;68H3,0-1[32;5H[?12l[?25h[?25l[45;68H2,1-4[31;8H[?12l[?25h[?25l[45;68H1[30;8H[?12l[?25h[?25l[29;5H[46m{[43;5H}[m[40m[45;68H0,1  [29;5H[?12l[?25h[?25l{[43;5H}[45;67H29[28;5H[?12l[?25h[?25l[45;68H8,0-1[27;5H[?12l[?25h[?25l[16;5H[46m{[26;5H}[m[40m[45;68H7,1  [26;5H[?12l[?25h[?25l[16;5H{[26;5H}[45;68H6,1-4[25;8H[?12l[?25h[?25l[45;68H5[24;8H[?12l[?25h[?25l[45;68H4[23;8H[?12l[?25h[?25l[45;68H3[22;8H[?12l[?25h[?25l[45;68H2[21;8H[?12l[?25h[?25l[45;68H1[20;8H[?12l[?25h[?25l[45;68H0[19;8H[?12l[?25h[?25l[45;67H19[18;8H[?12l[?25h[?25l[45;68H8[17;8H[?12l[?25h[?25l[16;5H[46m{[26;5H}[m[40m[45;68H7,1  [16;5H[?12l[?25h[?25l{[26;5H}[45;68H6[15;5H[?12l[?25h[?25l[45;68H5[14;5H[?12l[?25h[?25l[45;68H4,0-1[13;5H[?12l[?25h[?25l[7;5H[46m{[12;5H}[m[40m[45;68H3,1  [12;5H[?12l[?25h[?25l[7;5H{[12;5H}[45;68H2,1-4[11;8H[?12l[?25h[?25l[7;5H[46m{[12;5H}[m[40m[45;68H3,1  [12;5H[?12l[?25h[?25l[7;5H{[12;5H}[45;68H4,0-1[13;5H[?12l[?25h[?25l[45;68H5,1  [14;5H[?12l[?25h[?25l[45;70H2[14;6H[?12l[?25h[?25l[45;70H3[14;7H[?12l[?25h[?25l[45;70H4[14;8H[?12l[?25h[?25l[45;70H5[14;9H[?12l[?25h[?25l[45;70H6[14;10H[?12l[?25h[?25l[45;70H7[14;11H[?12l[?25h[?25l[45;70H8[14;12H[?12l[?25h[?25l[45;70H9[14;13H[?12l[?25h[?25l[45;70H10[14;14H[?12l[?25h[?25l[45;71H1[14;15H[?12l[?25h[?25l[45;71H2[14;16H[?12l[?25h[?25l[45;71H3[14;17H[?12l[?25h[?25l[45;68H4,0-1[13;5H[?12l[?25h[?25l[7;5H[46m{[12;5H}[m[40m[45;68H3,1  [12;5H[?12l[?25h[?25l[7;5H{[12;5H}[45;68H2,7-13[11;17H[?12l[?25h[?25l[45;68H1,10-13[10;17H[?12l[?25h[?25l[45;68H0,7-10 [9;14H[?12l[?25h[?25l[45;67H09,10-13[8;17H[?12l[?25h[?25l[7;5H[46m{[12;5H}[m[40m[45;68H8,1    [7;5H[?12l[?25h[?25l{[12;5H}[45;68H7,13[6;17H[?12l[?25h[?25l[45;68H6,0-1[5;5H[?12l[?25h[?25l[45;68H5,1  [4;5H[?12l[?25h[?25l[45;68H4,3[3;7H[?12l[?25h[?25l[45;68H3,13[2;17H[?12l[?25h[?25l[45;68H2[1;17H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m201 [m[40m    PostOrder(t->left);[45;66H[K[45;66H201,13[8C99%[1;17H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m200 [m[40m  [1m[33mif[m[40m (t != [1m[31mNULL[m[40m) {[45;66H[K[45;66H200,13[8C99%[1;17H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m199 [m[40m[46m{[7;5H}[m[40m[45;66H[K[45;66H199,1[9C98%[1;5H[?12l[?25h[?25l[1C[7m [m[40m[45;1H[1m-- VISUAL LINE --[m[40m[45;66H[K[45;66H199,1[9C98%[1;5H[?12l[?25h[?25l[1;6H[K[45;1H[K[45;66H199,1[9C98%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m198 [m[40m[1m[32mvoid[m[40m PostOrder(nodeT *t)[2;5H{[8;5H}[45;66H[K[45;66H198,1[9C98%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m197 [m[40m[45;66H[K[45;66H197,0-1[7C97%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m196 [m[40m}[45;66H[K[45;66H196,1[9C97%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m195 [m[40m  }[45;66H[K[45;66H195,1[9C96%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m194 [m[40m    PreOrder(t->right);[45;66H[K[45;66H194,1[9C96%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m193 [m[40m    PreOrder(t->left);[45;66H[K[45;66H193,1[9C95%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m192 [m[40m    printf([1m[31m"[m[40m[1m[35m%d[m[40m[1m[31m "[m[40m, t->key);[45;66H[K[45;66H192,1[9C95%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m191 [m[40m  [1m[33mif[m[40m (t != [1m[31mNULL[m[40m) {[45;66H[K[45;66H191,1[9C94%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m190 [m[40m[46m{[7;5H}[m[40m[45;66H[K[45;66H190,1[9C94%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m189 [m[40m[1m[32mvoid[m[40m PreOrder(nodeT *t)[2;5H{[8;5H}[45;66H[K[45;66H189,1[9C93%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m188 [m[40m[45;66H[K[45;66H188,0-1[7C93%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m187 [m[40m}[45;66H[K[45;66H187,1[9C92%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m186 [m[40m  }[45;66H[K[45;66H186,1[9C92%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m185 [m[40m    DisplayTree(t->right);[45;66H[K[45;66H185,1[9C91%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m184 [m[40m    printf([1m[31m"[m[40m[1m[35m%d[m[40m[1m[31m "[m[40m, t->key);[45;66H[K[45;66H184,1[9C91%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m183 [m[40m    DisplayTree(t->left);[45;66H[K[45;66H183,1[9C90%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m182 [m[40m  [1m[33mif[m[40m (t != [1m[31mNULL[m[40m) {[45;66H[K[45;66H182,1[9C90%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m181 [m[40m[46m{[7;5H}[m[40m[45;66H[K[45;66H181,1[9C89%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m180 [m[40m[1m[32mvoid[m[40m DisplayTree(nodeT *t)[2;5H{[8;5H}[45;66H[K[45;66H180,1[9C89%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m179 [m[40m[1m[36m// Printing tree in order[m[40m[45;66H[K[45;66H179,1[9C88%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m178 [m[40m[45;66H[K[45;66H178,0-1[7C88%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m177 [m[40m}[45;66H[K[45;66H177,1[9C87%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m176 [m[40m     [1m[33mreturn[m[40m min(min(p->key, imin(p->left)), min(p->key, imin(p->right)));[45;66H[K[45;66H176,1[9C87%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m175 [m[40m  [1m[33melse[m[40m[45;66H[K[45;66H175,1[9C86%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m174 [m[40m      [1m[33mreturn[m[40m [1m[31m1000[m[40m;[45;66H[K[45;66H174,1[9C86%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m173 [m[40m  [1m[33mif[m[40m (p == [1m[31mNULL[m[40m)[45;66H[K[45;66H173,1[9C85%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m172 [m[40m[46m{[6;5H}[m[40m[45;66H[K[45;66H172,1[9C85%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m171 [m[40m[1m[32mint[m[40m imin(nodeT *p)[2;5H{[7;5H}[45;66H[K[45;66H171,1[9C84%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m170 [m[40m[45;66H[K[45;66H170,0-1[7C84%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m169 [m[40m}[45;66H[K[45;66H169,1[9C83%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m168 [m[40m    [1m[33mreturn[m[40m max(max(p->key, imax(p->left)), max(p->key, imax(p->right)));[45;66H[K[45;66H168,1[9C83%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m167 [m[40m  [1m[33melse[m[40m[45;66H[K[45;66H167,1[9C82%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m166 [m[40m      [1m[33mreturn[m[40m [1m[31m0[m[40m;[45;66H[K[45;66H166,1[9C82%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m165 [m[40m  [1m[33mif[m[40m (p == [1m[31mNULL[m[40m)[45;66H[K[45;66H165,1[9C81%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m164 [m[40m  [1m[32mint[m[40m tmp;[45;66H[K[45;66H164,1[9C81%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m163 [m[40m[46m{[7;5H}[m[40m[45;66H[K[45;66H163,1[9C80%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m162 [m[40m[1m[32mint[m[40m imax(nodeT *p)[2;5H{[8;5H}[45;66H[K[45;66H162,1[9C80%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m161 [m[40m[45;66H[K[45;66H161,0-1[7C79%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m160 [m[40m}[45;66H[K[45;66H160,1[9C79%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m159 [m[40m     [1m[33mreturn[m[40m ([1m[31m1[m[40m + count(p->left) + count(p->right) );[45;66H[K[45;66H159,1[9C78%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m158 [m[40m  [1m[33melse[m[40m[45;66H[K[45;66H158,1[9C78%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m157 [m[40m      [1m[33mreturn[m[40m [1m[31m0[m[40m;[45;66H[K[45;66H157,1[9C77%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m156 [m[40m  [1m[33mif[m[40m (p == [1m[31mNULL[m[40m)[45;66H[K[45;66H156,1[9C77%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m155 [m[40m[46m{[6;5H}[m[40m[45;66H[K[45;66H155,1[9C76%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m154 [m[40m[1m[32mint[m[40m count(nodeT *p)[2;5H{[7;5H}[45;66H[K[45;66H154,1[9C76%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m153 [m[40m[45;66H[K[45;66H153,0-1[7C75%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m152 [m[40m}[45;66H[K[45;66H152,1[9C75%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m151 [m[40m[16Csum(p->right) );[45;66H[K[45;66H151,1[9C74%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m150 [m[40m[16Csum(p->left) +[45;66H[K[45;66H150,1[9C74%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m149 [m[40m     [1m[33mreturn[m[40m (p->key +[45;66H[K[45;66H149,1[9C73%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m148 [m[40m  [1m[33melse[m[40m[45;66H[K[45;66H148,1[9C73%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m147 [m[40m      [1m[33mreturn[m[40m [1m[31m0[m[40m;[45;66H[K[45;66H147,1[9C72%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m146 [m[40m  [1m[33mif[m[40m (p == [1m[31mNULL[m[40m)[45;66H[K[45;66H146,1[9C72%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m145 [m[40m[46m{[8;5H}[m[40m[45;66H[K[45;66H145,1[9C71%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m144 [m[40m[1m[32mint[m[40m sum(nodeT *p)[2;5H{[9;5H}[45;66H[K[45;66H144,1[9C71%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m143 [m[40m[45;66H[K[45;66H143,0-1[7C70%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m142 [m[40m}[45;66H[K[45;66H142,1[9C70%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m141 [m[40m[19Cheight(t->right)) );[45;66H[K[45;66H141,1[9C69%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m140 [m[40m[19Cheight(t->left),[45;66H[K[45;66H140,1[9C69%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m139 [m[40m     [1m[33mreturn[m[40m ([1m[31m1[m[40m + max([45;66H[K[45;66H139,1[9C68%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m138 [m[40m  [1m[33melse[m[40m[45;66H[K[45;66H138,1[9C68%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m137 [m[40m      [1m[33mreturn[m[40m [1m[31m0[m[40m;[45;66H[K[45;66H137,1[9C67%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m136 [m[40m  [1m[33mif[m[40m (t == [1m[31mNULL[m[40m)[45;66H[K[45;66H136,1[9C67%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m135 [m[40m[46m{[8;5H}[m[40m[45;66H[K[45;66H135,1[9C66%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m134 [m[40m[1m[32mint[m[40m height(nodeT *t)[2;5H{[9;5H}[45;66H[K[45;66H134,1[9C66%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m133 [m[40m[1m[36m// Operating on tree[m[40m[45;66H[K[45;66H133,1[9C65%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m132 [m[40m[45;66H[K[45;66H132,0-1[7C65%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m131 [m[40m}[45;66H[K[45;66H131,1[9C64%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m130 [m[40m    [1m[33mreturn[m[40m root;[45;66H[K[45;66H130,1[9C64%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m129 [m[40m    }[45;66H[K[45;66H129,1[9C63%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m128 [m[40m[8Croot->right = deleteNode(root->right, temp->key);[45;66H[K[45;66H128,1[9C63%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m127 [m[40m[8C[1m[36m// Delete the inorder successor[m[40m[45;66H[K[45;66H127,1[9C62%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m126 [m[40m[45;66H[K[45;66H126,1[9C62%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m125 [m[40m[8Croot->key = temp->key;[45;66H[K[45;66H125,1[9C61%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m124 [m[40m[8C[1m[36m// Copy the inorder successor's content to this node[m[40m[45;66H[K[45;66H124,1[9C61%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m123 [m[40m[45;66H[K[45;66H123,1[9C60%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m122 [m[40m[8CnodeT *temp = minValueNode(root->right);[45;66H[K[45;66H122,1[9C60%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m121 [m[40m[8C[1m[36m// in the right subtree)[m[40m[45;66H[K[45;66H121,1[9C59%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m120 [m[40m[8C[1m[36m// node with two children: Get the inorder successor (smallest[m[40m[45;66H[K[45;66H120,1[9C59%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m119 [m[40m[45;66H[K[45;66H119,1[9C58%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m118 [m[40m[8C}[45;66H[K[45;66H118,1[9C58%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m117 [12Creturn[m[40m temp;[45;66H[K[45;66H117,1[9C57%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m116 [m[40m[12Cfree(root);[45;66H[K[45;66H116,1[9C57%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m115 [m[40m[12CnodeT *temp = root->left;[45;66H[K[45;66H115,1[9C56%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m114 [m[40m[8C{[45;66H[K[45;66H114,1[9C56%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m113 [8Celse[m[40m [1m[33mif[m[40m (root->right == [1m[31mNULL[m[40m)[45;66H[K[45;66H113,1[9C55%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m112 [m[40m[8C}[45;66H[K[45;66H112,1[9C55%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m111 [12Creturn[m[40m temp;[45;66H[K[45;66H111,1[9C54%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m110 [m[40m[12Cfree(root);[45;66H[K[45;66H110,1[9C54%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m109 [m[40m[12CnodeT *temp = root->right;[45;66H[K[45;66H109,1[9C53%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m108 [m[40m[8C{[45;66H[K[45;66H108,1[9C53%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m107 [8Cif[m[40m (root->left == [1m[31mNULL[m[40m)[45;66H[K[45;66H107,1[9C52%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m106 [m[40m[8C[1m[36m// node with only one child or no child[m[40m[45;66H[K[45;66H106,1[9C52%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m105 [m[40m    {[45;66H[K[45;66H105,1[9C51%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m104 [m[40m    [1m[33melse[m[40m[45;66H[K[45;66H104,1[9C51%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m103 [m[40m    [1m[36m// to be deleted[m[40m[45;66H[K[45;66H103,1[9C50%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m102 [m[40m    [1m[36m// if key is same as root's key, then This is the node[m[40m[45;66H[K[45;66H102,1[9C50%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m101 [m[40m[45;66H[K[45;66H101,1[9C49%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m100 [m[40m[8Croot->right = deleteNode(root->right, key);[45;66H[K[45;66H100,1[9C49%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 99 [m[40m    [1m[33melse[m[40m [1m[33mif[m[40m (key > root->key)[45;66H[K[45;66H99,1[10C48%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 98 [m[40m    [1m[36m// then it lies in right subtree[m[40m[45;66H[K[45;66H98,1[10C48%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 97 [m[40m    [1m[36m// If the key to be deleted is greater than the root's key,[m[40m[45;66H[K[45;66H97,1[10C47%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 96 [m[40m[45;66H[K[45;66H96,1[10C47%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 95 [m[40m[8Croot->left = deleteNode(root->left, key);[45;66H[K[45;66H95,1[10C46%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 94 [m[40m    [1m[33mif[m[40m (key < root->key)[45;66H[K[45;66H94,1[10C46%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 93 [m[40m    [1m[36m// then it lies in left subtree[m[40m[45;66H[K[45;66H93,1[10C45%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 92 [m[40m    [1m[36m// If the key to be deleted is smaller than the root's key,[m[40m[45;66H[K[45;66H92,1[10C45%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 91 [m[40m[45;66H[K[45;66H91,1[10C44%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 90 [m[40m    [1m[33mif[m[40m (root == [1m[31mNULL[m[40m) [1m[33mreturn[m[40m root;[45;66H[K[45;66H90,1[10C44%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 89 [m[40m    [1m[36m// base case[m[40m[45;66H[K[45;66H89,1[10C43%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 88 [m[40m[46m{[44;5H}[m[40m[45;66H[K[45;66H88,1[10C43%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 87 [m[40mnodeT *deleteNode(nodeT *root, [1m[32mint[m[40m key)[2;5H{[45;66H[K[45;66H87,1[10C42%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 86 [m[40m[1m[36m   and returns the new root */[m[40m[45;66H[K[45;66H86,1[10C42%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 85 [m[40m[1m[36m/* Given a binary search tree and a key, this function deletes the key[m[40m[45;66H[K[45;66H85,1[10C41%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 84 [m[40m[45;66H[K[45;66H84,0-1[8C41%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 83 [m[40m}[45;66H[K[45;66H83,1[10C40%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 82 [m[40m    [1m[33mreturn[m[40m current;[45;66H[K[45;66H82,1[10C40%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 81 [m[40m[45;66H[K[45;66H81,1[10C39%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 80 [m[40m[8Ccurrent = current->left;[45;66H[K[45;66H80,1[10C39%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 79 [m[40m    [1m[33mwhile[m[40m (current->left != [1m[31mNULL[m[40m)[45;66H[K[45;66H79,1[10C38%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 78 [m[40m    [1m[36m/* loop down to find the leftmost leaf */[m[40m[45;66H[K[45;66H78,1[10C38%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 77 [m[40m[45;66H[K[45;66H77,1[10C37%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 76 [m[40m    nodeT *current = node;[45;66H[K[45;66H76,1[10C37%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 75 [m[40m[46m{[9;5H}[m[40m[45;66H[K[45;66H75,1[10C36%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 74 [m[40mnodeT *minValueNode(nodeT *node)[2;5H{[10;5H}[45;66H[K[45;66H74,1[10C36%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 73 [m[40m[1m[36m   need to be searched. */[m[40m[45;66H[K[45;66H73,1[10C35%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 72 [m[40m[1m[36m   key value found in that tree. Note that the entire tree does not[m[40m[45;66H[K[45;66H72,1[10C35%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 71 [m[40m[1m[36m/* Given a non-empty binary search tree, return the node with minimum[m[40m[45;66H[K[45;66H71,1[10C34%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 70 [m[40m[45;66H[K[45;66H70,0-1[8C34%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 69 [m[40m}[45;66H[K[45;66H69,1[10C33%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 68 [m[40m    }[45;66H[K[45;66H68,1-4[8C33%[1;8H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 67 [m[40m[8CInsertNode(&t->right, key);[45;66H[K[45;66H67,1-4[8C32%[1;8H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 66 [m[40m    } [1m[33melse[m[40m {[45;66H[K[45;66H66,1-4[8C32%[1;8H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 65 [m[40m[8CInsertNode(&t->left, key);[45;66H[K[45;66H65,1-4[8C31%[1;8H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 64 [m[40m    [1m[33mif[m[40m (key < t->key) {[45;66H[K[45;66H64,1-4[8C31%[1;8H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 63 [m[40m     }[45;66H[K[45;66H63,1[10C30%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 62 [9Creturn[m[40m;[45;66H[K[45;66H62,1[10C30%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 61 [m[40m[9C*tptr=tmp;[45;66H[K[45;66H61,1[10C29%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 60 [m[40m[9Ctmp->left=tmp->right=[1m[31mNULL[m[40m;[45;66H[K[45;66H60,1[10C29%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 59 [m[40m[9Ctmp->key = key;[45;66H[K[45;66H59,1[10C28%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 58 [m[40m[9Ctmp=(nodeT *)malloc([1m[33msizeof[m[40m([1m[32mstruct[m[40m nodeT));[45;66H[K[45;66H58,1[10C28%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 57 [m[40m    [1m[33mif[m[40m (t == [1m[31mNULL[m[40m) {[45;66H[K[45;66H57,1-4[8C27%[1;8H[?12l[?25h[?25l[45;67H8,1  [2;5H[?12l[?25h[?25l[45;67H9[3;5H[?12l[?25h[?25l[45;66H60[4;5H[?12l[?25h[?25l[45;67H1[5;5H[?12l[?25h[?25l[45;67H2[6;5H[?12l[?25h[?25l[45;67H3[7;5H[?12l[?25h[?25l[45;67H4,1-4[8;8H[?12l[?25h[?25l[45;67H5[9;8H[?12l[?25h[?25l[45;67H6[10;8H[?12l[?25h[?25l[45;67H7[11;8H[?12l[?25h[?25l[45;67H8[12;8H[?12l[?25h[?25l[45;67H9,1  [13;5H[?12l[?25h[?25l[45;66H70,0-1[14;5H[?12l[?25h[?25l[45;67H1,1  [15;5H[?12l[?25h[?25l[45;67H2[16;5H[?12l[?25h[?25l[45;67H3[17;5H[?12l[?25h[?25l[45;67H4[18;5H[?12l[?25h[?25l[19;5H[46m{[27;5H}[m[40m[45;67H5[19;5H[?12l[?25h[?25l{[27;5H}[45;67H6[20;5H[?12l[?25h[?25l[45;67H7[21;5H[?12l[?25h[?25l[45;67H8[22;5H[?12l[?25h[?25l[45;67H9[23;5H[?12l[?25h[?25l[45;66H80[24;5H[?12l[?25h[?25l[45;67H1[25;5H[?12l[?25h[?25l[45;67H2[26;5H[?12l[?25h[?25l[19;5H[46m{[27;5H}[m[40m[45;67H3[27;5H[?12l[?25h[?25l[19;5H{[27;5H}[45;67H4,0-1[28;5H[?12l[?25h[?25l[45;67H5,1  [29;5H[?12l[?25h[?25l[45;67H6[30;5H[?12l[?25h[?25l[45;67H7[31;5H[?12l[?25h[?25l[45;67H8[32;5H[?12l[?25h[?25l[45;67H9[33;5H[?12l[?25h[?25l[45;66H90[34;5H[?12l[?25h[?25l[45;67H1[35;5H[?12l[?25h[?25l[45;67H2[36;5H[?12l[?25h[?25l[45;67H3[37;5H[?12l[?25h[?25l[45;67H4[38;5H[?12l[?25h[?25l[45;67H5[39;5H[?12l[?25h[?25l[45;67H6[40;5H[?12l[?25h[?25l[45;67H7[41;5H[?12l[?25h[?25l[45;67H8[42;5H[?12l[?25h[?25l[45;67H9[43;5H[?12l[?25h[?25l[45;66H100,1[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m101 [m[40m[45;66H[K[45;66H101,1[9C28%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m102 [m[40m    [1m[36m// if key is same as root's key, then This is the node[m[40m[45;66H[K[45;66H102,1[9C28%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m103 [m[40m    [1m[36m// to be deleted[m[40m[45;66H[K[45;66H103,1[9C29%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m104 [m[40m    [1m[33melse[m[40m[45;66H[K[45;66H104,1[9C29%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m105 [m[40m    {[45;66H[K[45;66H105,1[9C30%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m106 [m[40m[8C[1m[36m// node with only one child or no child[m[40m[45;66H[K[45;66H106,1[9C30%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m107 [8Cif[m[40m (root->left == [1m[31mNULL[m[40m)[45;66H[K[45;66H107,1[9C31%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m108 [m[40m[8C{[45;66H[K[45;66H108,1[9C31%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m109 [m[40m[12CnodeT *temp = root->right;[45;66H[K[45;66H109,1[9C32%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m110 [m[40m[12Cfree(root);[45;66H[K[45;66H110,1[9C32%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m111 [12Creturn[m[40m temp;[45;66H[K[45;66H111,1[9C33%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m112 [m[40m[8C}[45;66H[K[45;66H112,1[9C33%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m113 [8Celse[m[40m [1m[33mif[m[40m (root->right == [1m[31mNULL[m[40m)[45;66H[K[45;66H113,1[9C34%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m114 [m[40m[8C{[45;66H[K[45;66H114,1[9C34%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m115 [m[40m[12CnodeT *temp = root->left;[45;66H[K[45;66H115,1[9C35%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m116 [m[40m[12Cfree(root);[45;66H[K[45;66H116,1[9C35%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m117 [12Creturn[m[40m temp;[45;66H[K[45;66H117,1[9C36%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m118 [m[40m[8C}[45;66H[K[45;66H118,1[9C36%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m119 [m[40m[45;66H[K[45;66H119,1[9C37%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m120 [m[40m[8C[1m[36m// node with two children: Get the inorder successor (smallest[m[40m[45;66H[K[45;66H120,1[9C37%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m121 [m[40m[8C[1m[36m// in the right subtree)[m[40m[45;66H[K[45;66H121,1[9C38%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m122 [m[40m[8CnodeT *temp = minValueNode(root->right);[45;66H[K[45;66H122,1[9C38%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m123 [m[40m[45;66H[K[45;66H123,1[9C39%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m124 [m[40m[8C[1m[36m// Copy the inorder successor's content to this node[m[40m[45;66H[K[45;66H124,1[9C39%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m125 [m[40m[8Croot->key = temp->key;[45;66H[K[45;66H125,1[9C40%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m126 [m[40m[45;66H[K[45;66H126,1[9C40%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m127 [m[40m[8C[1m[36m// Delete the inorder successor[m[40m[45;66H[K[45;66H127,1[9C41%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m128 [m[40m[8Croot->right = deleteNode(root->right, temp->key);[45;66H[K[45;66H128,1[9C41%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m129 [m[40m    }[45;66H[K[45;66H129,1[9C42%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m130 [m[40m    [1m[33mreturn[m[40m root;[45;66H[K[45;66H130,1[9C42%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[1;5H[46m{[m[40m[44;1H[1m[33m131 [m[40m[46m}[m[40m[45;66H[K[45;66H131,1[9C43%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[43;5H}
[1m[33m132 [m[40m[45;66H[K[45;66H132,0-1[7C43%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m133 [m[40m[1m[36m// Operating on tree[m[40m[45;66H[K[45;66H133,1[9C44%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m134 [m[40m[1m[32mint[m[40m height(nodeT *t)[45;66H[K[45;66H134,1[9C44%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m135 [m[40m{[45;66H[K[45;66H135,1[9C45%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m136 [m[40m  [1m[33mif[m[40m (t == [1m[31mNULL[m[40m)[45;66H[K[45;66H136,1[9C45%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m137 [m[40m      [1m[33mreturn[m[40m [1m[31m0[m[40m;[45;66H[K[45;66H137,1[9C46%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m138 [m[40m  [1m[33melse[m[40m[45;66H[K[45;66H138,1[9C46%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m139 [m[40m     [1m[33mreturn[m[40m ([1m[31m1[m[40m + max([45;66H[K[45;66H139,1[9C47%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m140 [m[40m[19Cheight(t->left),[45;66H[K[45;66H140,1[9C47%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m141 [m[40m[19Cheight(t->right)) );[45;66H[K[45;66H141,1[9C48%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[37;5H[46m{[m[40m[44;1H[1m[33m142 [m[40m[46m}[m[40m[45;66H[K[45;66H142,1[9C48%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[36;5H{[43;5H}
[1m[33m143 [m[40m[45;66H[K[45;66H143,0-1[7C49%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m144 [m[40m[1m[32mint[m[40m sum(nodeT *p)[45;66H[K[45;66H144,1[9C49%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m145 [m[40m{[45;66H[K[45;66H145,1[9C50%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m146 [m[40m  [1m[33mif[m[40m (p == [1m[31mNULL[m[40m)[45;66H[K[45;66H146,1[9C50%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m147 [m[40m      [1m[33mreturn[m[40m [1m[31m0[m[40m;[45;66H[K[45;66H147,1[9C51%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m148 [m[40m  [1m[33melse[m[40m[45;66H[K[45;66H148,1[9C51%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m149 [m[40m     [1m[33mreturn[m[40m (p->key +[45;66H[K[45;66H149,1[9C52%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m150 [m[40m[16Csum(p->left) +[45;66H[K[45;66H150,1[9C52%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m151 [m[40m[16Csum(p->right) );[45;66H[K[45;66H151,1[9C53%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[37;5H[46m{[m[40m[44;1H[1m[33m152 [m[40m[46m}[m[40m[45;66H[K[45;66H152,1[9C53%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[36;5H{[43;5H}
[1m[33m153 [m[40m[45;66H[K[45;66H153,0-1[7C54%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m154 [m[40m[1m[32mint[m[40m count(nodeT *p)[45;66H[K[45;66H154,1[9C54%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m155 [m[40m{[45;66H[K[45;66H155,1[9C55%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m156 [m[40m  [1m[33mif[m[40m (p == [1m[31mNULL[m[40m)[45;66H[K[45;66H156,1[9C55%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m157 [m[40m      [1m[33mreturn[m[40m [1m[31m0[m[40m;[45;66H[K[45;66H157,1[9C56%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m158 [m[40m  [1m[33melse[m[40m[45;66H[K[45;66H158,1[9C56%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m159 [m[40m     [1m[33mreturn[m[40m ([1m[31m1[m[40m + count(p->left) + count(p->right) );[45;66H[K[45;66H159,1[9C57%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[39;5H[46m{[m[40m[44;1H[1m[33m160 [m[40m[46m}[m[40m[45;66H[K[45;66H160,1[9C57%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[38;5H{[43;5H}
[1m[33m161 [m[40m[45;66H[K[45;66H161,0-1[7C58%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m162 [m[40m[1m[32mint[m[40m imax(nodeT *p)[45;66H[K[45;66H162,1[9C58%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m163 [m[40m{[45;66H[K[45;66H163,1[9C59%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m164 [m[40m  [1m[32mint[m[40m tmp;[45;66H[K[45;66H164,1[9C59%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m165 [m[40m  [1m[33mif[m[40m (p == [1m[31mNULL[m[40m)[45;66H[K[45;66H165,1[9C60%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m166 [m[40m      [1m[33mreturn[m[40m [1m[31m0[m[40m;[45;66H[K[45;66H166,1[9C60%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m167 [m[40m  [1m[33melse[m[40m[45;66H[K[45;66H167,1[9C61%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m168 [m[40m    [1m[33mreturn[m[40m max(max(p->key, imax(p->left)), max(p->key, imax(p->right)));[45;66H[K[45;66H168,1[9C61%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[38;5H[46m{[m[40m[44;1H[1m[33m169 [m[40m[46m}[m[40m[45;66H[K[45;66H169,1[9C62%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[37;5H{[43;5H}
[1m[33m170 [m[40m[45;66H[K[45;66H170,0-1[7C62%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m171 [m[40m[1m[32mint[m[40m imin(nodeT *p)[45;66H[K[45;66H171,1[9C63%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m172 [m[40m{[45;66H[K[45;66H172,1[9C63%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m173 [m[40m  [1m[33mif[m[40m (p == [1m[31mNULL[m[40m)[45;66H[K[45;66H173,1[9C64%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m174 [m[40m      [1m[33mreturn[m[40m [1m[31m1000[m[40m;[45;66H[K[45;66H174,1[9C64%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m175 [m[40m  [1m[33melse[m[40m[45;66H[K[45;66H175,1[9C65%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m176 [m[40m     [1m[33mreturn[m[40m min(min(p->key, imin(p->left)), min(p->key, imin(p->right)));[45;66H[K[45;66H176,1[9C65%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[39;5H[46m{[m[40m[44;1H[1m[33m177 [m[40m[46m}[m[40m[45;66H[K[45;66H177,1[9C66%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[38;5H{[43;5H}
[1m[33m178 [m[40m[45;66H[K[45;66H178,0-1[7C66%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m179 [m[40m[1m[36m// Printing tree in order[m[40m[45;66H[K[45;66H179,1[9C67%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m180 [m[40m[1m[32mvoid[m[40m DisplayTree(nodeT *t)[45;66H[K[45;66H180,1[9C67%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m181 [m[40m{[45;66H[K[45;66H181,1[9C68%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m182 [m[40m  [1m[33mif[m[40m (t != [1m[31mNULL[m[40m) {[45;66H[K[45;66H182,1[9C68%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m183 [m[40m    DisplayTree(t->left);[45;66H[K[45;66H183,1[9C69%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m184 [m[40m    printf([1m[31m"[m[40m[1m[35m%d[m[40m[1m[31m "[m[40m, t->key);[45;66H[K[45;66H184,1[9C69%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m185 [m[40m    DisplayTree(t->right);[45;66H[K[45;66H185,1[9C70%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m186 [m[40m  }[45;66H[K[45;66H186,1[9C70%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[38;5H[46m{[m[40m[44;1H[1m[33m187 [m[40m[46m}[m[40m[45;66H[K[45;66H187,1[9C71%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[37;5H{[43;5H}
[1m[33m188 [m[40m[45;66H[K[45;66H188,0-1[7C71%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m189 [m[40m[1m[32mvoid[m[40m PreOrder(nodeT *t)[45;66H[K[45;66H189,1[9C72%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m190 [m[40m{[45;66H[K[45;66H190,1[9C72%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m191 [m[40m  [1m[33mif[m[40m (t != [1m[31mNULL[m[40m) {[45;66H[K[45;66H191,1[9C73%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m192 [m[40m    printf([1m[31m"[m[40m[1m[35m%d[m[40m[1m[31m "[m[40m, t->key);[45;66H[K[45;66H192,1[9C73%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m193 [m[40m    PreOrder(t->left);[45;66H[K[45;66H193,1[9C74%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m194 [m[40m    PreOrder(t->right);[45;66H[K[45;66H194,1[9C74%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m195 [m[40m  }[45;66H[K[45;66H195,1[9C75%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[38;5H[46m{[m[40m[44;1H[1m[33m196 [m[40m[46m}[m[40m[45;66H[K[45;66H196,1[9C75%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[37;5H{[43;5H}
[1m[33m197 [m[40m[45;66H[K[45;66H197,0-1[7C76%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m198 [m[40m[1m[32mvoid[m[40m PostOrder(nodeT *t)[45;66H[K[45;66H198,1[9C76%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m199 [m[40m{[45;66H[K[45;66H199,1[9C77%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m200 [m[40m  [1m[33mif[m[40m (t != [1m[31mNULL[m[40m) {[45;66H[K[45;66H200,1[9C77%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m201 [m[40m    PostOrder(t->left);[45;66H[K[45;66H201,1[9C78%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m202 [m[40m    PostOrder(t->right);[45;66H[K[45;66H202,1[9C78%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m203 [m[40m    printf([1m[31m"[m[40m[1m[35m%d[m[40m[1m[31m "[m[40m, t->key);[45;66H[K[45;66H203,1[9C79%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m204 [m[40m  }[45;66H[K[45;66H204,1[9C79%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[38;5H[46m{[m[40m[44;1H[1m[33m205 [m[40m[46m}[m[40m[45;66H[K[45;66H205,1[9C80%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[37;5H{[43;5H}
[1m[33m206 [m[40m[45;66H[K[45;66H206,0-1[7C80%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m207 [m[40m[1m[32mvoid[m[40m LevelOrder(nodeT *t)[45;66H[K[45;66H207,1[9C81%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m208 [m[40m{[45;66H[K[45;66H208,1[9C81%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m209 [m[40m    [1m[32mint[m[40m h = height(t);[45;66H[K[45;66H209,1-4[7C82%[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m210 [m[40m    [1m[32mint[m[40m i;[45;66H[K[45;66H210,1-4[7C82%[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m211 [m[40m    [1m[33mfor[m[40m(i = [1m[31m1[m[40m; i <= h; i++)[45;66H[K[45;66H211,1-4[7C83%[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m212 [m[40m[8CprintLevel(t, i);[45;66H[K[45;66H212,1-4[7C83%[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[39;5H[46m{[m[40m[44;1H[1m[33m213 [m[40m[46m}[m[40m[45;66H[K[45;66H213,1[9C84%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[38;5H{[43;5H}
[1m[33m214 [m[40m[45;66H[K[45;66H214,0-1[7C84%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m215 [m[40m[1m[36m// Private function used to print each level[m[40m[45;66H[K[45;66H215,1[9C85%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m216 [m[40m[1m[32mvoid[m[40m printLevel(nodeT *t, [1m[32mint[m[40m level)[45;66H[K[45;66H216,1[9C85%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m217 [m[40m{[45;66H[K[45;66H217,1[9C86%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m218 [m[40m    [1m[33mif[m[40m(t == [1m[31mNULL[m[40m)[45;66H[K[45;66H218,1-4[7C86%[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m219 [8Creturn[m[40m;[45;66H[K[45;66H219,1-4[7C87%[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m220 [m[40m    [1m[33melse[m[40m [1m[33mif[m[40m(level == [1m[31m1[m[40m)[45;66H[K[45;66H220,1-4[7C87%[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m221 [m[40m[8Cprintf([1m[31m"[m[40m[1m[35m%d[m[40m[1m[31m "[m[40m, t->key);[45;66H[K[45;66H221,1-4[7C88%[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m222 [m[40m    [1m[33melse[m[40m[45;66H[K[45;66H222,1-4[7C88%[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m223 [m[40m    {[45;66H[K[45;66H223,1-4[7C89%[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m224 [m[40m[8CprintLevel(t->left, level - [1m[31m1[m[40m);[45;66H[K[45;66H224,1-4[7C89%[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m225 [m[40m[8CprintLevel(t->right, level - [1m[31m1[m[40m);[45;66H[K[45;66H225,1-4[7C90%[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m226 [m[40m    }[45;66H[K[45;66H226,1-4[7C90%[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[34;5H[46m{[m[40m[44;1H[1m[33m227 [m[40m[46m}[m[40m[45;66H[K[45;66H227,1[9C91%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[33;5H{[43;5H}
[1m[33m228 [m[40m[45;66H[K[45;66H228,0-1[7C91%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m229 [m[40m[1m[32mvoid[m[40m prettyPrintT(nodeT *p, [1m[32mint[m[40m iIndent)[45;66H[K[45;66H229,1[9C92%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m230 [m[40m{[45;66H[K[45;66H230,1[9C92%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m231 [m[40m    [1m[32mint[m[40m i;[45;66H[K[45;66H231,1-4[7C93%[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m232 [m[40m    [1m[33mif[m[40m(p == [1m[31mNULL[m[40m) [1m[33mreturn[m[40m;[45;66H[K[45;66H232,1-4[7C93%[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m233 [m[40m[45;66H[K[45;66H233,0-1[7C94%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m234 [m[40m    prettyPrintT(p->right, iIndent+[1m[31m1[m[40m);[45;66H[K[45;66H234,1-4[7C94%[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m235 [m[40m[45;66H[K[45;66H235,0-1[7C95%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m236 [m[40m    [1m[33mfor[m[40m(i = [1m[31m0[m[40m; i < iIndent; i++)[45;66H[K[45;66H236,1-4[7C95%[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m237 [m[40m    {[45;66H[K[45;66H237,1-4[7C96%[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m238 [m[40m[8Cprintf([1m[31m"    "[m[40m);[45;66H[K[45;66H238,1-4[7C96%[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m239 [m[40m    }[45;66H[K[45;66H239,1-4[7C97%[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m240 [m[40m[45;66H[K[45;66H240,0-1[7C97%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m241 [m[40m    printf([1m[31m"[m[40m[1m[35m%d\n[m[40m[1m[31m"[m[40m, p->key);[45;66H[K[45;66H241,1-4[7C98%[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m242 [m[40m[45;66H[K[45;66H242,0-1[7C98%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[44;1H[1m[33m243 [m[40m    prettyPrintT(p->left, iIndent+[1m[31m1[m[40m);[45;66H[K[45;66H243,1-4[7C99%[44;8H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[30;5H[46m{[m[40m[44;1H[1m[33m244 [m[40m[46m}[m[40m[45;66H[K[45;66H244,1[9C99%[44;5H[?12l[?25h[?25l[1;44r[44;1H
[1;45r[29;5H{[43;5H}
[1m[33m245 [m[40m[45;66H[K[45;66H245,0-1[7CBot[44;5H[?12l[?25h[?25l[29;5H[46m{[43;5H}[m[40m[45;68H4,1  [43;5H[?12l[?25h[?25l[29;5H{[43;5H}[45;68H3,1-4[42;8H[?12l[?25h[?25l[45;68H2,0-1[41;5H[?12l[?25h[?25l[45;68H1,1-4[40;8H[?12l[?25h[?25l[45;68H0,0-1[39;5H[?12l[?25h[?25l[45;67H39,1-4[38;8H[?12l[?25h[?25l[45;68H8[37;8H[?12l[?25h[?25l[45;68H7[36;8H[?12l[?25h[?25l[45;68H6[35;8H[?12l[?25h[?25l[45;68H5,0-1[34;5H[?12l[?25h[?25l[45;68H4,1-4[33;8H[?12l[?25h[?25l[45;68H3,0-1[32;5H[?12l[?25h[?25l[45;68H2,1-4[31;8H[?12l[?25h[?25l[45;68H1[30;8H[?12l[?25h[?25l[29;5H[46m{[43;5H}[m[40m[45;68H0,1  [29;5H[?12l[?25h[?25l{[43;5H}[45;67H29[28;5H[?12l[?25h[?25l[45;68H8,0-1[27;5H[?12l[?25h[?25l[16;5H[46m{[26;5H}[m[40m[45;68H7,1  [26;5H[?12l[?25h[?25l[16;5H{[26;5H}[45;68H6,1-4[25;8H[?12l[?25h[?25l[45;68H5[24;8H[?12l[?25h[?25l[45;68H4[23;8H[?12l[?25h[?25l[45;68H3[22;8H[?12l[?25h[?25l[45;68H2[21;8H[?12l[?25h[?25l[45;68H1[20;8H[?12l[?25h[?25l[45;68H0[19;8H[?12l[?25h[?25l[45;68H1[20;8H[?12l[?25h[?25l[45;68H2[21;8H[?12l[?25h[?25l[45;68H3[22;8H[?12l[?25h[?25l[45;68H4[23;8H[?12l[?25h[?25l[45;68H5[24;8H[?12l[?25h[?25l[45;68H6[25;8H[?12l[?25h[?25l[16;5H[46m{[26;5H}[m[40m[45;68H7,1  [26;5H[?12l[?25h[?25l[16;5H{[26;5H}[45;68H8,0-1[27;5H[?12l[?25h[?25l[45;68H9,1  [28;5H[?12l[?25h[?25l[29;5H[46m{[43;5H}[m[40m[45;67H30[29;5H[?12l[?25h[?25l{[43;5H}[45;68H1,1-4[30;8H[?12l[?25h[?25l[29;5H[46m{[43;5H}[m[40m[45;68H0,1  [29;5H[?12l[?25h[?25l{[43;5H}[45;67H29[28;5H[?12l[?25h[?25l[45;68H8,0-1[27;5H[?12l[?25h[?25l[16;5H[46m{[26;5H}[m[40m[45;68H7,1  [26;5H[?12l[?25h[?25l[16;5H{[26;5H}[45;68H6,1-4[25;8H[?12l[?25h[?25l[45;68H5[24;8H[?12l[?25h[?25l[45;68H4[23;8H[?12l[?25h[?25l[45;68H3[22;8H[?12l[?25h[?25l[45;68H2[21;8H[?12l[?25h[?25l[45;68H1[20;8H[?12l[?25h[?25l[45;68H0[19;8H[?12l[?25h[?25l[45;67H19[18;8H[?12l[?25h[?25l[45;68H8[17;8H[?12l[?25h[?25l[16;5H[46m{[26;5H}[m[40m[45;68H7,1  [16;5H[?12l[?25h[?25l{[26;5H}[45;68H6[15;5H[?12l[?25h[?25l[45;68H5[14;5H[?12l[?25h[?25l[45;68H4,0-1[13;5H[?12l[?25h[?25l[7;5H[46m{[12;5H}[m[40m[45;68H3,1  [12;5H[?12l[?25h[?25l[7;5H{[12;5H}[45;68H2,1-4[11;8H[?12l[?25h[?25l[45;68H1[10;8H[?12l[?25h[?25l[45;68H0[9;8H[?12l[?25h[?25l[45;67H09[8;8H[?12l[?25h[?25l[7;5H[46m{[12;5H}[m[40m[45;68H8,1  [7;5H[?12l[?25h[?25l{[12;5H}[45;68H7[6;5H[?12l[?25h[?25l[45;68H6,0-1[5;5H[?12l[?25h[?25l[45;68H5,1  [4;5H[?12l[?25h[?25l[45;68H4[3;5H[?12l[?25h[?25l[45;68H3[2;5H[?12l[?25h[?25l[45;68H2[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m201 [m[40m    PostOrder(t->left);[45;66H[K[45;66H201,1[9C99%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m200 [m[40m  [1m[33mif[m[40m (t != [1m[31mNULL[m[40m) {[45;66H[K[45;66H200,1[9C99%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m199 [m[40m[46m{[7;5H}[m[40m[45;66H[K[45;66H199,1[9C98%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m198 [m[40m[1m[32mvoid[m[40m PostOrder(nodeT *t)[2;5H{[8;5H}[45;66H[K[45;66H198,1[9C98%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m197 [m[40m[45;66H[K[45;66H197,0-1[7C97%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m196 [m[40m}[45;66H[K[45;66H196,1[9C97%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m195 [m[40m  }[45;66H[K[45;66H195,1[9C96%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m194 [m[40m    PreOrder(t->right);[45;66H[K[45;66H194,1[9C96%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m193 [m[40m    PreOrder(t->left);[45;66H[K[45;66H193,1[9C95%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m192 [m[40m    printf([1m[31m"[m[40m[1m[35m%d[m[40m[1m[31m "[m[40m, t->key);[45;66H[K[45;66H192,1[9C95%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m191 [m[40m  [1m[33mif[m[40m (t != [1m[31mNULL[m[40m) {[45;66H[K[45;66H191,1[9C94%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m190 [m[40m[46m{[7;5H}[m[40m[45;66H[K[45;66H190,1[9C94%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m189 [m[40m[1m[32mvoid[m[40m PreOrder(nodeT *t)[2;5H{[8;5H}[45;66H[K[45;66H189,1[9C93%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m188 [m[40m[45;66H[K[45;66H188,0-1[7C93%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m187 [m[40m}[45;66H[K[45;66H187,1[9C92%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m186 [m[40m  }[45;66H[K[45;66H186,1[9C92%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m185 [m[40m    DisplayTree(t->right);[45;66H[K[45;66H185,1[9C91%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m184 [m[40m    printf([1m[31m"[m[40m[1m[35m%d[m[40m[1m[31m "[m[40m, t->key);[45;66H[K[45;66H184,1[9C91%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m183 [m[40m    DisplayTree(t->left);[45;66H[K[45;66H183,1[9C90%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m182 [m[40m  [1m[33mif[m[40m (t != [1m[31mNULL[m[40m) {[45;66H[K[45;66H182,1[9C90%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m181 [m[40m[46m{[7;5H}[m[40m[45;66H[K[45;66H181,1[9C89%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m180 [m[40m[1m[32mvoid[m[40m DisplayTree(nodeT *t)[2;5H{[8;5H}[45;66H[K[45;66H180,1[9C89%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m179 [m[40m[1m[36m// Printing tree in order[m[40m[45;66H[K[45;66H179,1[9C88%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m178 [m[40m[45;66H[K[45;66H178,0-1[7C88%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m177 [m[40m}[45;66H[K[45;66H177,1[9C87%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m176 [m[40m     [1m[33mreturn[m[40m min(min(p->key, imin(p->left)), min(p->key, imin(p->right)));[45;66H[K[45;66H176,1[9C87%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m175 [m[40m  [1m[33melse[m[40m[45;66H[K[45;66H175,1[9C86%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m174 [m[40m      [1m[33mreturn[m[40m [1m[31m1000[m[40m;[45;66H[K[45;66H174,1[9C86%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m173 [m[40m  [1m[33mif[m[40m (p == [1m[31mNULL[m[40m)[45;66H[K[45;66H173,1[9C85%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m172 [m[40m[46m{[6;5H}[m[40m[45;66H[K[45;66H172,1[9C85%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m171 [m[40m[1m[32mint[m[40m imin(nodeT *p)[2;5H{[7;5H}[45;66H[K[45;66H171,1[9C84%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m170 [m[40m[45;66H[K[45;66H170,0-1[7C84%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m169 [m[40m}[45;66H[K[45;66H169,1[9C83%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m168 [m[40m    [1m[33mreturn[m[40m max(max(p->key, imax(p->left)), max(p->key, imax(p->right)));[45;66H[K[45;66H168,1[9C83%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m167 [m[40m  [1m[33melse[m[40m[45;66H[K[45;66H167,1[9C82%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m166 [m[40m      [1m[33mreturn[m[40m [1m[31m0[m[40m;[45;66H[K[45;66H166,1[9C82%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m165 [m[40m  [1m[33mif[m[40m (p == [1m[31mNULL[m[40m)[45;66H[K[45;66H165,1[9C81%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m164 [m[40m  [1m[32mint[m[40m tmp;[45;66H[K[45;66H164,1[9C81%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m163 [m[40m[46m{[7;5H}[m[40m[45;66H[K[45;66H163,1[9C80%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m162 [m[40m[1m[32mint[m[40m imax(nodeT *p)[2;5H{[8;5H}[45;66H[K[45;66H162,1[9C80%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m161 [m[40m[45;66H[K[45;66H161,0-1[7C79%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m160 [m[40m}[45;66H[K[45;66H160,1[9C79%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m159 [m[40m     [1m[33mreturn[m[40m ([1m[31m1[m[40m + count(p->left) + count(p->right) );[45;66H[K[45;66H159,1[9C78%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m158 [m[40m  [1m[33melse[m[40m[45;66H[K[45;66H158,1[9C78%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m157 [m[40m      [1m[33mreturn[m[40m [1m[31m0[m[40m;[45;66H[K[45;66H157,1[9C77%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m156 [m[40m  [1m[33mif[m[40m (p == [1m[31mNULL[m[40m)[45;66H[K[45;66H156,1[9C77%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m155 [m[40m[46m{[6;5H}[m[40m[45;66H[K[45;66H155,1[9C76%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m154 [m[40m[1m[32mint[m[40m count(nodeT *p)[2;5H{[7;5H}[45;66H[K[45;66H154,1[9C76%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m153 [m[40m[45;66H[K[45;66H153,0-1[7C75%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m152 [m[40m}[45;66H[K[45;66H152,1[9C75%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m151 [m[40m[16Csum(p->right) );[45;66H[K[45;66H151,1[9C74%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m150 [m[40m[16Csum(p->left) +[45;66H[K[45;66H150,1[9C74%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m149 [m[40m     [1m[33mreturn[m[40m (p->key +[45;66H[K[45;66H149,1[9C73%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m148 [m[40m  [1m[33melse[m[40m[45;66H[K[45;66H148,1[9C73%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m147 [m[40m      [1m[33mreturn[m[40m [1m[31m0[m[40m;[45;66H[K[45;66H147,1[9C72%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m146 [m[40m  [1m[33mif[m[40m (p == [1m[31mNULL[m[40m)[45;66H[K[45;66H146,1[9C72%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m145 [m[40m[46m{[8;5H}[m[40m[45;66H[K[45;66H145,1[9C71%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m144 [m[40m[1m[32mint[m[40m sum(nodeT *p)[2;5H{[9;5H}[45;66H[K[45;66H144,1[9C71%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m143 [m[40m[45;66H[K[45;66H143,0-1[7C70%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m142 [m[40m}[45;66H[K[45;66H142,1[9C70%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m141 [m[40m[19Cheight(t->right)) );[45;66H[K[45;66H141,1[9C69%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m140 [m[40m[19Cheight(t->left),[45;66H[K[45;66H140,1[9C69%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m139 [m[40m     [1m[33mreturn[m[40m ([1m[31m1[m[40m + max([45;66H[K[45;66H139,1[9C68%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m138 [m[40m  [1m[33melse[m[40m[45;66H[K[45;66H138,1[9C68%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m137 [m[40m      [1m[33mreturn[m[40m [1m[31m0[m[40m;[45;66H[K[45;66H137,1[9C67%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m136 [m[40m  [1m[33mif[m[40m (t == [1m[31mNULL[m[40m)[45;66H[K[45;66H136,1[9C67%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m135 [m[40m[46m{[8;5H}[m[40m[45;66H[K[45;66H135,1[9C66%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m134 [m[40m[1m[32mint[m[40m height(nodeT *t)[2;5H{[9;5H}[45;66H[K[45;66H134,1[9C66%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m133 [m[40m[1m[36m// Operating on tree[m[40m[45;66H[K[45;66H133,1[9C65%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m132 [m[40m[45;66H[K[45;66H132,0-1[7C65%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m131 [m[40m}[45;66H[K[45;66H131,1[9C64%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m130 [m[40m    [1m[33mreturn[m[40m root;[45;66H[K[45;66H130,1[9C64%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m129 [m[40m    }[45;66H[K[45;66H129,1[9C63%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m128 [m[40m[8Croot->right = deleteNode(root->right, temp->key);[45;66H[K[45;66H128,1[9C63%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m127 [m[40m[8C[1m[36m// Delete the inorder successor[m[40m[45;66H[K[45;66H127,1[9C62%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m126 [m[40m[45;66H[K[45;66H126,1[9C62%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m125 [m[40m[8Croot->key = temp->key;[45;66H[K[45;66H125,1[9C61%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m124 [m[40m[8C[1m[36m// Copy the inorder successor's content to this node[m[40m[45;66H[K[45;66H124,1[9C61%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m123 [m[40m[45;66H[K[45;66H123,1[9C60%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m122 [m[40m[8CnodeT *temp = minValueNode(root->right);[45;66H[K[45;66H122,1[9C60%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m121 [m[40m[8C[1m[36m// in the right subtree)[m[40m[45;66H[K[45;66H121,1[9C59%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m120 [m[40m[8C[1m[36m// node with two children: Get the inorder successor (smallest[m[40m[45;66H[K[45;66H120,1[9C59%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m119 [m[40m[45;66H[K[45;66H119,1[9C58%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m118 [m[40m[8C}[45;66H[K[45;66H118,1[9C58%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m117 [12Creturn[m[40m temp;[45;66H[K[45;66H117,1[9C57%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m116 [m[40m[12Cfree(root);[45;66H[K[45;66H116,1[9C57%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m115 [m[40m[12CnodeT *temp = root->left;[45;66H[K[45;66H115,1[9C56%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m114 [m[40m[8C{[45;66H[K[45;66H114,1[9C56%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m113 [8Celse[m[40m [1m[33mif[m[40m (root->right == [1m[31mNULL[m[40m)[45;66H[K[45;66H113,1[9C55%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m112 [m[40m[8C}[45;66H[K[45;66H112,1[9C55%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m111 [12Creturn[m[40m temp;[45;66H[K[45;66H111,1[9C54%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m110 [m[40m[12Cfree(root);[45;66H[K[45;66H110,1[9C54%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m109 [m[40m[12CnodeT *temp = root->right;[45;66H[K[45;66H109,1[9C53%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m108 [m[40m[8C{[45;66H[K[45;66H108,1[9C53%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m107 [8Cif[m[40m (root->left == [1m[31mNULL[m[40m)[45;66H[K[45;66H107,1[9C52%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m106 [m[40m[8C[1m[36m// node with only one child or no child[m[40m[45;66H[K[45;66H106,1[9C52%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m105 [m[40m    {[45;66H[K[45;66H105,1[9C51%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m104 [m[40m    [1m[33melse[m[40m[45;66H[K[45;66H104,1[9C51%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m103 [m[40m    [1m[36m// to be deleted[m[40m[45;66H[K[45;66H103,1[9C50%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m102 [m[40m    [1m[36m// if key is same as root's key, then This is the node[m[40m[45;66H[K[45;66H102,1[9C50%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m101 [m[40m[45;66H[K[45;66H101,1[9C49%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m100 [m[40m[8Croot->right = deleteNode(root->right, key);[45;66H[K[45;66H100,1[9C49%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 99 [m[40m    [1m[33melse[m[40m [1m[33mif[m[40m (key > root->key)[45;66H[K[45;66H99,1[10C48%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 98 [m[40m    [1m[36m// then it lies in right subtree[m[40m[45;66H[K[45;66H98,1[10C48%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 97 [m[40m    [1m[36m// If the key to be deleted is greater than the root's key,[m[40m[45;66H[K[45;66H97,1[10C47%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 96 [m[40m[45;66H[K[45;66H96,1[10C47%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 95 [m[40m[8Croot->left = deleteNode(root->left, key);[45;66H[K[45;66H95,1[10C46%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 94 [m[40m    [1m[33mif[m[40m (key < root->key)[45;66H[K[45;66H94,1[10C46%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 93 [m[40m    [1m[36m// then it lies in left subtree[m[40m[45;66H[K[45;66H93,1[10C45%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 92 [m[40m    [1m[36m// If the key to be deleted is smaller than the root's key,[m[40m[45;66H[K[45;66H92,1[10C45%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 91 [m[40m[45;66H[K[45;66H91,1[10C44%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 90 [m[40m    [1m[33mif[m[40m (root == [1m[31mNULL[m[40m) [1m[33mreturn[m[40m root;[45;66H[K[45;66H90,1[10C44%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 89 [m[40m    [1m[36m// base case[m[40m[45;66H[K[45;66H89,1[10C43%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 88 [m[40m[46m{[44;5H}[m[40m[45;66H[K[45;66H88,1[10C43%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 87 [m[40mnodeT *deleteNode(nodeT *root, [1m[32mint[m[40m key)[2;5H{[45;66H[K[45;66H87,1[10C42%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 86 [m[40m[1m[36m   and returns the new root */[m[40m[45;66H[K[45;66H86,1[10C42%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 85 [m[40m[1m[36m/* Given a binary search tree and a key, this function deletes the key[m[40m[45;66H[K[45;66H85,1[10C41%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 84 [m[40m[45;66H[K[45;66H84,0-1[8C41%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 83 [m[40m}[45;66H[K[45;66H83,1[10C40%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 82 [m[40m    [1m[33mreturn[m[40m current;[45;66H[K[45;66H82,1[10C40%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 81 [m[40m[45;66H[K[45;66H81,1[10C39%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 80 [m[40m[8Ccurrent = current->left;[45;66H[K[45;66H80,1[10C39%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 79 [m[40m    [1m[33mwhile[m[40m (current->left != [1m[31mNULL[m[40m)[45;66H[K[45;66H79,1[10C38%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 78 [m[40m    [1m[36m/* loop down to find the leftmost leaf */[m[40m[45;66H[K[45;66H78,1[10C38%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 77 [m[40m[45;66H[K[45;66H77,1[10C37%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 76 [m[40m    nodeT *current = node;[45;66H[K[45;66H76,1[10C37%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 75 [m[40m[46m{[9;5H}[m[40m[45;66H[K[45;66H75,1[10C36%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 74 [m[40mnodeT *minValueNode(nodeT *node)[2;5H{[10;5H}[45;66H[K[45;66H74,1[10C36%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 73 [m[40m[1m[36m   need to be searched. */[m[40m[45;66H[K[45;66H73,1[10C35%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 72 [m[40m[1m[36m   key value found in that tree. Note that the entire tree does not[m[40m[45;66H[K[45;66H72,1[10C35%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 71 [m[40m[1m[36m/* Given a non-empty binary search tree, return the node with minimum[m[40m[45;66H[K[45;66H71,1[10C34%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 70 [m[40m[45;66H[K[45;66H70,0-1[8C34%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 69 [m[40m}[45;66H[K[45;66H69,1[10C33%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 68 [m[40m    }[45;66H[K[45;66H68,1-4[8C33%[1;8H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 67 [m[40m[8CInsertNode(&t->right, key);[45;66H[K[45;66H67,1-4[8C32%[1;8H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 66 [m[40m    } [1m[33melse[m[40m {[45;66H[K[45;66H66,1-4[8C32%[1;8H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 65 [m[40m[8CInsertNode(&t->left, key);[45;66H[K[45;66H65,1-4[8C31%[1;8H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 64 [m[40m    [1m[33mif[m[40m (key < t->key) {[45;66H[K[45;66H64,1-4[8C31%[1;8H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 63 [m[40m     }[45;66H[K[45;66H63,1[10C30%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 62 [9Creturn[m[40m;[45;66H[K[45;66H62,1[10C30%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 61 [m[40m[9C*tptr=tmp;[45;66H[K[45;66H61,1[10C29%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 60 [m[40m[9Ctmp->left=tmp->right=[1m[31mNULL[m[40m;[45;66H[K[45;66H60,1[10C29%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 59 [m[40m[9Ctmp->key = key;[45;66H[K[45;66H59,1[10C28%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 58 [m[40m[9Ctmp=(nodeT *)malloc([1m[33msizeof[m[40m([1m[32mstruct[m[40m nodeT));[45;66H[K[45;66H58,1[10C28%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 57 [m[40m    [1m[33mif[m[40m (t == [1m[31mNULL[m[40m) {[45;66H[K[45;66H57,1-4[8C27%[1;8H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 56 [m[40m    [1m[36m// printf("**tptr = %p, *tptr = %d, tptr = %p", **tptr, *tptr->key, &tptr);[m[40m[45;66H[K[45;66H56,1[10C27%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 55 [m[40m    [1m[36m// printf("---Insert Node---\n");[m[40m[45;66H[K[45;66H55,1[10C26%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 54 [m[40m     t=*tptr;[45;66H[K[45;66H54,1[10C26%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 53 [m[40m     nodeT  *t, *tmp;[45;66H[K[45;66H53,1[10C25%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 52 [m[40m[46m{[18;5H}[m[40m[45;66H[K[45;66H52,1[10C25%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 51 [m[40m[1m[32mvoid[m[40m InsertNode(nodeT  **tptr, [1m[32mint[m[40m key)[2;5H{[19;5H}[45;66H[K[45;66H51,1[10C24%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 50 [m[40m[1m[36m// Manipulating tree[m[40m[45;66H[K[45;66H50,1[10C24%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 49 [m[40m[45;66H[K[45;66H49,0-1[8C23%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 48 [m[40m}[45;66H[K[45;66H48,1[10C23%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 47 [m[40m  }[45;66H[K[45;66H47,1[10C22%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 46 [m[40m     [1m[33mreturn[m[40m FindNode(t->right, key);[45;66H[K[45;66H46,1[10C22%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 45 [m[40m   } [1m[33melse[m[40m {[45;66H[K[45;66H45,1[10C21%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 44 [m[40m     [1m[33mreturn[m[40m FindNode(t->left, key);[45;66H[K[45;66H44,1[10C21%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 43 [m[40m   [1m[33mif[m[40m (key < t->key) {[45;66H[K[45;66H43,1[10C20%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 42 [m[40m   [1m[33mif[m[40m (key == t->key) [1m[33mreturn[m[40m t;[45;66H[K[45;66H42,1[10C20%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 41 [m[40m   [1m[33mif[m[40m (t == [1m[31mNULL[m[40m) [1m[33mreturn[m[40m [1m[31mNULL[m[40m;[45;66H[K[45;66H41,1[10C19%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 40 [m[40m[46m{[9;5H}[m[40m[45;66H[K[45;66H40,1[10C19%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 39 [m[40mnodeT *FindNode(nodeT *t, [1m[32mint[m[40m key)[2;5H{[10;5H}[45;66H[K[45;66H39,1[10C18%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 38 [m[40m[45;66H[K[45;66H38,0-1[8C18%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 37 [m[40m}[45;66H[K[45;66H37,1[10C17%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 36 [m[40m    free(tree);[45;66H[K[45;66H36,1-4[8C17%[1;8H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 35 [m[40m    FreeTree(tree->right);[45;66H[K[45;66H35,1-4[8C16%[1;8H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 34 [m[40m    FreeTree(tree->left);[45;66H[K[45;66H34,1-4[8C16%[1;8H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 33 [8Creturn[m[40m;[45;66H[K[45;66H33,1-4[8C15%[1;8H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 32 [m[40m    [1m[33mif[m[40m(tree == [1m[31mNULL[m[40m)[45;66H[K[45;66H32,1-4[8C15%[1;8H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 31 [m[40m[46m{[7;5H}[m[40m[45;66H[K[45;66H31,1[10C14%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 30 [m[40m[1m[32mvoid[m[40m FreeTree(nodeT *tree)[2;5H{[8;5H}[45;66H[K[45;66H30,1[10C14%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 29 [m[40m[45;66H[K[45;66H29,1-4[8C13%[1;8H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 28 [m[40m[1m[36m}*/[m[40m[45;66H[K[45;66H28,1[10C13%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 27 [m[40m[1m[36m    return tmp;[m[40m[45;66H[K[45;66H27,1-4[8C12%[1;8H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 26 [m[40m[1m[36m    //tmp = NULL;[m[40m[45;66H[K[45;66H26,1-4[8C12%[1;8H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 25 [m[40m[1m[36m    printf("new tree: %p key = %d\n", tmp, tmp->key);[m[40m[45;66H[K[45;66H25,1-4[8C11%[1;8H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 24 [m[40m[1m[36m    tmp->key = 0;[m[40m[45;66H[K[45;66H24,1-4[8C11%[1;8H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 23 [m[40m[1m[36m    tmp->right = tmp->left = NULL;[m[40m[45;66H[K[45;66H23,1-4[8C10%[1;8H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 22 [m[40m[1m[36m    if(tmp == NULL) return NULL;[m[40m[45;66H[K[45;66H22,1-4[8C10%[1;8H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 21 [m[40m[1m[36m    tmp = (treeT)malloc(sizeof(nodeT *)); // allocate for pointer but not node [m[40m[45;66H[K[45;66H21,1-4[9C9%[1;8H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 20 [m[40m[1m[36m    //tmp = (treeT)malloc(sizeof(struct nodeT)); // allocate nodeT structure wh[m[40m[45;66H[K[45;66H20,1-4[9C9%[1;8H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 19 [m[40m[1m[36m    treeT tmp;[m[40m[45;66H[K[45;66H19,1-4[9C8%[1;8H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 18 [m[40m[1m[36m[46m{[11;5H}[m[40m[1m[36m*/[m[40m[45;66H[K[45;66H18,1[11C8%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 17 [m[40m[1m[36m/*nodeT *NewBinaryTree() // Create empty binary tree[2;5H{[12;5H}*/[m[40m[45;66H[K[45;66H17,1[11C7%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 16 [m[40m[45;66H[K[45;66H16,0-1[9C7%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 15 [m[40m[1m[36m}*/[m[40m[45;66H[K[45;66H15,1[11C6%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 14 [m[40m[1m[36m    return tmp;[m[40m[45;66H[K[45;66H14,1-4[9C6%[1;8H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 13 [m[40m[1m[36m    tmp->root = tmp->right = tmp->left = NULL;[m[40m[45;66H[K[45;66H13,1-4[9C5%[1;8H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 12 [m[40m[1m[36m    if(tmp == NULL) return NULL;[m[40m[45;66H[K[45;66H12,1-4[9C5%[1;8H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 11 [m[40m[1m[36m    tmp = (treeADT)malloc(sizeof(struct treeADT));[m[40m[45;66H[K[45;66H11,1-4[9C4%[1;8H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m 10 [m[40m[1m[36m    treeADT tmp;[m[40m[45;66H[K[45;66H10,1-4[9C4%[1;8H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m  9 [m[40m[1m[36m[46m{[7;5H}[m[40m[1m[36m*/[m[40m[45;66H[K[45;66H9,1[12C3%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m  8 [m[40m[1m[36m/*treeADT NewBinaryTree() // Create empty binary tree[2;5H{[8;5H}*/[m[40m[45;66H[K[45;66H8,1[12C3%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m  7 [m[40m[1m[36m// Tree Methods[m[40m[45;66H[K[45;66H7,1[12C2%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m  6 [m[40m[1m[34m#define min(a,b) (a>b?b:a)[m[40m[45;66H[K[45;66H6,1[12C2%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m  5 [m[40m[1m[34m#define max(a,b) (a>b?a:b)[m[40m[45;66H[K[45;66H5,1[12C1%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m  4 [m[40m[45;66H[K[45;66H4,0-1[10C1%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m  3 [m[40m[1m[34m#include [m[40m[1m[31m"tree.h"[m[40m[45;66H[K[45;66H3,1[12C0%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m  2 [m[40m[1m[34m#include [m[40m[1m[31m<stdlib.h>[m[40m[45;66H[K[45;66H2,1[12C0%[1;5H[?12l[?25h[?25l[1;44r[1;1H[L[1;45r[1;1H[1m[33m  1 [m[40m[1m[34m#include [m[40m[1m[31m<stdio.h>[m[40m[45;66H[K[45;66H1,1[11CTop[1;5H[?12l[?25h[?25l[45;66H21,40-43[21;47H[?12l[?25h[?25l[45;67H0[20;47H[?12l[?25h[?25l[45;70H1-44[20;48H[?12l[?25h[?25l[45;66H[K[45;1H:[?12l[?25hq[?25l[?12l[?25h[?25l[1m[37m[41mE37: No write since last change (add ! to override)[m[40m
[1m[37m[41mE162: No write since last change for buffer "tree.c"[?1002l[m[40m
[1m[32mPress ENTER or type command to continue[?12l[?25h[?1002h[m[40m[1;1H[2L[?25l[1;1H[1m[33m  1 [m[40m[1m[34m#include [m[40m[1m[31m<stdio.h>[m[40m
[1m[33m  2 [m[40m[1m[34m#include [m[40m[1m[31m<stdlib.h>[m[40m[45;1H[K[45;66H20,41-44      Top[20;48H[?12l[?25h[?25l[45;66H[K[45;1H:[?12l[?25hw[?25l[?12l[?25hq[?25l[?12l[?25h[?25l[?1002l"tree.c" [dos] 245L, 5285C written]2;Thanks for flying Vim
[39;49m[?1l>[?12l[?25h[?1049l[4mfox04[24m:[1m~/Desktop/BinaryTree[0m> quit
quit: Command not found.
[4mfox04[24m:[1m~/Desktop/BinaryTree[0m> exit
exit

Script done on Thu 10 Nov 2016 12:41:54 PM CST
